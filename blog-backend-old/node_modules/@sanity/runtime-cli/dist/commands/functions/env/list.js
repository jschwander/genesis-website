import { Args } from '@oclif/core';
import ora from 'ora';
import { list } from '../../../actions/functions/env/list.js';
import { DeployedBlueprintCommand } from '../../../baseCommands.js';
import { findFunctionByName } from '../../../utils/find-function.js';
export default class EnvListCommand extends DeployedBlueprintCommand {
    static args = {
        name: Args.string({ description: 'The name of the Sanity Function', required: true }),
    };
    static description = 'List the environment variables for a Sanity function';
    static examples = ['<%= config.bin %> <%= command.id %> MyFunction'];
    async run() {
        const args = this.args;
        const spinner = ora(`Listing environment variables for "${args.name}"`).start();
        const { externalId } = findFunctionByName(this.deployedStack, args.name);
        const result = await list(externalId, this.auth);
        if (!result.ok) {
            spinner.stop();
            this.error(`Error: ${result.error || 'Unknown error'}`);
        }
        spinner.succeed(`Environment variables for "${args.name}"`);
        for (const key of result.envvars) {
            this.log(key);
        }
    }
}
