{"version":3,"file":"pane.js","sources":["../../src/structure/components/DocTitle.tsx","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialogBody.styles.tsx","../../src/structure/components/paneItem/PaneItemPreview.tsx","../../src/structure/components/paneRouter/BackLink.tsx","../../src/structure/components/pane/usePaneLayout.ts","../../src/structure/components/paneRouter/ChildLink.tsx","../../src/structure/components/paneRouter/ParameterizedLink.tsx","../../src/structure/components/paneRouter/ReferenceChildLink.tsx","../../src/structure/components/paneRouter/usePaneRouter.ts","../../src/structure/components/confirmDeleteDialog/ReferencePreviewLink.tsx","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialogBody.tsx","../../src/structure/components/confirmDeleteDialog/useReferringDocuments.ts","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialog.tsx","../../src/structure/components/confirmDeleteDialog/index.tsx","../../src/structure/components/Delay.tsx","../../src/structure/components/pane/constants.ts","../../src/structure/components/pane/PaneDivider.tsx","../../src/structure/components/pane/Pane.tsx","../../src/structure/components/pane/PaneContent.styles.tsx","../../src/structure/components/pane/usePane.ts","../../src/structure/components/pane/PaneContent.tsx","../../src/structure/util/toLowerCaseNoSpaces.tsx","../../src/structure/components/pane/PaneMenuButtonItem.tsx","../../src/structure/components/pane/PaneContextMenuButton.tsx","../../src/structure/components/pane/PaneFooter.styles.tsx","../../src/structure/components/pane/PaneFooter.tsx","../../src/structure/components/pane/PaneHeader.styles.tsx","../../src/structure/components/pane/PaneHeader.tsx","../../src/structure/components/pane/PaneHeaderActionButton.tsx","../../src/structure/components/pane/PaneLayout.styles.tsx","../../src/structure/components/pane/helpers/_calcPaneResize.ts","../../src/structure/components/pane/helpers/_getDOMPath.ts","../../src/structure/components/pane/helpers/_sortElements.ts","../../src/structure/components/pane/paneLayoutController.ts","../../src/structure/components/pane/PaneLayout.tsx","../../src/structure/menuNodes.ts","../../src/structure/components/IntentButton.tsx","../../src/structure/components/paneHeaderActions/InsufficientPermissionsMessageTooltip.tsx","../../src/structure/components/paneHeaderActions/PaneHeaderCreateButton.tsx","../../src/structure/components/paneHeaderActions/PaneHeaderActions.tsx","../../src/structure/components/MissingSchemaType.tsx","../../src/structure/components/paneItem/PaneItem.tsx","../../src/structure/components/RenderActionCollectionState.tsx","../../src/structure/components/RenderBadgeCollectionState.tsx","../../src/structure/diffView/hooks/useCreatePathSyncChannel.ts","../../src/structure/diffView/constants.ts","../../src/structure/diffView/hooks/useDiffViewRouter.ts","../../src/structure/diffView/types/diffViewMode.ts","../../src/structure/diffView/hooks/useDiffViewState.ts","../../src/structure/diffView/hooks/useScrollMirror.tsx","../../src/structure/diffView/versionMode/components/VersionModeHeader.tsx","../../src/structure/diffView/components/DialogLayout.ts","../../src/structure/panes/document/document-layout/pickDocumentLayoutComponent.ts","../../src/structure/diffView/hooks/usePathSyncChannel.ts","../../src/structure/diffView/components/Scroller.ts","../../src/structure/diffView/components/DiffViewPane.tsx","../../src/structure/diffView/components/EditReferenceLinkComponent.tsx","../../src/structure/diffView/components/DiffView.tsx","../../src/structure/diffView/plugin/DiffViewDocumentLayout.tsx","../../src/structure/panes/error/ErrorPane.tsx","../../src/structure/panes/loading/getWaitMessages.ts","../../src/structure/panes/loading/LoadingPane.tsx","../../src/structure/panes/document/useDocumentPane.tsx","../../src/structure/panes/document/comments/CommentsWrapper.tsx","../../src/structure/hooks/useFilteredReleases.ts","../../src/structure/hooks/useDocumentIdStack.ts","../../src/structure/useStructureTool.ts","../../src/structure/panes/document/constants.ts","../../src/structure/panes/document/DocumentInspectorMenuItemsResolver.tsx","../../src/structure/panes/document/useDocumentTitle.ts","../../src/structure/panes/document/DocumentOperationResults.tsx","../../src/structure/components/paneItem/helpers.tsx","../../src/structure/panes/document/documentInspector/DocumentInspectorHeader.tsx","../../src/structure/panes/document/documentInspector/DocumentInspectorPanel.tsx","../../src/structure/useStructureToolSetting.ts","../../src/structure/panes/document/inspectDialog/constants.ts","../../src/structure/panes/document/inspectDialog/helpers.ts","../../src/structure/panes/document/inspectDialog/InspectDialog.styles.tsx","../../src/structure/panes/document/inspectDialog/Search.tsx","../../src/structure/panes/document/inspectDialog/InspectDialog.tsx","../../src/structure/panes/document/documentPanel/banners/Banner.tsx","../../src/structure/panes/document/documentPanel/banners/DeletedDocumentBanners.tsx","../../src/structure/panes/document/documentPanel/banners/DeprecatedDocumentTypeBanner.tsx","../../src/structure/components/requestPermissionDialog/__telemetry__/RequestPermissionDialog.telemetry.ts","../../src/structure/components/requestPermissionDialog/RequestPermissionDialog.tsx","../../src/structure/components/requestPermissionDialog/useRoleRequestsStatus.tsx","../../src/structure/panes/document/documentPanel/banners/InsufficientPermissionBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ReferenceChangedBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ArchivedReleaseDocumentBanner.tsx","../../src/structure/panes/document/documentPanel/banners/CanvasLinkedBanner.tsx","../../src/structure/panes/document/documentPanel/banners/CreateLinkedBanner.tsx","../../src/structure/panes/document/documentPanel/documentViews/useConditionalToast.ts","../../src/structure/panes/document/documentPanel/banners/DocumentNotInReleaseBanner.tsx","../../src/structure/panes/document/documentPanel/banners/__telemetry__/DraftLiveEditBanner.telemetry.ts","../../src/structure/panes/document/documentPanel/banners/DraftLiveEditBanner.tsx","../../src/structure/panes/document/documentPanel/banners/OpenReleaseToEditBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ScheduledReleaseBanner.tsx","../../src/structure/panes/document/documentPanel/banners/UnpublishedDocumentBanner.tsx","../../src/structure/panes/document/documentPanel/documentViews/FormHeader.tsx","../../src/structure/panes/document/documentPanel/documentViews/FormView.tsx","../../src/structure/panes/document/documentPanel/header/DocumentHeaderTabs.tsx","../../src/structure/panes/document/documentPanel/header/DocumentHeaderTitle.tsx","../../src/structure/panes/document/documentPanel/header/FavoriteToggle.tsx","../../src/structure/panes/document/documentPanel/header/DocumentPanelSubHeader.tsx","../../src/structure/panes/document/documentPanel/DocumentPanel.tsx","../../src/structure/constants.ts","../../src/structure/panes/document/statusBar/dialogs/constants.ts","../../src/structure/panes/document/statusBar/dialogs/ConfirmDialog.tsx","../../src/structure/panes/document/statusBar/dialogs/ModalDialog.tsx","../../src/structure/panes/document/statusBar/dialogs/PopoverDialog.tsx","../../src/structure/panes/document/statusBar/ActionStateDialog.tsx","../../src/structure/panes/document/statusBar/ActionMenuButton.tsx","../../src/structure/documentActions/DeleteAction.tsx","../../src/structure/documentActions/DiscardChangesAction.tsx","../../src/structure/documentActions/DuplicateAction.tsx","../../src/structure/documentActions/HistoryRestoreAction.tsx","../../src/structure/documentActions/__telemetry__/documentActions.telemetry.ts","../../src/structure/documentActions/PublishAction.tsx","../../src/structure/documentActions/UnpublishAction.tsx","../../src/structure/panes/document/statusBar/DocumentStatusBarActions.tsx","../../src/structure/panes/document/documentPanel/header/perspective/DocumentPerspectiveList.tsx","../../src/structure/panes/document/documentPanel/header/DocumentPanelHeader.tsx","../../src/structure/components/spacerButton/SpacerButton.tsx","../../src/structure/panes/document/statusBar/DocumentBadges.tsx","../../src/structure/panes/document/timeline/constants.ts","../../src/structure/panes/document/timeline/helpers.ts","../../src/structure/panes/document/timeline/expandableTimelineItemButton.tsx","../../src/structure/panes/document/timeline/timeline.styled.tsx","../../src/structure/panes/document/timeline/timelineI18n.ts","../../src/structure/panes/document/timeline/userAvatarStack.tsx","../../src/structure/panes/document/timeline/timelineItem.tsx","../../src/structure/panes/document/timeline/utils.ts","../../src/structure/panes/document/timeline/timeline.tsx","../../src/structure/panes/document/timeline/TimelineError.tsx","../../src/structure/panes/document/timeline/timelineMenu.tsx","../../src/structure/panes/document/statusBar/DocumentStatusPulse/AnimatedStatusIcon.tsx","../../src/structure/panes/document/statusBar/DocumentStatusPulse/DocumentStatusPulse.tsx","../../src/structure/panes/document/statusBar/DocumentStatusLine.tsx","../../src/structure/panes/document/statusBar/RevisionStatusLine.tsx","../../src/structure/panes/document/statusBar/useResizeObserver.ts","../../src/structure/panes/document/statusBar/DocumentStatusBar.tsx","../../src/structure/panes/document/keyboardShortcuts/DocumentActionShortcuts.tsx","../../src/structure/panes/document/menuItems.ts","../../src/structure/panes/document/document-layout/DocumentLayoutError.tsx","../../src/structure/panes/document/document-layout/DocumentLayoutFooter.tsx","../../src/structure/panes/document/document-layout/DocumentLayout.tsx","../../src/structure/panes/document/document-layout/useDocumentLayoutComponent.ts","../../src/structure/panes/document/__telemetry__/documentPanes.telemetry.ts","../../src/structure/panes/document/getInitialValueTemplateOpts.ts","../../src/structure/panes/document/useDocumentPaneInitialValue.ts","../../src/structure/panes/document/useDocumentPaneInspector.ts","../../src/structure/panes/document/usePreviewUrl.ts","../../src/structure/panes/document/DocumentPaneProvider.tsx","../../src/structure/panes/document/DocumentEventsPane.tsx","../../src/structure/panes/document/DocumentPaneLegacyTimeline.tsx","../../src/structure/panes/document/DocumentPaneProviderWrapper.tsx","../../src/structure/panes/document/useResetHistoryParams.ts","../../src/structure/panes/document/DocumentPane.tsx","../../src/structure/panes/documentList/constants.ts","../../src/structure/panes/documentList/DocumentListPaneContent.tsx","../../src/structure/panes/documentList/helpers.ts","../../src/structure/panes/documentList/listenSearchQuery.ts","../../src/structure/panes/documentList/useDocumentList.ts","../../src/structure/panes/documentList/DocumentListPane.tsx","../../src/structure/panes/documentList/PaneHeader.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListSelect.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListProvider.tsx","../../src/structure/panes/documentList/sheetList/SheetListCell.tsx","../../src/structure/panes/documentList/sheetList/useDocumentSheetColumns.tsx","../../src/structure/panes/documentList/sheetList/ColumnsControl.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListFilter.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListHeader.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListPaginator.tsx","../../src/structure/panes/documentList/sheetList/useDocumentSheetListStore.ts","../../src/structure/panes/documentList/sheetList/useDocumentSheetList.ts","../../src/structure/panes/documentList/sheetList/DocumentSheetListPane.tsx","../../src/structure/panes/documentList/PaneContainer.tsx","../../src/structure/documentBadges/LiveEditBadge.ts","../../src/structure/getIntentState.ts","../../src/structure/panes/document/inspectors/changes/ChangesInspector.tsx","../../src/structure/panes/document/timeline/events/EventTimelineItem.tsx","../../src/structure/panes/document/timeline/events/PublishedEventMenu.tsx","../../src/structure/panes/document/timeline/events/EventsTimeline.tsx","../../src/structure/panes/document/timeline/events/EventsTimelineMenu.tsx","../../src/structure/panes/document/inspectors/changes/EventsInspector.tsx","../../src/structure/panes/document/inspectors/changes/EventsSelector.tsx","../../src/structure/panes/document/inspectors/changes/HistorySelector.tsx","../../src/structure/panes/document/inspectors/changes/ChangesTabs.tsx","../../src/structure/panes/document/inspectors/changes/index.ts","../../src/structure/panes/document/inspectors/validation/getPathTitles.ts","../../src/structure/panes/document/inspectors/validation/ValidationInspector.tsx","../../src/structure/panes/document/inspectors/validation/index.ts","../../src/structure/router.ts","../../src/structure/structureTool.ts"],"sourcesContent":["import {type SanityDocumentLike} from '@sanity/types'\nimport {unstable_useValuePreview as useValuePreview, useSchema, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nexport interface DocTitleProps {\n  document: SanityDocumentLike\n}\n\nexport function DocTitle(props: DocTitleProps) {\n  const {document: documentValue} = props\n  const schema = useSchema()\n  const schemaType = schema.get(documentValue._type)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const {error, value} = useValuePreview({\n    schemaType: schemaType!,\n    value: documentValue,\n  })\n\n  if (!schemaType) {\n    return <code>{t('doc-title.unknown-schema-type.text', {schemaType: documentValue._type})}</code>\n  }\n\n  if (error) {\n    return <>{t('doc-title.error.text', {errorMessage: error.message})}</>\n  }\n\n  return (\n    <>\n      {value?.title || (\n        <span style={{color: 'var(--card-muted-fg-color)'}}>{t('doc-title.fallback.text')}</span>\n      )}\n    </>\n  )\n}\n","import {InfoOutlineIcon} from '@sanity/icons'\nimport {Box, Flex, Inline, rem, Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Tooltip} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\n\nexport const ChevronWrapper = styled(Box)`\n  margin-left: auto;\n`\n\nexport const CrossDatasetReferencesDetails = styled.details`\n  flex: none;\n\n  &[open] ${ChevronWrapper} {\n    transform: rotate(180deg);\n  }\n`\n\nexport const CrossDatasetReferencesSummary = styled.summary`\n  list-style: none;\n\n  &::-webkit-details-marker {\n    display: none;\n  }\n`\n\nexport const Table = styled.table`\n  width: 100%;\n  text-align: left;\n  padding: 0 ${({theme}) => rem(theme.sanity.space[2])};\n  border-collapse: collapse;\n\n  th {\n    padding: ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  td {\n    padding: 0 ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  tr > *:last-child {\n    text-align: right;\n  }\n`\n\nexport const DocumentIdFlex = styled(Flex)`\n  min-height: 33px;\n`\n\nexport const OtherReferenceCount = (props: {totalCount: number; references: unknown[]}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const difference = props.totalCount - props.references.length\n\n  if (!difference) return null\n\n  return (\n    <Box padding={2}>\n      <Inline space={2}>\n        <Text size={1} muted>\n          {t('confirm-delete-dialog.other-reference-count.title', {count: difference})}\n        </Text>\n\n        <Tooltip\n          portal\n          placement=\"top\"\n          content={t('confirm-delete-dialog.other-reference-count.tooltip')}\n        >\n          <Text size={1} muted>\n            <InfoOutlineIcon />\n          </Text>\n        </Tooltip>\n      </Inline>\n    </Box>\n  )\n}\n","import {type SanityDocument, type SchemaType} from '@sanity/types'\nimport {Flex} from '@sanity/ui'\nimport {type ComponentType, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  type DocumentPresence,\n  DocumentPreviewPresence,\n  type DocumentPreviewStore,\n  DocumentStatus,\n  DocumentStatusIndicator,\n  type GeneralPreviewLayoutKey,\n  getPreviewStateObservable,\n  getPreviewValueWithFallback,\n  SanityDefaultPreview,\n  useDocumentVersionInfo,\n  usePerspective,\n} from 'sanity'\n\nimport {TooltipDelayGroupProvider} from '../../../ui-components'\n\nexport interface PaneItemPreviewProps {\n  documentPreviewStore: DocumentPreviewStore\n  icon: ComponentType | false\n  layout: GeneralPreviewLayoutKey\n  presence?: DocumentPresence[]\n  schemaType: SchemaType\n  value: SanityDocument\n}\n\n/**\n * Preview component for _documents_ rendered in structure panes.\n *\n * Note that non-document previews are not handled by this component,\n * despite being pane items! Non-document previews bypass this entirely\n * and are rendered by `<SanityDefaultPreview>`.\n */\nexport function PaneItemPreview(props: PaneItemPreviewProps) {\n  const {icon, layout, presence, schemaType, value} = props\n\n  const versionsInfo = useDocumentVersionInfo(value._id)\n\n  const {perspectiveStack} = usePerspective()\n  const previewStateObservable = useMemo(() => {\n    return getPreviewStateObservable(\n      props.documentPreviewStore,\n      schemaType,\n      value._id,\n      perspectiveStack,\n    )\n  }, [props.documentPreviewStore, schemaType, value._id, perspectiveStack])\n\n  const {\n    snapshot,\n    original,\n    isLoading: previewIsLoading,\n  } = useObservable(previewStateObservable, {\n    snapshot: null,\n    isLoading: true,\n    original: null,\n  })\n\n  const isLoading = previewIsLoading\n\n  const status = isLoading ? null : (\n    <TooltipDelayGroupProvider>\n      <Flex align=\"center\" gap={3}>\n        {presence && presence.length > 0 && <DocumentPreviewPresence presence={presence} />}\n        <DocumentStatusIndicator\n          draft={versionsInfo.draft}\n          published={versionsInfo.published}\n          versions={versionsInfo.versions}\n        />\n      </Flex>\n    </TooltipDelayGroupProvider>\n  )\n\n  const tooltip = (\n    <DocumentStatus\n      draft={versionsInfo.draft}\n      published={versionsInfo.published}\n      versions={versionsInfo.versions}\n    />\n  )\n\n  return (\n    <SanityDefaultPreview\n      {...getPreviewValueWithFallback({snapshot, original, fallback: value})}\n      isPlaceholder={isLoading}\n      icon={icon}\n      layout={layout}\n      status={status}\n      tooltip={tooltip}\n    />\n  )\n}\n","import {type ComponentType, type ForwardedRef, forwardRef, useContext, useMemo} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\nimport {type BackLinkProps} from './types'\n\n/**\n * @internal\n */\nexport const BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n  const panes = useMemo(() => routerPanesState.slice(0, groupIndex), [groupIndex, routerPanesState])\n  const state = useMemo(() => ({panes}), [panes])\n\n  return <StateLink {...props} ref={ref} state={state} />\n}) as ComponentType<BackLinkProps>\n","import {useContext} from 'react'\nimport {PaneLayoutContext} from 'sanity/_singletons'\n\nimport {type PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePaneLayout(): PaneLayoutContextValue {\n  const pane = useContext(PaneLayoutContext)\n\n  if (!pane) {\n    throw new Error('PaneLayout: missing context value')\n  }\n\n  return pane\n}\n","import {type ForwardedRef, forwardRef, useContext} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\nimport {type ChildLinkProps} from './types'\n\n/**\n * @internal\n */\nexport const ChildLink = forwardRef(function ChildLink(\n  props: ChildLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {childId, childPayload, childParameters, ...rest} = props\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n\n  return (\n    <StateLink\n      {...rest}\n      ref={ref}\n      state={{\n        panes: [\n          ...routerPanesState.slice(0, groupIndex + 1),\n          [{id: childId, params: childParameters, payload: childPayload}],\n        ],\n      }}\n    />\n  )\n})\n","import {type ForwardedRef, forwardRef, type ReactNode, useContext, useMemo} from 'react'\nimport {useUnique} from 'sanity'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\ninterface ParameterizedLinkProps {\n  params?: Record<string, string>\n  payload?: unknown\n  children?: ReactNode\n}\n\n/**\n * @internal\n */\nexport const ParameterizedLink = forwardRef(function ParameterizedLink(\n  props: ParameterizedLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {routerPanesState: currentPanes, groupIndex, siblingIndex} = useContext(PaneRouterContext)\n  const {params, payload, ...rest} = props\n  const nextParams = useUnique(params)\n  const nextPayload = useUnique(payload)\n\n  const nextState = useMemo(() => {\n    const currentGroup = currentPanes[groupIndex]\n    const currentSibling = currentGroup[siblingIndex]\n\n    const nextSibling = {\n      ...currentSibling,\n      params: nextParams ?? currentSibling.params,\n      payload: nextPayload ?? currentSibling.payload,\n    }\n\n    const nextGroup = [\n      ...currentGroup.slice(0, siblingIndex),\n      nextSibling,\n      ...currentGroup.slice(siblingIndex + 1),\n    ]\n\n    const nextPanes = [\n      ...currentPanes.slice(0, groupIndex),\n      nextGroup,\n      ...currentPanes.slice(groupIndex + 1),\n    ]\n\n    return {panes: nextPanes}\n  }, [currentPanes, groupIndex, nextParams, nextPayload, siblingIndex])\n\n  return <StateLink ref={ref} {...rest} state={nextState} />\n})\n","import {toString as pathToString} from '@sanity/util/paths'\nimport {type ForwardedRef, forwardRef} from 'react'\n\nimport {ChildLink} from './ChildLink'\nimport {type ReferenceChildLinkProps} from './types'\n\nexport const ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  {documentId, documentType, parentRefPath, children, template, ...rest}: ReferenceChildLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  return (\n    <ChildLink\n      {...rest}\n      ref={ref}\n      childId={documentId}\n      childPayload={template?.params}\n      childParameters={{\n        type: documentType,\n        parentRefPath: pathToString(parentRefPath),\n        ...(template && {template: template?.id}),\n      }}\n    >\n      {children}\n    </ChildLink>\n  )\n})\n","import {useContext} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\n\nimport {type PaneRouterContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta\n */\nexport function usePaneRouter(): PaneRouterContextValue {\n  return useContext(PaneRouterContext)\n}\n","import {type SanityDocument, type SchemaType} from '@sanity/types'\nimport {type ReactNode, useCallback} from 'react'\nimport {\n  type FIXME,\n  getPublishedId,\n  PreviewCard,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n} from 'sanity'\n\nimport {PaneItemPreview} from '../paneItem/PaneItemPreview'\nimport {usePaneRouter} from '../paneRouter'\n\nconst EMPTY_ARRAY: [] = []\n\ninterface ReferencePreviewLinkProps {\n  onClick?: () => void\n  type: SchemaType & {icon?: any}\n  value: SanityDocument\n}\n\nexport function ReferencePreviewLink(props: ReferencePreviewLinkProps) {\n  const {onClick, type, value} = props\n  const publishedId = getPublishedId(value?._id)\n  const documentPresence = useDocumentPresence(publishedId)\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ReferenceChildLink} = usePaneRouter()\n\n  const Link = useCallback(\n    function LinkComponent(linkProps: {children: ReactNode}) {\n      return (\n        <ReferenceChildLink\n          documentId={value?._id}\n          documentType={type?.name}\n          parentRefPath={EMPTY_ARRAY}\n          {...linkProps}\n        />\n      )\n    },\n    [ReferenceChildLink, type?.name, value?._id],\n  )\n\n  return (\n    <PreviewCard __unstable_focusRing as={Link as FIXME} data-as=\"a\" onClick={onClick} radius={2}>\n      <PaneItemPreview\n        documentPreviewStore={documentPreviewStore}\n        icon={type?.icon}\n        layout=\"compact\"\n        presence={documentPresence?.length > 0 ? documentPresence : EMPTY_ARRAY}\n        schemaType={type}\n        value={value}\n      />\n    </PreviewCard>\n  )\n}\n","import {\n  ChevronDownIcon,\n  CopyIcon,\n  DocumentsIcon,\n  UnknownIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {Box, Card, Flex, Stack, Text, useToast} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {SanityDefaultPreview, Translate, useSchema, useTranslation} from 'sanity'\n\nimport {Button} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {\n  ChevronWrapper,\n  CrossDatasetReferencesDetails,\n  CrossDatasetReferencesSummary,\n  DocumentIdFlex,\n  OtherReferenceCount,\n  Table,\n} from './ConfirmDeleteDialogBody.styles'\nimport {ReferencePreviewLink} from './ReferencePreviewLink'\nimport {type ReferringDocuments} from './useReferringDocuments'\n\ntype DeletionConfirmationDialogBodyProps = Required<ReferringDocuments> & {\n  documentTitle: React.ReactNode\n  action: 'unpublish' | 'delete'\n  onReferenceLinkClick?: () => void\n}\n\n/**\n * The inner part of the `ConfirmDeleteDialog`. This is ran when both the\n * `crossDatasetReferences` and `internalReferences` are loaded.\n */\nexport function ConfirmDeleteDialogBody({\n  crossDatasetReferences,\n  internalReferences,\n  documentTitle,\n  totalCount,\n  action,\n  datasetNames,\n  hasUnknownDatasetNames,\n  onReferenceLinkClick,\n}: DeletionConfirmationDialogBodyProps) {\n  const schema = useSchema()\n  const toast = useToast()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const renderPreviewItem = useCallback(\n    (item: any) => {\n      const type = schema.get(item._type)\n      if (type) {\n        return <ReferencePreviewLink type={type} value={item} onClick={onReferenceLinkClick} />\n      }\n\n      return (\n        // Padding added to match the ReferencePreviewLink styling\n        <Box padding={2}>\n          <SanityDefaultPreview\n            icon={UnknownIcon}\n            title={t('confirm-delete-dialog.preview-item.preview-unavailable.title')}\n            subtitle={t('confirm-delete-dialog.preview-item.preview-unavailable.subtitle', {\n              documentId: item._id,\n            })}\n            layout=\"default\"\n          />\n        </Box>\n      )\n    },\n    [schema, t, onReferenceLinkClick],\n  )\n\n  if (internalReferences?.totalCount === 0 && crossDatasetReferences?.totalCount === 0) {\n    return (\n      <Text as=\"p\" size={1}>\n        <Translate\n          t={t}\n          i18nKey=\"confirm-delete-dialog.confirmation.text\"\n          context={action}\n          components={{DocumentTitle: () => <strong>{documentTitle}</strong>}}\n        />\n      </Text>\n    )\n  }\n\n  // We do some extra checks to handle cases where you have unavailable dataset\n  // name(s) due to permissions, both alone and in combination with known datasets\n\n  // This normalizes one or more undefined dataset names to the catch-all `unavailable`\n  const normalizedDatasetNames = [\n    ...datasetNames,\n    ...(hasUnknownDatasetNames ? ['unavailable'] : []),\n  ]\n\n  const datasetSubtitle = t('confirm-delete-dialog.cdr-summary.subtitle', {\n    count: normalizedDatasetNames.length,\n    datasets: normalizedDatasetNames.join(', '),\n    context: hasUnknownDatasetNames && normalizedDatasetNames.length ? 'unavailable' : '',\n  })\n\n  return (\n    <Flex direction=\"column\" gap={4}>\n      <Card padding={3} radius={2} tone=\"caution\" flex=\"none\">\n        <Flex>\n          <Text aria-hidden=\"true\" size={1}>\n            <WarningOutlineIcon />\n          </Text>\n          <Box flex={1} marginLeft={3}>\n            <Text size={1}>\n              <Translate\n                i18nKey=\"confirm-delete-dialog.referring-document-count.text\"\n                components={{DocumentTitle: () => documentTitle}}\n                t={t}\n                values={{count: totalCount}}\n              />\n            </Text>\n          </Box>\n        </Flex>\n      </Card>\n      <Box flex=\"none\">\n        <Text size={1}>\n          <Translate\n            i18nKey=\"confirm-delete-dialog.referring-documents-descriptor.text\"\n            t={t}\n            context={action}\n            components={{DocumentTitle: () => documentTitle}}\n          />\n        </Text>\n      </Box>\n      <Card radius={2} shadow={1} flex=\"auto\" padding={2}>\n        <Flex direction=\"column\">\n          {internalReferences.totalCount > 0 && (\n            <Stack as=\"ul\" marginBottom={2} space={2} data-testid=\"internal-references\">\n              {internalReferences?.references.map((item) => (\n                <Box as=\"li\" key={item._id}>\n                  {renderPreviewItem(item)}\n                </Box>\n              ))}\n\n              {internalReferences.totalCount > internalReferences.references.length && (\n                <Box as=\"li\" padding={3}>\n                  <OtherReferenceCount {...internalReferences} />\n                </Box>\n              )}\n            </Stack>\n          )}\n\n          {crossDatasetReferences.totalCount > 0 && (\n            <CrossDatasetReferencesDetails\n              data-testid=\"cross-dataset-references\"\n              style={{\n                // only add the border if needed\n                borderTop:\n                  internalReferences.totalCount > 0\n                    ? '1px solid var(--card-shadow-outline-color)'\n                    : undefined,\n              }}\n            >\n              <CrossDatasetReferencesSummary>\n                <Card\n                  as=\"a\"\n                  marginTop={internalReferences.totalCount > 0 ? 2 : 0}\n                  radius={2}\n                  shadow={1}\n                  paddingY={1}\n                >\n                  <Flex align=\"center\" gap={3} paddingX={3} paddingY={1}>\n                    <Text size={1}>\n                      <DocumentsIcon />\n                    </Text>\n                    <Stack space={2}>\n                      <Text textOverflow=\"ellipsis\" size={1}>\n                        {t('confirm-delete-dialog.cdr-summary.title', {\n                          count: normalizedDatasetNames.length,\n                          documentCount: t('confirm-delete-dialog.cdr-summary.document-count', {\n                            count: crossDatasetReferences.totalCount,\n                          }),\n                        })}\n                      </Text>\n                      <Text title={datasetSubtitle} textOverflow=\"ellipsis\" size={1} muted>\n                        {datasetSubtitle}\n                      </Text>\n                    </Stack>\n                    <ChevronWrapper>\n                      <Text muted size={1}>\n                        <ChevronDownIcon />\n                      </Text>\n                    </ChevronWrapper>\n                  </Flex>\n                </Card>\n              </CrossDatasetReferencesSummary>\n\n              <Box overflow=\"auto\" paddingTop={2}>\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>\n                        <Text muted size={1} style={{minWidth: '5rem'}} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.project-id.label')}\n                        </Text>\n                      </th>\n                      <th>\n                        <Text muted size={1} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.dataset.label')}\n                        </Text>\n                      </th>\n                      <th>\n                        <Text muted size={1} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.document-id.label')}\n                        </Text>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {crossDatasetReferences.references\n                      .filter((reference): reference is Required<typeof reference> => {\n                        return 'projectId' in reference\n                      })\n                      .map(({projectId, datasetName, documentId}, index) => (\n                        // eslint-disable-next-line react/no-array-index-key\n                        <tr key={`${documentId}-${index}`}>\n                          <td>\n                            <Text size={1}>{projectId}</Text>\n                          </td>\n                          <td>\n                            <Text size={1}>{datasetName || 'unavailable'}</Text>\n                          </td>\n                          <td>\n                            <DocumentIdFlex align=\"center\" gap={2} justify=\"flex-end\">\n                              <Text textOverflow=\"ellipsis\" size={1}>\n                                {documentId || 'unavailable'}\n                              </Text>\n                              {documentId && (\n                                <Button\n                                  mode=\"bleed\"\n                                  icon={CopyIcon}\n                                  tooltipProps={{\n                                    content: t(\n                                      'confirm-delete-dialog.cdr-table.copy-id-button.tooltip',\n                                    ),\n                                  }}\n                                  // eslint-disable-next-line react/jsx-no-bind\n                                  onClick={() => {\n                                    navigator.clipboard.writeText(documentId).catch(() => {\n                                      toast.push({\n                                        status: 'error',\n                                        title: t(\n                                          'confirm-delete-dialog.cdr-table.id-copied-toast.title-failed',\n                                        ),\n                                      })\n                                    })\n                                  }}\n                                />\n                              )}\n                            </DocumentIdFlex>\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </Table>\n\n                <OtherReferenceCount {...crossDatasetReferences} />\n              </Box>\n            </CrossDatasetReferencesDetails>\n          )}\n        </Flex>\n      </Card>\n      <Box flex=\"none\">\n        <Text size={1}>\n          <Translate\n            i18nKey=\"confirm-delete-dialog.referential-integrity-disclaimer.text\"\n            t={t}\n            context={action}\n            components={{DocumentTitle: () => documentTitle}}\n          />\n        </Text>\n      </Box>\n    </Flex>\n  )\n}\n","import {type ClientError, type SanityClient} from '@sanity/client'\nimport {useMemo} from 'react'\nimport {EMPTY, fromEvent, type Observable, of, timer} from 'rxjs'\nimport {\n  catchError,\n  distinctUntilChanged,\n  map,\n  shareReplay,\n  startWith,\n  switchMap,\n} from 'rxjs/operators'\nimport {\n  type AvailabilityResponse,\n  createHookFromObservableFactory,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  type DocumentStore,\n  getDraftId,\n  getPublishedId,\n  useClient,\n  useDocumentStore,\n} from 'sanity'\n\n// this is used in place of `instanceof` so the matching can be more robust and\n// won't have any issues with dual packages etc\n// https://nodejs.org/api/packages.html#dual-package-hazard\nfunction isClientError(e: unknown): e is ClientError {\n  if (typeof e !== 'object') return false\n  if (!e) return false\n  return 'statusCode' in e && 'response' in e\n}\n\nconst POLL_INTERVAL = 5000\n\n// only fetches when the document is visible\nlet visiblePoll$: Observable<number>\nconst getVisiblePoll$ = () => {\n  if (!visiblePoll$) {\n    visiblePoll$ = fromEvent(document, 'visibilitychange').pipe(\n      // add empty emission to have this fire on creation\n      startWith(null),\n      map(() => document.visibilityState === 'visible'),\n      distinctUntilChanged(),\n      switchMap((visible) =>\n        visible\n          ? // using timer instead of interval since timer will emit on creation\n            timer(0, POLL_INTERVAL)\n          : EMPTY,\n      ),\n      shareReplay({refCount: true, bufferSize: 1}),\n    )\n  }\n  return visiblePoll$\n}\n\nexport type ReferringDocuments = {\n  isLoading: boolean\n  totalCount: number\n  projectIds: string[]\n  datasetNames: string[]\n  hasUnknownDatasetNames: boolean\n  internalReferences?: {\n    totalCount: number\n    references: Array<{_id: string; _type: string}>\n  }\n  crossDatasetReferences?: {\n    totalCount: number\n    references: Array<{\n      /**\n       * The project ID of the document that is currently referencing the subject\n       * document. Unlike `documentId` and `datasetName`, this should always be\n       * defined.\n       */\n      projectId: string\n      /**\n       * The ID of the document that is currently referencing the subject\n       * document. This will be omitted if there is no access to the current\n       * project and dataset pair (e.g. if no `sanity-project-token` were\n       * configured)\n       */\n      documentId?: string\n      /**\n       * The dataset name that is currently referencing the subject document.\n       * This will be omitted if there is no access to the current project and\n       * dataset pair (e.g. if no `sanity-project-token` were configured)\n       */\n      datasetName?: string\n    }>\n  }\n}\n\nfunction getDocumentExistence(\n  documentId: string,\n  {versionedClient}: {versionedClient: SanityClient},\n): Observable<string | undefined> {\n  const draftId = getDraftId(documentId)\n  const publishedId = getPublishedId(documentId)\n  const requestOptions = {\n    uri: versionedClient.getDataUrl('doc', `${draftId},${publishedId}`),\n    json: true,\n    query: {excludeContent: 'true'},\n    tag: 'use-referring-documents.document-existence',\n  }\n  return versionedClient.observable.request<AvailabilityResponse>(requestOptions).pipe(\n    map(({omitted}) => {\n      const nonExistant = omitted.filter((doc) => doc.reason === 'existence')\n      if (nonExistant.length === 2) {\n        // None of the documents exist\n        return undefined\n      }\n\n      if (nonExistant.length === 0) {\n        // Both exist, so use the published one\n        return publishedId\n      }\n\n      // If the draft does not exist, use the published ID, and vice versa\n      return nonExistant.some((doc) => doc.id === draftId) ? publishedId : draftId\n    }),\n  )\n}\n\n/**\n * fetches the cross-dataset references using the client observable.request\n * method (for that requests can be automatically cancelled)\n */\nfunction fetchCrossDatasetReferences(\n  documentId: string,\n  context: {versionedClient: SanityClient},\n): Observable<ReferringDocuments['crossDatasetReferences']> {\n  const {versionedClient} = context\n\n  return getVisiblePoll$().pipe(\n    switchMap(() => getDocumentExistence(documentId, context)),\n    switchMap((checkDocumentId) => {\n      if (!checkDocumentId) {\n        return of({totalCount: 0, references: []})\n      }\n\n      const currentDataset = versionedClient.config().dataset\n\n      return versionedClient.observable\n        .request({\n          url: `/data/references/${currentDataset}/documents/${checkDocumentId}/to?excludeInternalReferences=true&excludePaths=true`,\n          tag: 'use-referring-documents.external',\n        })\n        .pipe(\n          catchError((e) => {\n            // it's possible that referencing document doesn't exist yet so the\n            // API will return a 404. In those cases, we want to catch and return\n            // a response with no references\n            if (isClientError(e) && e.statusCode === 404) {\n              return of({totalCount: 0, references: []})\n            }\n\n            throw e\n          }),\n        )\n    }),\n  )\n}\n\nconst useInternalReferences = createHookFromObservableFactory(\n  ([documentId, documentStore]: [string, DocumentStore]) => {\n    const referencesClause = '*[references($documentId)][0...100]{_id,_type}'\n    const totalClause = 'count(*[references($documentId)])'\n    const fetchQuery = `{\"references\":${referencesClause},\"totalCount\":${totalClause}}`\n    const listenQuery = '*[references($documentId)]'\n\n    return documentStore.listenQuery(\n      {fetch: fetchQuery, listen: listenQuery},\n      {documentId},\n      {tag: 'use-referring-documents', transitions: ['appear', 'disappear'], throttleTime: 5000},\n    ) as Observable<ReferringDocuments['internalReferences']>\n  },\n)\n\nconst useCrossDatasetReferences = createHookFromObservableFactory(\n  ([documentId, versionedClient]: [string, SanityClient]) => {\n    // (documentId: string, versionedClient: SanityClient) => {\n    return getVisiblePoll$().pipe(\n      switchMap(() =>\n        fetchCrossDatasetReferences(documentId, {\n          versionedClient,\n        }),\n      ),\n    )\n  },\n)\n\nexport function useReferringDocuments(documentId: string): ReferringDocuments {\n  const versionedClient = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n\n  const documentStore = useDocumentStore()\n  const publishedId = getPublishedId(documentId)\n\n  const [internalReferences, isInternalReferencesLoading] = useInternalReferences(\n    useMemo(() => [publishedId, documentStore], [documentStore, publishedId]),\n  )\n\n  const [crossDatasetReferences, isCrossDatasetReferencesLoading] = useCrossDatasetReferences(\n    useMemo(() => [publishedId, versionedClient], [publishedId, versionedClient]),\n  )\n\n  const projectIds = useMemo(() => {\n    return Array.from(\n      new Set(\n        crossDatasetReferences?.references\n          .map((crossDatasetReference) => crossDatasetReference.projectId)\n          .filter(Boolean),\n      ),\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const datasetNames = useMemo(() => {\n    return Array.from(\n      new Set<string>(\n        crossDatasetReferences?.references\n          // .filter((name) => typeof name === 'string')\n          .map((crossDatasetReference) => crossDatasetReference?.datasetName || '')\n          .filter((datasetName) => Boolean(datasetName) && datasetName !== ''),\n      ),\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const hasUnknownDatasetNames = useMemo(() => {\n    return Boolean(\n      crossDatasetReferences?.references.some(\n        (crossDatasetReference) => typeof crossDatasetReference.datasetName !== 'string',\n      ),\n    )\n  }, [crossDatasetReferences?.references])\n\n  return {\n    totalCount: (internalReferences?.totalCount || 0) + (crossDatasetReferences?.totalCount || 0),\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n    internalReferences,\n    crossDatasetReferences,\n    isLoading: isInternalReferencesLoading || isCrossDatasetReferencesLoading,\n  }\n}\n","import {Box, Flex} from '@sanity/ui'\nimport {useId, useMemo} from 'react'\nimport {LoadingBlock, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Dialog} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {DocTitle} from '../DocTitle'\nimport {ConfirmDeleteDialogBody} from './ConfirmDeleteDialogBody'\nimport {useReferringDocuments} from './useReferringDocuments'\n\n/** @internal */\nexport const DialogBody = styled(Box)`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 110px;\n`\n\n/** @internal */\nexport interface ConfirmDeleteDialogProps {\n  /**\n   * Incoming document ID used to find other referencing documents. This\n   * field respects draft IDs (e.g. if you pass in a published ID when one\n   * doesn't exist the document title may not show up).\n   */\n  id: string\n  /**\n   * The schema typename of the incoming document\n   */\n  type: string\n  /**\n   * The name of the action being done. (e.g. the `'unpublish'` action requires\n   * the same document deletion confirmation).\n   */\n  action?: 'delete' | 'unpublish'\n  onCancel: () => void\n  onConfirm: () => void\n}\n\n/**\n * A confirmation dialog used to prevent unwanted document deletes. Loads all\n * the referencing internal and cross-data references prior to showing the\n * delete button.\n *\n * @internal\n */\nexport function ConfirmDeleteDialog({\n  id,\n  type,\n  action = 'delete',\n  onCancel,\n  onConfirm,\n}: ConfirmDeleteDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const dialogId = `deletion-confirmation-${useId()}`\n  const {\n    internalReferences,\n    crossDatasetReferences,\n    isLoading,\n    totalCount,\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n  } = useReferringDocuments(id)\n  const documentTitle = <DocTitle document={useMemo(() => ({_id: id, _type: type}), [id, type])} />\n  const showConfirmButton = !isLoading\n\n  return (\n    <Dialog\n      width={1}\n      id={dialogId}\n      header={t('confirm-delete-dialog.header.text', {context: action})}\n      footer={{\n        cancelButton: {\n          onClick: onCancel,\n          text: t('confirm-delete-dialog.cancel-button.text'),\n        },\n        confirmButton: showConfirmButton\n          ? {\n              text:\n                totalCount > 0\n                  ? t('confirm-delete-dialog.confirm-anyway-button.text', {context: action})\n                  : t('confirm-delete-dialog.confirm-button.text', {context: action}),\n              onClick: onConfirm,\n            }\n          : undefined,\n      }}\n      onClose={onCancel}\n      onClickOutside={onCancel}\n    >\n      <DialogBody>\n        {crossDatasetReferences && internalReferences && !isLoading ? (\n          <ConfirmDeleteDialogBody\n            crossDatasetReferences={crossDatasetReferences}\n            internalReferences={internalReferences}\n            documentTitle={documentTitle}\n            isLoading={isLoading}\n            totalCount={totalCount}\n            action={action}\n            projectIds={projectIds}\n            datasetNames={datasetNames}\n            hasUnknownDatasetNames={hasUnknownDatasetNames}\n            onReferenceLinkClick={onCancel}\n          />\n        ) : (\n          <LoadingContainer data-testid=\"loading-container\">\n            <LoadingBlock showText title={t('confirm-delete-dialog.loading.text')} />\n          </LoadingContainer>\n        )}\n      </DialogBody>\n    </Dialog>\n  )\n}\n","import {Box, Text} from '@sanity/ui'\nimport {type ComponentProps, useCallback, useId, useState} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Dialog, ErrorBoundary} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {ConfirmDeleteDialog, type ConfirmDeleteDialogProps} from './ConfirmDeleteDialog'\n\nexport type {ConfirmDeleteDialogProps}\n\ntype ArgType<T> = T extends (arg: infer U) => unknown ? U : never\ntype ErrorInfo = ArgType<ComponentProps<typeof ErrorBoundary>['onCatch']>\n\n/** @internal */\nfunction ConfirmDeleteDialogContainer(props: ConfirmDeleteDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const id = useId()\n  const [error, setError] = useState<ErrorInfo | null>(null)\n  const handleRetry = useCallback(() => setError(null), [])\n\n  return error ? (\n    <Dialog\n      id={`dialog-error-${id}`}\n      data-testid=\"confirm-delete-error-dialog\"\n      header={t('confirm-delete-dialog.error.title.text')}\n      footer={{\n        confirmButton: {\n          text: t('confirm-delete-dialog.error.retry-button.text'),\n          onClick: handleRetry,\n          tone: 'default',\n        },\n      }}\n      onClose={props.onCancel}\n    >\n      <Box padding={4}>\n        <Text size={1}>{t('confirm-delete-dialog.error.message.text')}</Text>\n      </Box>\n    </Dialog>\n  ) : (\n    <ErrorBoundary onCatch={setError}>\n      <ConfirmDeleteDialog {...props} />\n    </ErrorBoundary>\n  )\n}\n\nexport {ConfirmDeleteDialogContainer as ConfirmDeleteDialog}\n","import {useEffect, useState} from 'react'\n\nexport function Delay({\n  children,\n  ms = 0,\n}: {\n  children?: React.JSX.Element | (() => React.JSX.Element)\n  ms?: number\n}): React.JSX.Element {\n  const [ready, setReady] = useState(ms <= 0)\n\n  useEffect(() => {\n    if (ms <= 0) {\n      return undefined\n    }\n\n    const timeoutId = setTimeout(() => setReady(true), ms)\n\n    return () => {\n      clearTimeout(timeoutId)\n    }\n  }, [ms])\n\n  if (!ready || !children) {\n    return <></>\n  }\n\n  return typeof children === 'function' ? children() : children\n}\n","/**\n * @internal\n */\nexport const PANE_DEBUG = false\n\n/**\n * @internal\n */\nexport const PANE_COLLAPSED_WIDTH = 51\n\n/**\n * @internal\n */\nexport const PANE_DEFAULT_MIN_WIDTH = PANE_COLLAPSED_WIDTH * 4\n","import {Layer} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {styled} from 'styled-components'\n\nimport {usePaneLayout} from './usePaneLayout'\n\nconst Root = styled(Layer)`\n  position: relative;\n  width: 1px;\n  min-width: 1px;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    width: 1px;\n    background-color: var(--card-border-color);\n  }\n\n  &:not([data-disabled]) {\n    cursor: ew-resize;\n    width: 9px;\n    min-width: 9px;\n    margin: 0 -4px;\n\n    &:before {\n      left: 4px;\n    }\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    &[data-dragging]:after,\n    &:hover:after {\n      opacity: 0.2;\n    }\n  }\n`\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneDivider({\n  disabled,\n  element,\n}: {\n  disabled?: boolean\n  element: HTMLElement | null\n}) {\n  const {resize} = usePaneLayout()\n  const [dragging, setDragging] = useState(false)\n\n  const handleMouseDown = useCallback(\n    (event: any) => {\n      if (!element) return\n\n      setDragging(true)\n\n      event.preventDefault()\n\n      const startX = event.pageX\n\n      resize('start', element, 0)\n\n      const handleMouseMove = (e: MouseEvent) => {\n        e.preventDefault()\n\n        const deltaX = e.pageX - startX\n\n        resize('move', element, deltaX)\n      }\n\n      const handleMouseUp = (e: MouseEvent) => {\n        e.preventDefault()\n\n        setDragging(false)\n\n        window.removeEventListener('mousemove', handleMouseMove)\n        window.removeEventListener('mouseup', handleMouseUp)\n\n        resize('end', element, 0)\n      }\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    },\n    [element, resize],\n  )\n\n  return (\n    <Root\n      data-disabled={disabled ? '' : undefined}\n      data-dragging={dragging ? '' : undefined}\n      onMouseDown={handleMouseDown}\n    />\n  )\n}\n","import {BoundaryElementProvider, Card, type CardProps, Code, Flex} from '@sanity/ui'\nimport {\n  type ForwardedRef,\n  forwardRef,\n  type HTMLProps,\n  type ReactNode,\n  useCallback,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {IsLastPaneProvider, LegacyLayerProvider} from 'sanity'\nimport {PaneContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {PANE_COLLAPSED_WIDTH, PANE_DEBUG, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {PaneDivider} from './PaneDivider'\nimport {usePaneLayout} from './usePaneLayout'\n\ninterface PaneProps {\n  children?: ReactNode\n  currentMinWidth?: number\n  currentMaxWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  selected?: boolean\n}\n\nconst Root = styled(Card)`\n  outline: none;\n\n  // NOTE: This will render a border to the right side of each pane\n  // without taking up physical space.\n  box-shadow: 1px 0 0 var(--card-border-color);\n`\n\n/**\n * @hidden\n * @internal\n */\n// eslint-disable-next-line complexity\nexport const Pane = forwardRef(function Pane(\n  props: PaneProps &\n    Omit<CardProps, 'as' | 'overflow'> &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'hidden' | 'id' | 'style'>,\n  forwardedRef: ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    children,\n    currentMinWidth: currentMinWidthProp,\n    currentMaxWidth: currentMaxWidthProp,\n    flex: flexProp = 1,\n    id,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    selected = false,\n    ...restProps\n  } = props\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const {\n    collapse,\n    collapsed: layoutCollapsed,\n    expand,\n    expandedElement,\n    mount,\n    panes,\n  } = usePaneLayout()\n  const pane = panes.find((p) => p.element === rootElement)\n  const paneIndex = pane && panes.indexOf(pane)\n  const nextPane = typeof paneIndex === 'number' ? panes[paneIndex + 1] : undefined\n  const isLast = paneIndex === panes.length - 1\n  const expanded = expandedElement === rootElement\n  const collapsed = layoutCollapsed ? false : pane?.collapsed || false\n  const nextCollapsed = nextPane?.collapsed || false\n  const ref = useRef<HTMLDivElement | null>(null)\n  const flex = pane?.flex ?? flexProp\n  const currentMinWidth = pane?.currentMinWidth ?? currentMinWidthProp\n  const currentMaxWidth = pane?.currentMaxWidth ?? currentMaxWidthProp\n\n  // Forward ref to parent\n  useImperativeHandle<HTMLDivElement | null, HTMLDivElement | null>(forwardedRef, () => ref.current)\n\n  const setRef = useCallback((refValue: HTMLDivElement | null) => {\n    setRootElement(refValue)\n    ref.current = refValue\n  }, [])\n\n  useLayoutEffect(() => {\n    if (!rootElement) return undefined\n    return mount(rootElement, {\n      currentMinWidth: currentMinWidthProp,\n      currentMaxWidth: currentMaxWidthProp,\n      flex: flexProp,\n      id,\n      minWidth: minWidthProp,\n      maxWidth: maxWidthProp,\n    })\n  }, [\n    currentMinWidthProp,\n    currentMaxWidthProp,\n    flexProp,\n    id,\n    minWidthProp,\n    maxWidthProp,\n    mount,\n    rootElement,\n  ])\n\n  const handleCollapse = useCallback(() => {\n    if (!rootElement) return\n    collapse(rootElement)\n  }, [collapse, rootElement])\n\n  const handleExpand = useCallback(() => {\n    if (!rootElement) return\n    expand(rootElement)\n  }, [expand, rootElement])\n\n  const contextValue = useMemo(\n    () => ({\n      collapse: handleCollapse,\n      collapsed: layoutCollapsed ? false : collapsed,\n      expand: handleExpand,\n      index: paneIndex,\n      isLast,\n      rootElement,\n    }),\n    [collapsed, handleCollapse, handleExpand, isLast, layoutCollapsed, paneIndex, rootElement],\n  )\n\n  const minWidth = useMemo(() => {\n    if (layoutCollapsed) {\n      return undefined\n    }\n\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (currentMinWidth === 0) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    if (isLast) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    return currentMinWidth || minWidthProp || PANE_DEFAULT_MIN_WIDTH\n  }, [collapsed, currentMinWidth, isLast, layoutCollapsed, minWidthProp])\n\n  const maxWidth = useMemo(() => {\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (layoutCollapsed && isLast) {\n      return undefined\n    }\n\n    if (isLast) {\n      if (maxWidthProp) {\n        return currentMaxWidth ?? maxWidthProp\n      }\n\n      return undefined\n    }\n\n    return currentMaxWidth ?? maxWidthProp\n  }, [collapsed, currentMaxWidth, isLast, layoutCollapsed, maxWidthProp])\n\n  const hidden = layoutCollapsed && !isLast\n\n  const divider = useMemo(\n    () =>\n      !isLast &&\n      !layoutCollapsed && (\n        <LegacyLayerProvider zOffset=\"paneResizer\">\n          <PaneDivider disabled={collapsed || nextCollapsed} element={rootElement} />\n        </LegacyLayerProvider>\n      ),\n    [collapsed, isLast, layoutCollapsed, nextCollapsed, rootElement],\n  )\n\n  const style = useMemo(\n    () => ({\n      flex,\n      minWidth,\n      maxWidth: maxWidth === Infinity ? undefined : maxWidth,\n    }),\n    [flex, minWidth, maxWidth],\n  )\n\n  return (\n    <>\n      <LegacyLayerProvider zOffset=\"pane\">\n        <PaneContext.Provider value={contextValue}>\n          <IsLastPaneProvider isLastPane={isLast}>\n            <Root\n              data-testid=\"pane\"\n              data-ui=\"Pane\"\n              tone=\"inherit\"\n              hidden={hidden}\n              id={id}\n              overflow={layoutCollapsed ? undefined : 'hidden'}\n              {...restProps}\n              data-pane-collapsed={collapsed ? '' : undefined}\n              data-pane-index={paneIndex}\n              data-pane-selected={selected ? '' : undefined}\n              ref={setRef}\n              style={style}\n            >\n              {PANE_DEBUG && (\n                <Card padding={4} tone={expanded ? 'primary' : 'caution'}>\n                  <Code size={1}>\n                    {[\n                      `#${paneIndex}`,\n                      `collapsed=${collapsed}`,\n                      `currentMinWidth=${currentMinWidth}`,\n                      `currentMaxWidth=${currentMaxWidth}`,\n                      `flex=${flex}`,\n                      `minWidth=${minWidth}`,\n                      `maxWidth=${maxWidth}`,\n                    ].join('\\n')}\n                  </Code>\n                </Card>\n              )}\n\n              <BoundaryElementProvider element={rootElement}>\n                {!hidden && (\n                  <Flex direction=\"column\" height=\"fill\">\n                    {children}\n                  </Flex>\n                )}\n              </BoundaryElementProvider>\n            </Root>\n          </IsLastPaneProvider>\n        </PaneContext.Provider>\n      </LegacyLayerProvider>\n\n      {divider}\n    </>\n  )\n})\n","import {Card} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Card)`\n  position: relative;\n  outline: none;\n`\n\nRoot.displayName = 'PaneContent__root'\n","import {useContext} from 'react'\nimport {PaneContext} from 'sanity/_singletons'\n\nimport {type PaneContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePane(): PaneContextValue {\n  const pane = useContext(PaneContext)\n\n  if (!pane) {\n    throw new Error('Pane: missing context value')\n  }\n\n  return pane\n}\n","import {type BoxOverflow} from '@sanity/ui'\nimport {type ElementType, type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\nimport {Root} from './PaneContent.styles'\nimport {usePane} from './usePane'\nimport {usePaneLayout} from './usePaneLayout'\n\ninterface PaneContentProps {\n  as?: ElementType | keyof React.JSX.IntrinsicElements\n  overflow?: BoxOverflow\n  padding?: number | number[]\n}\n\n/**\n * @hidden\n * @internal\n */\nexport const PaneContent = forwardRef(function PaneContent(\n  props: PaneContentProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {as, children, overflow, padding, ...restProps} = props\n  const {collapsed} = usePane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  return (\n    <Root\n      data-testid=\"pane-content\"\n      forwardedAs={as}\n      {...restProps}\n      flex={1}\n      hidden={collapsed}\n      overflow={layoutCollapsed ? undefined : overflow}\n      padding={padding}\n      ref={ref}\n      tone=\"inherit\"\n    >\n      {children}\n    </Root>\n  )\n})\n","/**\n * Remove the spaces and lower case the string\n *\n * @param str - string to remove the spaces and lower case\n * @returns str with no spaces and lower case\n */\nexport function toLowerCaseNoSpaces(str: string | undefined): string {\n  if (!str) return ''\n  return str.toLocaleLowerCase().replaceAll(' ', '')\n}\n","import {CheckmarkIcon} from '@sanity/icons'\nimport {MenuDivider, Text} from '@sanity/ui'\nimport {type MouseEvent, useCallback} from 'react'\nimport {TooltipOfDisabled, useGetI18nText, useI18nText} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {MenuGroup, MenuItem, type PopoverProps} from '../../../ui-components'\nimport {type Intent} from '../../structureBuilder'\nimport {toLowerCaseNoSpaces} from '../../util/toLowerCaseNoSpaces'\nimport {type _PaneMenuItem, type _PaneMenuNode} from './types'\n\nconst MENU_GROUP_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'left-start',\n  portal: true,\n}\n\nexport function PaneMenuButtonItem(props: {\n  disabled?: boolean\n  isAfterGroup: boolean\n  node: _PaneMenuNode\n}) {\n  const {disabled, isAfterGroup, node} = props\n  const getI18nText = useGetI18nText('i18n' in node ? node : undefined)\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  const {title} = getI18nText(node)\n\n  if (node.type === 'group') {\n    if (node.children.length === 0) {\n      return null\n    }\n\n    if (node.expanded) {\n      return (\n        <>\n          {isAfterGroup && <MenuDivider />}\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              key={child.key}\n              node={child}\n            />\n          ))}\n        </>\n      )\n    }\n\n    return (\n      <>\n        {isAfterGroup && <MenuDivider />}\n        <MenuGroup\n          disabled={disabled}\n          icon={node.icon}\n          popover={MENU_GROUP_POPOVER_PROPS}\n          text={title}\n        >\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              key={child.key}\n              node={child}\n            />\n          ))}\n        </MenuGroup>\n      </>\n    )\n  }\n\n  return (\n    <>\n      {isAfterGroup && <MenuDivider />}\n      <PaneContextMenuItemResolver disabled={disabled} node={node} />\n    </>\n  )\n}\n\nfunction PaneContextMenuItemResolver(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {node} = props\n\n  if (node.intent) {\n    return <PaneContextIntentMenuItem {...props} intent={node.intent} />\n  }\n\n  return <PaneContextMenuItem {...props} />\n}\n\nfunction PaneContextMenuItem(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {disabled, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const {title} = useI18nText(node)\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        icon={node.icon}\n        iconRight={node.iconRight || (node.selected && CheckmarkIcon)}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClick={node.onAction}\n        pressed={node.selected}\n        text={title}\n        tone={node.tone}\n        data-testid={`action-${toLowerCaseNoSpaces(node.title)}`}\n      />\n    </TooltipOfDisabled>\n  )\n}\n\nfunction PaneContextIntentMenuItem(props: {\n  disabled?: boolean\n  intent: Intent\n  node: _PaneMenuItem\n}) {\n  const {disabled, intent, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLDivElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node],\n  )\n\n  const {title} = useI18nText(node)\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        as=\"a\"\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        href={intentLink.href}\n        icon={node.icon}\n        iconRight={node.selected ? CheckmarkIcon : undefined}\n        onClick={handleClick}\n        pressed={node.selected}\n        text={title}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n","import {Menu, MenuDivider} from '@sanity/ui'\nimport {type ReactNode, useId} from 'react'\nimport {ContextMenuButton} from 'sanity'\n\nimport {MenuButton, type PopoverProps} from '../../../ui-components'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {type _PaneMenuItem, type _PaneMenuNode} from './types'\n\ninterface PaneContextMenuButtonProps {\n  nodes: _PaneMenuNode[]\n  actionsNodes?: ReactNode\n}\n\nconst CONTEXT_MENU_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nfunction nodesHasTone(nodes: _PaneMenuNode[], tone: NonNullable<_PaneMenuItem['tone']>): boolean {\n  return nodes.some((node) => {\n    return (\n      (node.type === 'item' && node.tone === tone) ||\n      (node.type === 'group' && nodesHasTone(node.children, tone))\n    )\n  })\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneContextMenuButton(props: PaneContextMenuButtonProps) {\n  const {nodes, actionsNodes} = props\n  const id = useId()\n\n  const hasCritical = nodesHasTone(nodes, 'critical')\n  const hasCaution = nodesHasTone(nodes, 'caution')\n\n  return (\n    <MenuButton\n      button={\n        <ContextMenuButton\n          // eslint-disable-next-line no-nested-ternary\n          tone={hasCritical ? 'critical' : hasCaution ? 'caution' : undefined}\n          data-testid=\"pane-context-menu-button\"\n        />\n      }\n      id={id}\n      menu={\n        <Menu>\n          {actionsNodes && (\n            <>\n              {actionsNodes}\n              <MenuDivider />\n            </>\n          )}\n          {nodes.map((node, nodeIndex) => {\n            const isAfterGroup = nodes[nodeIndex - 1]?.type === 'group'\n            return <PaneMenuButtonItem isAfterGroup={isAfterGroup} key={node.key} node={node} />\n          })}\n        </Menu>\n      }\n      popover={CONTEXT_MENU_POPOVER_PROPS}\n    />\n  )\n}\n","import {Card, Layer} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Layer)`\n  position: sticky;\n  bottom: 0;\n`\n\nexport const RootCard = styled(Card)`\n  padding-bottom: env(safe-area-inset-bottom);\n`\n","import {Box} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type ReactNode} from 'react'\nimport {LegacyLayerProvider} from 'sanity'\n\nimport {Root, RootCard} from './PaneFooter.styles'\nimport {usePane} from './usePane'\n\ninterface PaneFooterProps {\n  children?: ReactNode\n  padding?: number | number[]\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneFooter = forwardRef(function PaneFooter(\n  props: PaneFooterProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {children, padding} = props\n  const {collapsed} = usePane()\n\n  return (\n    <LegacyLayerProvider zOffset=\"paneFooter\">\n      <Root data-testid=\"pane-footer\" hidden={collapsed} ref={ref}>\n        <RootCard tone=\"inherit\">\n          <Box padding={padding}>{children}</Box>\n        </RootCard>\n      </Root>\n    </LegacyLayerProvider>\n  )\n})\n","import {Card, Flex, Layer, Text, TextSkeleton, type Theme} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {css, styled} from 'styled-components'\n\ninterface RootProps {\n  $border?: boolean\n}\n\nexport const Root = styled(Layer)<RootProps>(({$border}) => {\n  return css`\n    line-height: 0;\n    position: sticky;\n    top: 0;\n\n    &:not([data-collapsed]):after {\n      content: '';\n      display: block;\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: -1px;\n      border-bottom: 1px solid ${$border ? 'var(--card-border-color)' : 'transparent'};\n      opacity: 1;\n    }\n  `\n})\n\nexport const Layout = styled(Flex)`\n  transform-origin: calc(51px / 2);\n\n  [data-collapsed] > div > & {\n    transform: rotate(90deg);\n  }\n`\n\nexport const TitleCard = styled(Card)(({theme}: {theme: Theme}) => {\n  const {fg, bg} = theme.sanity.color.card.enabled\n\n  // Disable color updates on hover\n  return css`\n    background-color: ${bg};\n\n    [data-ui='Text'] {\n      color: ${fg};\n    }\n  `\n})\n\nexport const TitleTextSkeleton = styled(TextSkeleton)`\n  width: 66%;\n  max-width: 175px;\n`\n\nexport const TitleText = styled(Text)`\n  cursor: default;\n  outline: none;\n`\n","import {Box, Card, Flex, LayerProvider, useElementRect} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type ReactNode, useCallback, useMemo} from 'react'\nimport {LegacyLayerProvider} from 'sanity'\n\nimport {Layout, Root, TitleCard, TitleText, TitleTextSkeleton} from './PaneHeader.styles'\nimport {usePane} from './usePane'\n\nexport type TabsType = 'default' | 'dropdown'\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneHeaderProps {\n  actions?: ReactNode\n  backButton?: ReactNode\n  border?: boolean\n  contentAfter?: ReactNode\n  loading?: boolean\n  subActions?: ReactNode\n  tabIndex?: number\n  tabs?: ReactNode\n  title: ReactNode\n  appendTitle?: ReactNode\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneHeader = forwardRef(function PaneHeader(\n  props: PaneHeaderProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    actions,\n    backButton,\n    border,\n    contentAfter,\n    loading,\n    subActions,\n    tabs,\n    tabIndex,\n    title,\n    appendTitle,\n  } = props\n  const {collapse, collapsed, expand, rootElement: paneElement} = usePane()\n  const paneRect = useElementRect(paneElement || null)\n\n  const layoutStyle = useMemo(\n    () => ({\n      width: collapsed ? paneRect?.height || window.innerHeight : undefined,\n    }),\n    [collapsed, paneRect],\n  )\n\n  const handleTitleClick = useCallback(() => {\n    if (collapsed) return\n    collapse()\n  }, [collapse, collapsed])\n\n  const handleLayoutClick = useCallback(() => {\n    if (!collapsed) return\n    expand()\n  }, [collapsed, expand])\n\n  const showTabsOrSubActions = Boolean(!collapsed && (tabs || subActions))\n\n  return (\n    <LayerProvider zOffset={100}>\n      <Root\n        $border={border}\n        data-collapsed={collapsed ? '' : undefined}\n        data-testid=\"pane-header\"\n        ref={ref}\n      >\n        <LegacyLayerProvider zOffset=\"paneHeader\">\n          <Card data-collapsed={collapsed ? '' : undefined} tone=\"inherit\">\n            <Layout\n              direction=\"column\"\n              gap={3}\n              onClick={handleLayoutClick}\n              padding={3}\n              sizing=\"border\"\n              style={layoutStyle}\n            >\n              <Flex align=\"flex-start\" gap={3}>\n                {backButton && <Box flex=\"none\">{backButton}</Box>}\n\n                <TitleCard\n                  __unstable_focusRing\n                  flex={1}\n                  onClick={handleTitleClick}\n                  paddingLeft={backButton ? 1 : 2}\n                  padding={2}\n                  tabIndex={tabIndex}\n                >\n                  {loading && (\n                    <Box>\n                      <TitleTextSkeleton animated radius={1} size={1} />\n                    </Box>\n                  )}\n                  {!loading && (\n                    <Flex align=\"center\" gap={1}>\n                      <TitleText size={1} textOverflow=\"ellipsis\" weight=\"semibold\">\n                        {title}\n                      </TitleText>\n                      {appendTitle}\n                    </Flex>\n                  )}\n                </TitleCard>\n\n                {actions && (\n                  <Box hidden={collapsed}>\n                    <LegacyLayerProvider zOffset=\"paneHeader\">{actions}</LegacyLayerProvider>\n                  </Box>\n                )}\n              </Flex>\n\n              {showTabsOrSubActions && (\n                <Flex align=\"center\" hidden={collapsed} overflow=\"auto\">\n                  <Box flex={1} marginRight={subActions ? 3 : 0}>\n                    {tabs}\n                  </Box>\n\n                  {subActions}\n                </Flex>\n              )}\n            </Layout>\n\n            {!collapsed && contentAfter}\n          </Card>\n        </LegacyLayerProvider>\n      </Root>\n    </LayerProvider>\n  )\n})\n","import {UnknownIcon} from '@sanity/icons'\nimport {Menu} from '@sanity/ui'\nimport {type MouseEvent, useCallback, useId} from 'react'\nimport {StatusButton, useI18nText, useTranslation} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {Button, MenuButton} from '../../../ui-components'\nimport {type Intent} from '../../structureBuilder'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {type _PaneMenuGroup, type _PaneMenuItem} from './types'\n\nfunction getDisabledReason(node: _PaneMenuItem) {\n  if (!node.disabled) {\n    return {disabledReason: undefined, ariaLabel: undefined, isDisabled: false}\n  }\n\n  /**\n   * This component supports receiving a `reason: string | react.ReactNode`.\n   * We are casting it as string, to avoid the ts error, as content will be rendered into the tooltip which only accepts string, but it won't crash if it's a ReactNode.\n   * For the aria label, we want to check if it's actually a string, to avoid generating an aria-label with the value `[object Object]`.\n   */\n  const disabledReason =\n    typeof node.disabled === 'object' ? (node.disabled.reason as string) : undefined\n  const ariaLabel =\n    typeof node.disabled === 'object' && typeof node.disabled?.reason === 'string'\n      ? node.disabled.reason\n      : 'This is disabled'\n\n  return {disabledReason, ariaLabel, isDisabled: Boolean(node.disabled)}\n}\nexport interface PaneHeaderActionButtonProps {\n  node: _PaneMenuItem | _PaneMenuGroup\n}\n\nexport function PaneHeaderActionButton(props: PaneHeaderActionButtonProps) {\n  const {node} = props\n\n  if (node.type === 'item') {\n    return <PaneHeaderMenuItemActionButton node={node} />\n  }\n\n  if (node.type === 'group') {\n    return <PaneHeaderMenuGroupActionButton node={node} />\n  }\n\n  console.warn('unknown menu node (expected `type: \"item\" | \"group\"`):', node)\n\n  return null\n}\n\nexport interface PaneHeaderMenuItemActionButtonProps {\n  node: _PaneMenuItem\n}\n\nexport function PaneHeaderMenuItemActionButton(props: PaneHeaderMenuItemActionButtonProps) {\n  const {node} = props\n  const {title} = useI18nText(node)\n  const {t} = useTranslation()\n\n  if (node.intent) {\n    return <PaneHeaderActionIntentButton {...props} intent={node.intent} />\n  }\n\n  const {disabledReason, ariaLabel, isDisabled} = getDisabledReason(node)\n\n  return (\n    <StatusButton\n      disabled={isDisabled}\n      icon={node.icon}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClick={node.onAction}\n      selected={node.selected}\n      tone={node.tone}\n      aria-label={ariaLabel || title || t('status-button.aria-label')}\n      tooltipProps={{\n        hotkeys: !isDisabled && node.hotkey ? node.hotkey.split('+') : undefined,\n        content: isDisabled ? disabledReason : title,\n      }}\n    />\n  )\n}\n\nfunction PaneHeaderActionIntentButton(props: {intent: Intent; node: _PaneMenuItem}) {\n  const {intent, node} = props\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n  const {t} = useTranslation()\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node],\n  )\n\n  const {disabledReason, ariaLabel, isDisabled} = getDisabledReason(node)\n\n  return (\n    <StatusButton\n      forwardedAs=\"a\"\n      disabled={isDisabled}\n      href={intentLink.href}\n      icon={node.icon}\n      onClick={handleClick}\n      selected={node.selected}\n      tone={node.tone}\n      aria-label={ariaLabel || node.title || t('status-button.aria-label')}\n      tooltipProps={{\n        hotkeys: !isDisabled && node.hotkey ? node.hotkey.split('+') : undefined,\n        content: isDisabled ? disabledReason : node.title,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n}\n\nexport interface PaneHeaderMenuGroupActionButtonProps {\n  node: _PaneMenuGroup\n}\n\nfunction PaneHeaderMenuGroupActionButton(props: PaneHeaderMenuGroupActionButtonProps) {\n  const {node} = props\n  const {title} = useI18nText(node)\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          disabled={!!node.disabled}\n          icon={node.icon ?? UnknownIcon}\n          label={title}\n          mode=\"bleed\"\n          tooltipProps={{content: node.title, portal: true}}\n        />\n      }\n      id={useId()}\n      menu={\n        <Menu>\n          {node.children.map((child, idx) => {\n            return (\n              <PaneMenuButtonItem\n                disabled={Boolean(node.disabled)}\n                isAfterGroup={node.children[idx - 1]?.type === 'group'}\n                key={child.key}\n                node={child}\n              />\n            )\n          })}\n        </Menu>\n      }\n    />\n  )\n}\n","import {Card} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Card)`\n  transition: opacity 200ms;\n  position: relative;\n  z-index: 1;\n  padding-left: env(safe-area-inset-left);\n  padding-right: env(safe-area-inset-right);\n  opacity: 0;\n\n  &:not([hidden]) {\n    display: flex;\n  }\n\n  &:not([data-collapsed]) {\n    overflow: auto;\n  }\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n\n  &[data-resizing] {\n    pointer-events: none;\n  }\n`\n","import {PANE_DEFAULT_MIN_WIDTH} from '../constants'\nimport {type PaneConfigOpts, type PaneResizeCache} from '../types'\n\nexport function _calcPaneResize(\n  cache: PaneResizeCache,\n  left: PaneConfigOpts,\n  right: PaneConfigOpts,\n  deltaX: number,\n): {leftFlex: number; leftW: number; rightFlex: number; rightW: number} {\n  const sum = {\n    flex: cache.left.flex + cache.right.flex,\n    width: cache.left.width + cache.right.width,\n  }\n\n  const leftMinWidth = left.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n  const rightMinWidth = right.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n\n  const leftMaxWidth = Math.min(left.maxWidth || Infinity, sum.width - rightMinWidth)\n  const rightMaxWidth = Math.min(right.maxWidth || Infinity, sum.width - leftMinWidth)\n\n  // Get min. delta X\n  let minDeltaX = leftMinWidth - cache.left.width\n  const rightMinDeltaX = cache.right.width - rightMaxWidth\n  if (minDeltaX < rightMinDeltaX) {\n    minDeltaX = rightMinDeltaX\n  }\n\n  // Get max. delta X\n  let maxDeltaX = cache.right.width - rightMinWidth\n  const leftMaxDeltaX = leftMaxWidth - cache.left.width\n  if (maxDeltaX > leftMaxDeltaX) {\n    maxDeltaX = leftMaxDeltaX\n  }\n\n  const _deltaX = Math.min(Math.max(deltaX, minDeltaX), maxDeltaX)\n\n  const leftW = cache.left.width + _deltaX\n  const rightW = cache.right.width - _deltaX\n\n  const leftFlex = (leftW / sum.width) * sum.flex\n  const rightFlex = (rightW / sum.width) * sum.flex\n\n  return {leftFlex, leftW, rightFlex, rightW}\n}\n","/**\n * @internal\n */\nexport function _getDOMPath(rootElement: HTMLElement, el: HTMLElement): number[] {\n  const path: number[] = []\n\n  let e = el\n\n  while (e !== rootElement) {\n    const parentElement = e.parentElement\n\n    if (!parentElement) return path\n\n    const children = Array.from(parentElement.childNodes)\n    const index = children.indexOf(e)\n\n    path.unshift(index)\n\n    if (parentElement === rootElement) {\n      return path\n    }\n\n    e = parentElement\n  }\n\n  return path\n}\n","import {_getDOMPath} from './_getDOMPath'\n\nconst EMPTY_PATH: number[] = []\n\n/**\n * @internal\n */\nexport function _sortElements(rootElement: HTMLElement, elements: HTMLElement[]): void {\n  // Create a map containing the DOM path of each pane element.\n  // The DOM path is relative to the `rootElement`, and is used in the next step for sorting.\n  const map = new WeakMap<HTMLElement, number[]>()\n\n  for (const element of elements) {\n    map.set(element, _getDOMPath(rootElement, element))\n  }\n\n  const _sortByElementPath = (a: HTMLElement, b: HTMLElement) => {\n    const _a = map.get(a) || EMPTY_PATH\n    const _b = map.get(b) || EMPTY_PATH\n\n    const len = Math.max(_a.length, _b.length)\n\n    // Loop until there are different indexes\n    for (let i = 0; i < len; i += 1) {\n      const aIndex = _a[i] || -1\n      const bIndex = _b[i] || -1\n\n      if (aIndex !== bIndex) {\n        return aIndex - bIndex\n      }\n    }\n\n    return 0\n  }\n\n  elements.sort(_sortByElementPath)\n}\n","import {PANE_COLLAPSED_WIDTH, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {_calcPaneResize, _sortElements} from './helpers'\nimport {\n  type PaneConfigOpts,\n  type PaneData,\n  type PaneResizeCache,\n  type PaneResizeData,\n} from './types'\n\nexport interface PaneLayoutState {\n  expandedElement: HTMLElement | null\n  panes: PaneData[]\n  resizing: boolean\n}\n\nexport type PaneLayoutStateObserver = (state: PaneLayoutState) => void\n\nexport interface PaneLayoutController {\n  collapse: (element: HTMLElement) => void\n  expand: (element: HTMLElement) => void\n  mount: (element: HTMLElement, options: PaneConfigOpts) => () => void\n  resize: (type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) => void\n  setRootElement: (nextRootElement: HTMLElement | null) => void\n  setRootWidth: (nextRootWidth: number) => void\n  subscribe: (observer: PaneLayoutStateObserver) => () => void\n}\n\nexport function createPaneLayoutController(): PaneLayoutController {\n  const observers: PaneLayoutStateObserver[] = []\n  const elements: HTMLElement[] = []\n  const optionsMap = new WeakMap<HTMLElement, PaneConfigOpts & {original: PaneConfigOpts}>()\n  const userCollapsedElementSet = new Set<HTMLElement>()\n  const cache: Partial<PaneResizeCache> = {}\n\n  // Mutable internal state\n  let rootElement: HTMLElement | null = null\n  let rootWidth = 0\n  let expandedElement: HTMLElement | null = null\n  let resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n  let resizing = false\n\n  function collapse(element: HTMLElement) {\n    userCollapsedElementSet.add(element)\n\n    if (expandedElement === element) {\n      expandedElement = null\n    }\n\n    _notifyObservers()\n  }\n\n  function expand(element: HTMLElement) {\n    userCollapsedElementSet.delete(element)\n\n    expandedElement = element\n\n    _notifyObservers()\n  }\n\n  function mount(element: HTMLElement, options: PaneConfigOpts) {\n    optionsMap.set(element, {...options, original: options})\n\n    elements.push(element)\n\n    if (rootElement) {\n      _sortElements(rootElement, elements)\n    }\n\n    expand(element)\n\n    return () => {\n      const idx = elements.indexOf(element)\n\n      if (idx > -1) {\n        elements.splice(idx, 1)\n      }\n\n      optionsMap.delete(element)\n\n      _notifyObservers()\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  function resize(type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) {\n    const leftIndex = elements.indexOf(leftElement)\n    const leftOptions = optionsMap.get(leftElement)\n\n    if (!leftOptions) return\n\n    const rightElement = elements[leftIndex + 1]\n    const rightOptions = optionsMap.get(rightElement)\n\n    if (!rightOptions) return\n\n    if (type === 'start') {\n      resizing = true\n\n      cache.left = {\n        element: leftElement,\n        flex: leftOptions.flex || 1,\n        width: leftElement.offsetWidth,\n      }\n\n      cache.right = {\n        element: rightElement,\n        flex: rightOptions.flex || 1,\n        width: rightElement.offsetWidth,\n      }\n\n      _notifyObservers()\n    }\n\n    if (type === 'move' && cache.left && cache.right) {\n      resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n\n      const {leftW, rightW, leftFlex, rightFlex} = _calcPaneResize(\n        cache as PaneResizeCache,\n        leftOptions,\n        rightOptions,\n        deltaX,\n      )\n\n      // update resize cache\n      resizeDataMap.set(leftElement, {flex: leftFlex, width: leftW})\n      resizeDataMap.set(rightElement, {flex: rightFlex, width: rightW})\n\n      _notifyObservers()\n    }\n\n    if (type === 'end') {\n      resizing = false\n\n      const leftResizeData = resizeDataMap.get(leftElement)\n      const rightResizeData = resizeDataMap.get(rightElement)\n\n      // Update left options\n      optionsMap.set(leftElement, {\n        ...leftOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: leftResizeData?.flex ?? leftOptions.flex,\n      })\n\n      // Update right options\n      optionsMap.set(rightElement, {\n        ...rightOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: rightResizeData?.flex ?? rightOptions.flex,\n      })\n\n      // Reset resize data map\n      resizeDataMap = new Map()\n\n      // Reset cache\n      delete cache.left\n      delete cache.right\n\n      _notifyObservers()\n    }\n  }\n\n  function setRootElement(nextRootElement: HTMLElement | null) {\n    rootElement = nextRootElement\n  }\n\n  function setRootWidth(nextRootWidth: number) {\n    rootWidth = nextRootWidth\n    _notifyObservers()\n  }\n\n  function subscribe(observer: PaneLayoutStateObserver) {\n    observers.push(observer)\n\n    return () => {\n      const idx = observers.push(observer)\n\n      if (idx > -1) {\n        observers.splice(idx, 1)\n      }\n    }\n  }\n\n  return {collapse, expand, mount, resize, setRootElement, setRootWidth, subscribe}\n\n  // eslint-disable-next-line complexity\n  function _notifyObservers() {\n    if (!rootWidth) return\n\n    // Create a reversed array of pane elements, so we can loop over them backwards.\n    // Place the expanded element first (so it has the least chance of being collapsed).\n    const _elements: HTMLElement[] = []\n    for (const element of elements) {\n      if (element !== expandedElement) {\n        _elements.unshift(element)\n      }\n    }\n    if (expandedElement) {\n      _elements.unshift(expandedElement)\n    }\n\n    const dataMap = new WeakMap<HTMLElement, PaneData>()\n    const len = _elements.length\n    const lastElement = _elements[0]\n    const collapsedWidth = (len - 1) * PANE_COLLAPSED_WIDTH\n\n    let remaingWidth = rootWidth - collapsedWidth\n\n    for (const element of _elements) {\n      const options = optionsMap.get(element)\n\n      if (!options) {\n        continue\n      }\n\n      const minWidth = options.currentMinWidth || options.minWidth || PANE_DEFAULT_MIN_WIDTH\n      const isLast = element === lastElement\n\n      // A pane is collapsed if:\n      // - it’s explictly collapsed by the user\n      const userCollapsed = userCollapsedElementSet.has(element)\n      // - it’s minimum width is larger than the remaining width\n      const sizeCollapsed = minWidth > remaingWidth\n      // - if the element is not the last (expanded pane)\n      const collapsed = isLast ? false : userCollapsed || sizeCollapsed\n\n      const resizeData = resizeDataMap.get(element)\n\n      // Collect pane data\n      dataMap.set(element, {\n        element: element,\n        collapsed: collapsed,\n        currentMinWidth: resizeData?.width ?? options.currentMinWidth,\n        currentMaxWidth: resizeData?.width ?? options.currentMaxWidth,\n        flex: resizeData?.flex ?? options.flex ?? 1,\n      })\n\n      // Update remaining width\n      if (collapsed) {\n        remaingWidth -= PANE_COLLAPSED_WIDTH\n      } else {\n        remaingWidth -= minWidth - PANE_COLLAPSED_WIDTH\n      }\n    }\n\n    const panes: PaneData[] = []\n\n    for (const element of elements) {\n      const data = dataMap.get(element)\n\n      if (data) panes.push(data)\n    }\n\n    for (const observer of observers) {\n      observer({\n        expandedElement: expandedElement || elements[elements.length - 1] || null,\n        panes,\n        resizing,\n      })\n    }\n  }\n}\n","import {type CardProps, useElementRect} from '@sanity/ui'\nimport {type HTMLProps, useEffect, useMemo, useState} from 'react'\nimport {PaneLayoutContext} from 'sanity/_singletons'\n\nimport {Root} from './PaneLayout.styles'\nimport {createPaneLayoutController, type PaneLayoutState} from './paneLayoutController'\nimport {type PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneLayoutProps {\n  minWidth?: number\n  onCollapse?: () => void\n  onExpand?: () => void\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneLayout(\n  props: PaneLayoutProps &\n    CardProps &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'wrap'>,\n) {\n  const {children, minWidth, onCollapse, onExpand, ...restProps} = props\n  const [controller] = useState(() => createPaneLayoutController())\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const rootRect = useElementRect(rootElement)\n  const width = rootRect?.width || 0\n  const collapsed = width === undefined || !minWidth ? undefined : width < minWidth\n  const [state, setState] = useState<PaneLayoutState>({\n    expandedElement: null,\n    panes: [],\n    resizing: false,\n  })\n\n  // Set root element\n  useEffect(() => controller.setRootElement(rootElement), [controller, rootElement])\n\n  // Set root size\n  useEffect(() => controller.setRootWidth(width), [controller, width])\n\n  // Subscribe to state changes\n  useEffect(() => controller.subscribe(setState), [controller])\n\n  // Call the `onCollapse` and `onExpand` callbacks as the `collapsed` boolean changes\n  useEffect(() => {\n    if (collapsed === undefined) return\n    if (collapsed && onCollapse) onCollapse()\n    if (!collapsed && onExpand) onExpand()\n  }, [collapsed, onCollapse, onExpand])\n\n  // This is the context value that gives each pane the information they need\n  const paneLayout: PaneLayoutContextValue = useMemo(\n    () => ({\n      collapse: controller.collapse,\n      collapsed,\n      expand: controller.expand,\n      expandedElement: state.expandedElement,\n      mount: controller.mount,\n      panes: state.panes,\n      resize: controller.resize,\n      resizing: state.resizing,\n    }),\n    [collapsed, controller, state.expandedElement, state.panes, state.resizing],\n  )\n\n  return (\n    <PaneLayoutContext.Provider value={paneLayout}>\n      <Root\n        data-ui=\"PaneLayout\"\n        {...restProps}\n        data-collapsed={collapsed ? '' : undefined}\n        // The `data-resizing` attribute is used to improve cursor behavior\n        data-resizing={state.resizing ? '' : undefined}\n        // The `data-mounted` attribute is used to fade in the layout and prevent flash of\n        // non-collapsed panes\n        data-mounted={width ? '' : undefined}\n        ref={setRootElement}\n      >\n        {children}\n      </Root>\n    </PaneLayoutContext.Provider>\n  )\n}\n","/* eslint-disable camelcase */\n\nimport {negate} from 'lodash'\n\nimport {type _PaneMenuGroup, type _PaneMenuItem, type _PaneMenuNode} from './components/pane/types'\nimport {type DocumentFieldMenuActionNode, type PaneMenuItem, type PaneMenuItemGroup} from './types'\n\nexport function isMenuNodeButton(node: _PaneMenuNode): node is _PaneMenuItem | _PaneMenuGroup {\n  return (node.type === 'item' || node.type === 'group') && node.renderAsButton\n}\n\nexport const isNotMenuNodeButton = negate(isMenuNodeButton)\n\nexport function resolveMenuNodes(params: {\n  actionHandler: (item: PaneMenuItem) => void\n  fieldActions?: DocumentFieldMenuActionNode[]\n  menuItems: PaneMenuItem[]\n  menuItemGroups: PaneMenuItemGroup[]\n}): _PaneMenuNode[] {\n  const {fieldActions = [], menuItems, menuItemGroups} = params\n\n  const nodes: _PaneMenuNode[] = []\n\n  let keyOffset = 0\n\n  for (let i = 0; i < fieldActions.length; i += 1) {\n    const a = fieldActions[i]\n\n    nodes.push(mapFieldActionToPaneMenuNode(a, `${i}-${a.type}`))\n  }\n\n  keyOffset += nodes.length\n\n  const groups: _PaneMenuGroup[] = []\n\n  for (const itemGroup of menuItemGroups) {\n    const group = groups.find((g) => g.key === itemGroup.id)\n\n    if (!group) {\n      groups.push({\n        type: 'group',\n        key: itemGroup.id,\n\n        children: [],\n        expanded: true,\n        renderAsButton: false,\n        title: itemGroup.title,\n        i18n: itemGroup.i18n,\n      })\n    }\n  }\n\n  const ungroupedItems: _PaneMenuItem[] = []\n\n  for (let i = 0; i < menuItems.length; i += 1) {\n    const item = menuItems[i]\n\n    let group = item.group && groups.find((g) => g.key === item.group)\n    const disabled = typeof item.disabled === 'string' ? {reason: item.disabled} : item.disabled\n\n    if (item.group && !group) {\n      group = {\n        type: 'group',\n        key: item.group,\n        disabled,\n        expanded: true,\n        icon: item.icon,\n        title: item.group,\n        children: [],\n        renderAsButton: false,\n      }\n      groups.push(group)\n    }\n\n    if (group) {\n      group.children.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        intent: item.intent,\n        disabled,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        i18n: item.i18n,\n        tone: item.tone,\n      })\n    } else {\n      ungroupedItems.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        intent: item.intent,\n        disabled,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        i18n: item.i18n,\n        tone: item.tone,\n      })\n    }\n  }\n\n  return [...ungroupedItems, ...groups, ...nodes]\n}\n\nfunction mapFieldActionToPaneMenuNode(a: DocumentFieldMenuActionNode, key: string): _PaneMenuNode {\n  if (a.type === 'divider') {\n    return {\n      type: 'divider',\n      key,\n    }\n  }\n\n  if (a.type === 'group') {\n    return {\n      type: 'group',\n      key,\n\n      children: a.children.map((child, childIdx) =>\n        mapFieldActionToPaneMenuNode(child, `${key}-${childIdx}-${child.type}`),\n      ),\n      disabled: a.disabled,\n      expanded: a.expanded ?? true,\n      icon: a.icon,\n      title: a.title,\n      i18n: a.i18n,\n      renderAsButton: a.renderAsButton ?? false,\n    }\n  }\n\n  return {\n    type: 'item',\n    key,\n    intent: a.intent,\n    disabled: a.disabled,\n    icon: a.icon,\n    iconRight: a.iconRight,\n    onAction: a.onAction,\n    renderAsButton: a.renderAsButton ?? false,\n    selected: a.selected,\n    title: a.title,\n    i18n: a.i18n,\n    tone: a.tone,\n  }\n}\n","import {type ComponentProps, type ForwardedRef, forwardRef, type ReactNode, useMemo} from 'react'\nimport {IntentLink} from 'sanity/router'\n\nimport {Button, type ButtonProps} from '../../ui-components'\nimport {type PaneMenuItem} from '../types'\n\ntype RouterIntent = NonNullable<PaneMenuItem['intent']>\n\nexport const IntentButton = forwardRef(function IntentButton(\n  props: {\n    intent: RouterIntent\n  } & ButtonProps &\n    Omit<ComponentProps<typeof Button>, 'as' | 'href' | 'type'>,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {intent, ...restProps} = props\n\n  const Link = useMemo(\n    () =>\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      forwardRef(function Link(\n        linkProps: {children: ReactNode},\n        linkRef: ForwardedRef<HTMLAnchorElement>,\n      ) {\n        return (\n          <IntentLink\n            {...linkProps}\n            intent={intent.type}\n            params={intent.params}\n            ref={linkRef}\n            searchParams={intent.searchParams}\n          />\n        )\n      }),\n    [intent],\n  )\n\n  return props.disabled ? (\n    <Button {...restProps} as=\"a\" role=\"link\" aria-disabled=\"true\" />\n  ) : (\n    <Button {...restProps} as={Link} data-as=\"a\" ref={ref as ForwardedRef<HTMLButtonElement>} />\n  )\n})\n","import {type ComponentProps, type ReactNode} from 'react'\nimport {InsufficientPermissionsMessage, useCurrentUser, useTranslation} from 'sanity'\n\nimport {Tooltip} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\n\ninterface InsufficientPermissionsMessageTooltipProps {\n  reveal: boolean\n  /**\n   * delegates to `InsufficientPermissionsMessage`'s `context` prop\n   * @see InsufficientPermissionsMessage\n   */\n  context: ComponentProps<typeof InsufficientPermissionsMessage>['context']\n  loading: boolean\n  children: ReactNode\n}\n\nexport function InsufficientPermissionsMessageTooltip({\n  reveal,\n  context,\n  loading,\n  children,\n}: InsufficientPermissionsMessageTooltipProps) {\n  const currentUser = useCurrentUser()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!reveal) {\n    return <>{children}</>\n  }\n\n  return (\n    <Tooltip\n      content={\n        loading ? (\n          t('insufficient-permissions-message-tooltip.loading-text')\n        ) : (\n          <InsufficientPermissionsMessage context={context} currentUser={currentUser} />\n        )\n      }\n      portal\n    >\n      {/* this wrapping div is to allow mouse events */}\n      {/* while the child element is disabled */}\n      <div>{children}</div>\n    </Tooltip>\n  )\n}\n","import {AddIcon} from '@sanity/icons'\nimport {Menu} from '@sanity/ui'\nimport {type ComponentProps, type ForwardedRef, forwardRef, useMemo} from 'react'\nimport {\n  type InitialValueTemplateItem,\n  isPublishedPerspective,\n  type ReleaseId,\n  type Template,\n  type TemplatePermissionsResult,\n  useGetI18nText,\n  useIsReleaseActive,\n  usePerspective,\n  useTemplatePermissions,\n  useTemplates,\n  useTranslation,\n} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {Button, MenuButton, MenuItem, type PopoverProps} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {IntentButton} from '../IntentButton'\nimport {InsufficientPermissionsMessageTooltip} from './InsufficientPermissionsMessageTooltip'\n\nexport type PaneHeaderIntentProps = ComponentProps<typeof IntentButton>['intent']\n\nconst POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nconst getIntent = (\n  templates: Template[],\n  item: InitialValueTemplateItem,\n  version?: ReleaseId,\n): PaneHeaderIntentProps | null => {\n  const typeName = templates.find((t) => t.id === item.templateId)?.schemaType\n  if (!typeName) return null\n\n  const baseParams = {\n    template: item.templateId,\n    type: typeName,\n    version,\n    id: item.initialDocumentId,\n  }\n\n  return {\n    type: 'create',\n    params: item.parameters ? [baseParams, item.parameters] : baseParams,\n    searchParams: version ? [['perspective', version]] : undefined,\n  }\n}\n\ninterface PaneHeaderCreateButtonProps {\n  templateItems: InitialValueTemplateItem[]\n}\n\nexport function PaneHeaderCreateButton({templateItems}: PaneHeaderCreateButtonProps) {\n  const templates = useTemplates()\n  const {selectedReleaseId, selectedPerspective} = usePerspective()\n  const isReleaseActive = useIsReleaseActive()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n  const getI18nText = useGetI18nText([...templateItems, ...templates])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n\n  const nothingGranted = useMemo(() => {\n    return (\n      !isTemplatePermissionsLoading &&\n      templatePermissions?.every((permission) => !permission.granted)\n    )\n  }, [isTemplatePermissionsLoading, templatePermissions])\n\n  const permissionsById = useMemo(() => {\n    if (!templatePermissions) return {}\n    return templatePermissions.reduce<Record<string, TemplatePermissionsResult | undefined>>(\n      (acc, permission) => {\n        acc[permission.id] = permission\n        return acc\n      },\n      {},\n    )\n  }, [templatePermissions])\n\n  if (nothingGranted) {\n    return (\n      <InsufficientPermissionsMessageTooltip\n        context=\"create-document-type\"\n        reveal\n        loading={isTemplatePermissionsLoading}\n      >\n        <Button\n          aria-label={t('pane-header.disabled-created-button.aria-label')}\n          icon={AddIcon}\n          data-testid=\"action-intent-button\"\n          disabled\n          mode=\"bleed\"\n          // This button handles the tooltip in a special way, won't reuse the forced tooltip.\n          tooltipProps={null}\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  const disabledByPerspectiveTooltipProps = {\n    content: tCore(\n      isPublishedPerspective(selectedPerspective)\n        ? 'new-document.disabled-published.tooltip'\n        : 'new-document.disabled-release.tooltip',\n    ),\n  }\n\n  if (templateItems.length === 1) {\n    const firstItem = templateItems[0]\n    const permissions = permissionsById[firstItem.id]\n    const disabled = !permissions?.granted || !isReleaseActive\n    const intent = getIntent(templates, firstItem, selectedReleaseId)\n    if (!intent) return null\n\n    return (\n      <InsufficientPermissionsMessageTooltip\n        reveal={disabled}\n        loading={isTemplatePermissionsLoading}\n        context=\"create-document-type\"\n      >\n        <IntentButton\n          aria-label={getI18nText(firstItem).title}\n          icon={firstItem.icon || AddIcon}\n          intent={intent}\n          mode=\"bleed\"\n          disabled={disabled}\n          data-testid=\"action-intent-button\"\n          tooltipProps={\n            disabled\n              ? disabledByPerspectiveTooltipProps\n              : {content: t('pane-header.create-new-button.tooltip')}\n          }\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          icon={AddIcon}\n          mode=\"bleed\"\n          disabled={!isReleaseActive}\n          data-testid=\"multi-action-intent-button\"\n          tooltipProps={\n            isReleaseActive\n              ? {content: t('pane-header.create-new-button.tooltip')}\n              : disabledByPerspectiveTooltipProps\n          }\n        />\n      }\n      id=\"create-menu\"\n      menu={\n        <Menu>\n          {templateItems.map((item, itemIndex) => {\n            const permissions = permissionsById[item.id]\n            const disabled = !permissions?.granted\n            const intent = getIntent(templates, item, selectedReleaseId)\n            const template = templates.find((i) => i.id === item.templateId)\n            if (!template || !intent) return null\n\n            const Link = forwardRef((linkProps, linkRef: ForwardedRef<never>) =>\n              disabled ? (\n                <button type=\"button\" disabled {...linkProps} ref={linkRef} />\n              ) : (\n                <IntentLink\n                  {...linkProps}\n                  intent={intent.type}\n                  params={intent.params}\n                  searchParams={intent.searchParams}\n                  ref={linkRef}\n                />\n              ),\n            )\n\n            Link.displayName = 'Link'\n\n            const {title} = getI18nText({\n              ...item,\n              // replace the title with the template title\n              title: item.title || getI18nText(template).title,\n            })\n\n            return (\n              <InsufficientPermissionsMessageTooltip\n                context=\"create-document-type\"\n                key={item.id}\n                reveal={disabled}\n                loading={isTemplatePermissionsLoading}\n              >\n                <MenuItem\n                  as={Link}\n                  data-as={disabled ? 'button' : 'a'}\n                  text={title}\n                  aria-label={\n                    disabled ? t('pane-header.disabled-created-button.aria-label') : title\n                  }\n                  disabled={disabled}\n                  data-testid={`action-intent-button-${itemIndex}`}\n                />\n              </InsufficientPermissionsMessageTooltip>\n            )\n          })}\n        </Menu>\n      }\n      popover={POPOVER_PROPS}\n    />\n  )\n}\n","import {Flex} from '@sanity/ui'\nimport {uniqBy} from 'lodash'\nimport {memo, useCallback, useMemo} from 'react'\nimport {EMPTY_ARRAY, EMPTY_OBJECT, type InitialValueTemplateItem, useTemplates} from 'sanity'\n\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../menuNodes'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {PaneContextMenuButton} from '../pane/PaneContextMenuButton'\nimport {PaneHeaderActionButton} from '../pane/PaneHeaderActionButton'\nimport {PaneHeaderCreateButton} from './PaneHeaderCreateButton'\n\nfunction isNonNullable<T>(value: T): value is NonNullable<T> {\n  return value !== null && value !== undefined\n}\n\n/**\n * hashes an object to a string where the order of the keys don't matter\n */\nconst hashObject = (value: unknown) => {\n  const sortObject = (v: unknown): unknown => {\n    if (typeof v !== 'object' || !v) return v\n    if (Array.isArray(v)) return v.map(sortObject)\n    return Object.entries(v).sort(([keyA], [keyB]) => keyA.localeCompare(keyB, 'en'))\n  }\n\n  const normalize = (v: unknown) => JSON.parse(JSON.stringify(v))\n\n  return JSON.stringify(sortObject(normalize(value)))\n}\n\ninterface PaneHeaderActionsProps {\n  initialValueTemplateItems?: InitialValueTemplateItem[]\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  actionHandlers?: Record<string, StructureToolPaneActionHandler>\n}\n\nexport const PaneHeaderActions = memo(function PaneHeaderActions(props: PaneHeaderActionsProps) {\n  const {\n    initialValueTemplateItems: initialValueTemplateItemsFromStructure = EMPTY_ARRAY,\n    menuItems = EMPTY_ARRAY,\n    menuItemGroups = EMPTY_ARRAY,\n    actionHandlers = EMPTY_OBJECT as Record<string, StructureToolPaneActionHandler>,\n  } = props\n\n  const templates = useTemplates()\n\n  const handleAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (typeof item.action === 'string' && !(item.action in actionHandlers)) {\n        console.warn('No handler for action:', item.action)\n        return false\n      }\n\n      const handler =\n        // eslint-disable-next-line no-nested-ternary\n        typeof item.action === 'function'\n          ? item.action\n          : typeof item.action === 'string'\n            ? actionHandlers[item.action]\n            : null\n\n      if (handler) {\n        handler(item.params as Record<string, string>)\n        return true\n      }\n\n      return false\n    },\n    [actionHandlers],\n  )\n\n  const menuNodes = useMemo(\n    () =>\n      resolveMenuNodes({\n        actionHandler: handleAction,\n        menuItemGroups,\n        menuItems: menuItems\n          // remove items with `create` intents because those will get combined\n          // into one action button (see `initialValueTemplateItemFromMenuItems`)\n          .filter((item) => item.intent?.type !== 'create'),\n      }),\n    [handleAction, menuItemGroups, menuItems],\n  )\n\n  const actionNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n  const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n\n  const initialValueTemplateItemFromMenuItems = useMemo(() => {\n    return menuItems\n      .map((item, menuItemIndex) => {\n        if (item.intent?.type !== 'create') return null\n\n        const {params} = item.intent\n        if (!params) return null\n\n        const intentParams = Array.isArray(params) ? params[0] : params\n        const templateParams = Array.isArray(params) ? params[1] : undefined\n\n        // fallback to the schema type name as the template ID.\n        // by default, the initial template values are populated from every\n        // document type in the schema\n        const templateId = intentParams.template || intentParams.type\n        if (!templateId) return null\n\n        // eslint-disable-next-line max-nested-callbacks\n        const template = templates.find((t) => t.id === templateId)\n        // the template doesn't exist then the action might be disabled\n        if (!template) return null\n\n        const initialDocumentId = intentParams.id\n\n        return {\n          item,\n          template,\n          templateParams,\n          menuItemIndex,\n          initialDocumentId,\n        }\n      })\n      .filter(isNonNullable)\n      .map(({initialDocumentId, item, template, menuItemIndex, templateParams}) => {\n        const initialValueTemplateItem: InitialValueTemplateItem = {\n          id: `menuItem${menuItemIndex}`,\n          initialDocumentId,\n          templateId: template.id,\n          type: 'initialValueTemplateItem',\n          title: item.title || template.title,\n          i18n: item.i18n || template.i18n,\n          icon: item.icon as InitialValueTemplateItem['icon'],\n          description: template.description,\n          parameters: templateParams,\n          schemaType: template.schemaType,\n        }\n\n        return initialValueTemplateItem\n      })\n  }, [menuItems, templates])\n\n  const combinedInitialValueTemplates = useMemo(() => {\n    // this de-dupes create actions\n    return uniqBy(\n      [...initialValueTemplateItemFromMenuItems, ...initialValueTemplateItemsFromStructure],\n      (item) => hashObject([item.initialDocumentId, item.templateId, item.parameters]),\n    )\n  }, [initialValueTemplateItemFromMenuItems, initialValueTemplateItemsFromStructure])\n\n  return (\n    <Flex gap={1}>\n      {combinedInitialValueTemplates.length > 0 && (\n        <PaneHeaderCreateButton templateItems={combinedInitialValueTemplates} />\n      )}\n\n      {actionNodes.map((node) => (\n        <PaneHeaderActionButton key={node.key} node={node} />\n      ))}\n\n      {contextMenuNodes.length > 0 && <PaneContextMenuButton nodes={contextMenuNodes} />}\n    </Flex>\n  )\n})\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type SanityDocument} from '@sanity/types'\nimport {type GeneralPreviewLayoutKey, SanityDefaultPreview, Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nexport interface MissingSchemaTypeProps {\n  layout?: GeneralPreviewLayoutKey\n  value: SanityDocument\n}\n\nexport function MissingSchemaType(props: MissingSchemaTypeProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {layout, value} = props\n\n  return (\n    <SanityDefaultPreview\n      title={\n        <em>\n          <Translate\n            t={t}\n            i18nKey=\"pane-item.missing-schema-type.title\"\n            components={{Code: 'code'}}\n            values={{documentType: value._type}}\n          />\n        </em>\n      }\n      subtitle={\n        <Translate\n          t={t}\n          i18nKey=\"pane-item.missing-schema-type.subtitle\"\n          components={{Code: 'code'}}\n          values={{documentId: value._id}}\n        />\n      }\n      // eslint-disable-next-line react/jsx-no-bind\n      media={() => <WarningOutlineIcon />}\n      layout={layout}\n    />\n  )\n}\n","import {ChevronRightIcon, DocumentIcon, FolderIcon} from '@sanity/icons'\nimport {\n  isSanityDocument,\n  type PreviewValue,\n  type SanityDocument,\n  type SchemaType,\n} from '@sanity/types'\nimport {Box, type CardProps, Text} from '@sanity/ui'\nimport {\n  type ComponentType,\n  type MouseEvent,\n  startTransition,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {\n  type FIXME,\n  type GeneralPreviewLayoutKey,\n  getPublishedId,\n  PreviewCard,\n  SanityDefaultPreview,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n  useEditState,\n  useSchema,\n} from 'sanity'\n\nimport {MissingSchemaType} from '../MissingSchemaType'\nimport {usePaneRouter} from '../paneRouter'\nimport {PaneItemPreview} from './PaneItemPreview'\n\ninterface PaneItemProps {\n  id: string\n  layout?: GeneralPreviewLayoutKey\n  icon?: ComponentType<any> | false\n  pressed?: boolean\n  selected?: boolean\n  title?: string\n  value?: PreviewValue | SanityDocument\n  schemaType?: SchemaType\n  margin?: CardProps['margin']\n  marginBottom?: CardProps['marginBottom']\n  marginTop?: CardProps['marginTop']\n}\n\n/**\n * Return `false` if we explicitly disable the icon.\n * Otherwise return the passed icon or the schema type icon as a backup.\n */\nexport function getIconWithFallback(\n  icon: ComponentType<any> | false | undefined,\n  schemaType: SchemaType | undefined,\n  defaultIcon: ComponentType<any>,\n): ComponentType<any> | false {\n  if (icon === false) {\n    return false\n  }\n\n  return icon || (schemaType && schemaType.icon) || defaultIcon || false\n}\n\nexport function PaneItem(props: PaneItemProps) {\n  const {\n    icon,\n    id,\n    layout = 'default',\n    pressed,\n    schemaType,\n    selected,\n    title,\n    value,\n    margin,\n    marginBottom,\n    marginTop,\n  } = props\n  const schema = useSchema()\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ChildLink} = usePaneRouter()\n  const documentPresence = useDocumentPresence(id)\n  const hasSchemaType = Boolean(schemaType && schemaType.name && schema.get(schemaType.name))\n  const [clicked, setClicked] = useState<boolean>(false)\n\n  const preview = useMemo(() => {\n    if (value && isSanityDocument(value)) {\n      if (!schemaType || !hasSchemaType) {\n        return <MissingSchemaType value={value} />\n      }\n\n      return (\n        <PaneItemPreview\n          documentPreviewStore={documentPreviewStore}\n          icon={getIconWithFallback(icon, schemaType, DocumentIcon)}\n          layout={layout}\n          schemaType={schemaType}\n          value={value}\n          presence={documentPresence}\n        />\n      )\n    }\n\n    // Always render non-document values as compact previews\n    return (\n      <SanityDefaultPreview\n        status={\n          <Box style={{opacity: 0.5}}>\n            <Text muted size={1}>\n              <ChevronRightIcon />\n            </Text>\n          </Box>\n        }\n        icon={getIconWithFallback(icon, schemaType, FolderIcon)}\n        layout=\"compact\"\n        title={title}\n      />\n    )\n  }, [\n    documentPreviewStore,\n    hasSchemaType,\n    icon,\n    layout,\n    schemaType,\n    title,\n    value,\n    documentPresence,\n  ])\n\n  const handleClick = useCallback((e: MouseEvent<HTMLElement>) => {\n    if (e.metaKey) {\n      setClicked(false)\n      return\n    }\n\n    setClicked(true)\n  }, [])\n\n  // Reset `clicked` state when `selected` prop changes\n  useEffect(() => setClicked(false), [selected])\n\n  // Preloads the edit state on hover, using concurrent rendering with `startTransition` so preloads can be interrupted and not block rendering\n  const [preloading, setPreload] = useState(false)\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null)\n  const handleMouseEnter = useCallback(() => {\n    timeoutRef.current = setTimeout(() => startTransition(() => setPreload(true)), 400)\n  }, [])\n  const handleMouseLeave = useCallback(() => {\n    if (timeoutRef.current) clearTimeout(timeoutRef.current)\n    startTransition(() => setPreload(false))\n  }, [])\n\n  return (\n    <PreviewCard\n      data-testid={`pane-item-${title}`}\n      __unstable_focusRing\n      as={ChildLink as FIXME}\n      // @ts-expect-error - `childId` is a valid prop on `ChildLink`\n      childId={id}\n      data-as=\"a\"\n      margin={margin}\n      marginBottom={marginBottom}\n      marginTop={marginTop}\n      onClick={handleClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      pressed={pressed}\n      radius={2}\n      selected={selected || clicked}\n      sizing=\"border\"\n      tabIndex={-1}\n      tone=\"inherit\"\n    >\n      {preview}\n      {preloading && schemaType?.name && value && isSanityDocument(value) && (\n        <PreloadDocumentPane documentId={id} documentType={schemaType.name} />\n      )}\n    </PreviewCard>\n  )\n}\n\nfunction PreloadDocumentPane(props: {documentId: string; documentType: string}) {\n  const {documentId, documentType} = props\n  // Preload the edit state for the document, and keep it alive until mouse leave\n  useEditState(getPublishedId(documentId), documentType)\n\n  return null\n}\nPreloadDocumentPane.displayName = 'PreloadDocumentPane'\n","import {memo, type ReactNode, useMemo} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDescription,\n  type DocumentActionGroup,\n  type DocumentActionProps,\n  getDraftId,\n  GetHookCollectionState,\n  getPublishedId,\n  useCanvasCompanionDoc,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\n/** @internal */\nexport interface Action<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderActionCollectionProps {\n  actions: Action<DocumentActionProps, DocumentActionDescription>[]\n  actionProps: Omit<DocumentActionProps, 'onComplete'>\n  children: (props: {states: DocumentActionDescription[]}) => ReactNode\n  onActionComplete?: () => void\n  group?: DocumentActionGroup\n}\n\n/** @internal */\nexport const RenderActionCollectionState = memo((props: RenderActionCollectionProps) => {\n  const {actions, children, actionProps, onActionComplete, group} = props\n\n  return (\n    <GetHookCollectionState<\n      Omit<DocumentActionProps, 'onComplete'>,\n      DocumentActionDescription & {action?: DocumentActionComponent['action']}\n    >\n      onReset={onActionComplete}\n      hooks={actions}\n      args={actionProps}\n      group={group}\n    >\n      {({states}) => (\n        <ActionsGuardWrapper\n          states={states}\n          documentId={\n            actionProps.liveEditSchemaType\n              ? getPublishedId(actionProps.id)\n              : getDraftId(actionProps.id)\n          }\n        >\n          {children}\n        </ActionsGuardWrapper>\n      )}\n    </GetHookCollectionState>\n  )\n})\nRenderActionCollectionState.displayName = 'Memo(RenderActionCollectionState)'\n\n/**\n * This is a list of the actions that are supported when a document is linked to Canvas.\n * Custom actions and actions that are not supported by Canvas will be disabled and will include a tooltip explaining that the action is not supported.\n */\nconst SUPPORTED_LINKED_TO_CANVAS_ACTIONS: DocumentActionComponent['action'][] = [\n  'delete',\n  'duplicate',\n  'publish',\n  'unpublish',\n  'unlinkFromCanvas',\n  'editInCanvas',\n  'linkToCanvas',\n  'schedule',\n]\n\ninterface ActionsGuardWrapperProps {\n  states: Array<DocumentActionDescription & {action?: DocumentActionComponent['action']}>\n  documentId: string\n  children: (props: {states: DocumentActionDescription[]}) => ReactNode\n}\n\nconst ActionsGuardWrapper = (props: ActionsGuardWrapperProps) => {\n  const {states, children, documentId} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isLinked} = useCanvasCompanionDoc(documentId)\n\n  const result = useMemo(() => {\n    if (isLinked) {\n      return children({\n        states: states.map((s) => {\n          if (!s.action || !SUPPORTED_LINKED_TO_CANVAS_ACTIONS.includes(s.action)) {\n            return {\n              ...s,\n              disabled: true,\n              title: t('action.disabled-by-canvas.tooltip'),\n            }\n          }\n          return s\n        }),\n      })\n    }\n    return children({states})\n  }, [children, states, t, isLinked])\n\n  return result\n}\n","import {memo, type ReactNode} from 'react'\nimport {\n  type DocumentBadgeDescription,\n  type DocumentBadgeProps,\n  type EditStateFor,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Badge<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderBadgeCollectionProps {\n  badges: Badge<DocumentBadgeProps, DocumentBadgeDescription>[]\n  badgeProps: EditStateFor\n  children: (props: {states: DocumentBadgeDescription[]}) => ReactNode\n}\n\n/** @internal */\nexport const RenderBadgeCollectionState = memo((props: RenderBadgeCollectionProps) => {\n  const {badges, children, badgeProps} = props\n\n  return (\n    <GetHookCollectionState<EditStateFor, DocumentBadgeDescription>\n      hooks={badges}\n      args={badgeProps}\n    >\n      {children}\n    </GetHookCollectionState>\n  )\n})\nRenderBadgeCollectionState.displayName = 'Memo(RenderBadgeCollectionState)'\n","import {useMemo} from 'react'\nimport {Subject} from 'rxjs'\n\nimport {type PathSyncChannel, type PathSyncState} from '../types/pathSyncChannel'\n\n/**\n * @internal\n */\nexport function useCreatePathSyncChannel(): PathSyncChannel {\n  return useMemo(() => new Subject<PathSyncState>(), [])\n}\n","/**\n * @internal\n */\nexport const DIFF_VIEW_SEARCH_PARAMETER = 'diffView'\n\n/**\n * @internal\n */\nexport const DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER = 'previousDocument'\n\n/**\n * @internal\n */\nexport const DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER = 'nextDocument'\n\n/**\n * @internal\n */\nexport const DIFF_SEARCH_PARAM_DELIMITER = ','\n","import {fromPairs, toPairs} from 'lodash'\nimport {useCallback} from 'react'\nimport {useRouter} from 'sanity/router'\n\nimport {\n  DIFF_SEARCH_PARAM_DELIMITER,\n  DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_SEARCH_PARAMETER,\n} from '../constants'\nimport {type DiffViewMode} from '../types/diffViewMode'\n\ntype NavigateDiffView = (\n  options: {\n    mode?: DiffViewMode\n  } & Partial<\n    Record<\n      'previousDocument' | 'nextDocument',\n      {\n        type: string\n        id: string\n      }\n    >\n  >,\n) => void\n\nexport interface DiffViewRouter {\n  navigateDiffView: NavigateDiffView\n  exitDiffView: () => void\n}\n\n/**\n * @internal\n */\nexport function useDiffViewRouter(): DiffViewRouter {\n  const {navigate, state: routerState} = useRouter()\n\n  const navigateDiffView = useCallback<NavigateDiffView>(\n    ({mode, previousDocument, nextDocument}) => {\n      const next = {\n        ...fromPairs(routerState._searchParams),\n        ...(mode\n          ? {\n              [DIFF_VIEW_SEARCH_PARAMETER]: mode,\n            }\n          : {}),\n        ...(previousDocument\n          ? {\n              [DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER]: [\n                previousDocument.type,\n                previousDocument.id,\n              ].join(DIFF_SEARCH_PARAM_DELIMITER),\n            }\n          : {}),\n        ...(nextDocument\n          ? {\n              [DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER]: [nextDocument.type, nextDocument.id].join(\n                DIFF_SEARCH_PARAM_DELIMITER,\n              ),\n            }\n          : {}),\n      }\n\n      navigate({\n        ...routerState,\n        _searchParams: toPairs(next),\n      })\n    },\n    [navigate, routerState],\n  )\n\n  const exitDiffView = useCallback(() => {\n    navigate({\n      ...routerState,\n      _searchParams: (routerState._searchParams ?? []).filter(\n        ([key]) =>\n          ![\n            DIFF_VIEW_SEARCH_PARAMETER,\n            DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n            DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n          ].includes(key),\n      ),\n    })\n  }, [navigate, routerState])\n\n  return {\n    navigateDiffView,\n    exitDiffView,\n  }\n}\n","/**\n * @internal\n */\nexport const diffViewModes = ['version'] as const\n\n/**\n * @internal\n */\nexport type DiffViewMode = (typeof diffViewModes)[number]\n","import {useEffect, useMemo} from 'react'\nimport {useRouter} from 'sanity/router'\n\nimport {\n  DIFF_SEARCH_PARAM_DELIMITER,\n  DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_SEARCH_PARAMETER,\n} from '../constants'\nimport {type DiffViewMode, diffViewModes} from '../types/diffViewMode'\n\nfunction isDiffViewMode(maybeDiffViewMode: unknown): maybeDiffViewMode is DiffViewMode {\n  return diffViewModes.includes(maybeDiffViewMode as DiffViewMode)\n}\n\ntype DiffViewState =\n  | {\n      isActive: true\n      state: 'ready'\n      mode: DiffViewMode\n      documents: Record<\n        'previous' | 'next',\n        {\n          type: string\n          id: string\n        }\n      >\n    }\n  | {\n      isActive: true\n      state: 'error'\n      mode: DiffViewMode\n      documents?: never\n    }\n  | {\n      isActive: false\n      state?: never\n      mode?: never\n      documents?: never\n    }\n\nexport function useDiffViewState({\n  onParamsError,\n}: {\n  onParamsError?: (errors: DiffViewStateErrorWithInput[]) => void\n} = {}): DiffViewState {\n  const {state: routerState} = useRouter()\n  const searchParams = new URLSearchParams(routerState._searchParams)\n  const previousDocument = searchParams.get(DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER)\n  const nextDocument = searchParams.get(DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER)\n  const mode = searchParams.get(DIFF_VIEW_SEARCH_PARAMETER)\n  const anyParamSet = [previousDocument, nextDocument, mode].some((param) => param !== null)\n\n  const params = useMemo(\n    () =>\n      parseParams({\n        previousDocument: previousDocument ?? '',\n        nextDocument: nextDocument ?? '',\n        mode: mode ?? '',\n      }),\n    [mode, nextDocument, previousDocument],\n  )\n\n  useEffect(() => {\n    if (params.result === 'error' && anyParamSet) {\n      onParamsError?.(params.errors)\n    }\n  }, [anyParamSet, onParamsError, params])\n\n  if (params.result === 'error') {\n    return {\n      isActive: false,\n    }\n  }\n\n  return {\n    state: 'ready',\n    isActive: true,\n    ...params.params,\n  }\n}\n\ntype DiffViewStateError =\n  | 'invalidModeParam'\n  | 'invalidPreviousDocumentParam'\n  | 'invalidNextDocumentParam'\n\ntype DiffViewStateErrorWithInput = [error: DiffViewStateError, input: unknown]\n\ninterface ParamsSuccess {\n  result: 'success'\n  params: Pick<DiffViewState & {state: 'ready'}, 'mode' | 'documents'>\n}\n\ninterface ParamsError {\n  result: 'error'\n  errors: DiffViewStateErrorWithInput[]\n}\n\nfunction parseParams({\n  previousDocument,\n  nextDocument,\n  mode,\n}: {\n  previousDocument: string\n  nextDocument: string\n  mode: string\n}): ParamsSuccess | ParamsError {\n  const errors: DiffViewStateErrorWithInput[] = []\n\n  const [previousDocumentType, previousDocumentId] = previousDocument\n    .split(DIFF_SEARCH_PARAM_DELIMITER)\n    .filter(Boolean)\n\n  const [nextDocumentType, nextDocumentId] = nextDocument\n    .split(DIFF_SEARCH_PARAM_DELIMITER)\n    .filter(Boolean)\n\n  if (!isDiffViewMode(mode)) {\n    errors.push(['invalidModeParam', mode])\n  }\n\n  if (typeof previousDocumentType === 'undefined' || typeof previousDocumentId === 'undefined') {\n    errors.push(['invalidPreviousDocumentParam', previousDocument])\n  }\n\n  if (typeof nextDocumentType === 'undefined' || typeof nextDocumentId === 'undefined') {\n    errors.push(['invalidNextDocumentParam', nextDocument])\n  }\n\n  if (errors.length !== 0) {\n    return {\n      result: 'error',\n      errors,\n    }\n  }\n\n  return {\n    result: 'success',\n    params: {\n      mode,\n      documents: {\n        previous: {\n          type: previousDocumentType,\n          id: previousDocumentId,\n        },\n        next: {\n          type: nextDocumentType,\n          id: nextDocumentId,\n        },\n      },\n    },\n  } as ParamsSuccess\n}\n","import {useEffect} from 'react'\nimport ScrollMirror from 'scrollmirror'\n\n/**\n * Use the ScrollMirror library to synchronise the scroll position for an array of elements.\n *\n * @internal\n */\nexport function useScrollMirror(elements: (HTMLElement | null)[]): void {\n  useEffect(() => {\n    const existentElements = elements.filter((element) => element !== null)\n\n    if (existentElements.length === 0) {\n      return undefined\n    }\n\n    const scrollMirror = new ScrollMirror(existentElements)\n    return () => scrollMirror.destroy()\n  }, [elements])\n}\n","import {CloseIcon, LockIcon, TransferIcon} from '@sanity/icons'\nimport {\n  Box,\n  // eslint-disable-next-line no-restricted-imports -- we need more control over how the `Button` component is rendered\n  Button,\n  type ButtonTone,\n  Flex,\n  Menu,\n  // eslint-disable-next-line no-restricted-imports -- the `VersionModeHeader` component needs more control over how the `MenuItem` component is rendered\n  MenuItem,\n  Stack,\n  Text,\n} from '@sanity/ui'\nimport {type TFunction} from 'i18next'\nimport {type ComponentProps, type ComponentType, useCallback, useMemo} from 'react'\nimport {\n  type DocumentLayoutProps,\n  formatRelativeLocalePublishDate,\n  getDraftId,\n  getPublishedId,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  getVersionId,\n  isDraftId,\n  isPublishedId,\n  isReleaseDocument,\n  isReleaseScheduledOrScheduling,\n  ReleaseAvatar,\n  type ReleaseDocument,\n  useActiveReleases,\n  useDocumentVersions,\n  useEditState,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {MenuButton} from '../../../../ui-components/menuButton/MenuButton'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useDiffViewRouter} from '../../hooks/useDiffViewRouter'\nimport {useDiffViewState} from '../../hooks/useDiffViewState'\n\nconst VersionModeHeaderLayout = styled.header`\n  display: grid;\n  grid-area: header;\n  grid-template-columns: 1fr min-content 1fr;\n  border-block-end: 1px solid var(--card-border-color);\n`\n\nconst VersionModeHeaderLayoutSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\n/**\n * The header component that is rendered when diff view is being used to compare versions of a\n * document.\n *\n * @internal\n */\nexport const VersionModeHeader: ComponentType<\n  {state: 'pending' | 'ready' | 'error'} & Pick<DocumentLayoutProps, 'documentId'>\n> = ({documentId, state}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {data: documentVersions} = useDocumentVersions({documentId})\n  const {exitDiffView, navigateDiffView} = useDiffViewRouter()\n  const {documents} = useDiffViewState()\n  const activeReleases = useActiveReleases()\n  const releasesIds = documentVersions.flatMap((id) => getVersionFromId(id) ?? [])\n\n  const releases = useMemo(() => {\n    return activeReleases.data.filter((release) => {\n      const releaseId = getReleaseIdFromReleaseDocumentId(release._id)\n      return typeof releaseId !== 'undefined' && releasesIds.includes(releaseId)\n    })\n  }, [activeReleases.data, releasesIds])\n\n  const onSelectPreviousRelease = useCallback(\n    (selectedDocumentId: string): void => {\n      if (typeof documents?.previous !== 'undefined') {\n        navigateDiffView({\n          previousDocument: {\n            ...documents.previous,\n            id: selectedDocumentId,\n          },\n        })\n      }\n    },\n    [documents?.previous, navigateDiffView],\n  )\n\n  const onSelectNextRelease = useCallback(\n    (selectedDocumentId: string): void => {\n      if (typeof documents?.next !== 'undefined') {\n        navigateDiffView({\n          nextDocument: {\n            ...documents.next,\n            id: selectedDocumentId,\n          },\n        })\n      }\n    },\n    [documents?.next, navigateDiffView],\n  )\n\n  return (\n    <VersionModeHeaderLayout>\n      <VersionModeHeaderLayoutSection>\n        <Box padding={4}>\n          <Text as=\"h1\" size={1} muted>\n            {t('compare-versions.title')}\n          </Text>\n        </Box>\n        {typeof documents?.previous !== 'undefined' && (\n          <VersionMenu\n            releases={releases}\n            onSelectRelease={onSelectPreviousRelease}\n            role=\"previous\"\n            documentId={documentId}\n            state={state}\n            document={documents.previous}\n          />\n        )}\n      </VersionModeHeaderLayoutSection>\n      <Flex align=\"center\" paddingX={3}>\n        <Text size={1}>\n          <TransferIcon />\n        </Text>\n      </Flex>\n      <VersionModeHeaderLayoutSection>\n        {typeof documents?.next !== 'undefined' && (\n          <VersionMenu\n            releases={releases}\n            onSelectRelease={onSelectNextRelease}\n            role=\"next\"\n            documentId={documentId}\n            state={state}\n            document={documents.next}\n          />\n        )}\n        <Box\n          padding={3}\n          style={{\n            justifySelf: 'end',\n          }}\n        >\n          <Button icon={CloseIcon} mode=\"bleed\" onClick={exitDiffView} padding={2} />\n        </Box>\n      </VersionModeHeaderLayoutSection>\n    </VersionModeHeaderLayout>\n  )\n}\n\ninterface VersionMenuProps {\n  state: 'pending' | 'ready' | 'error'\n  releases: ReleaseDocument[]\n  role: 'previous' | 'next'\n  onSelectRelease: (releaseId: string) => void\n  documentId: string\n  document: {\n    type: string\n    id: string\n  }\n}\n\nconst VersionMenu: ComponentType<VersionMenuProps> = ({\n  releases = [],\n  onSelectRelease,\n  role,\n  documentId,\n  document,\n}) => {\n  const {published, draft} = useEditState(getPublishedId(document.id), document.type)\n  const selected = useMemo(() => findRelease(document.id, releases), [document.id, releases])\n  const {t: tStructure} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  return (\n    <MenuButton\n      id={role}\n      button={\n        <Button\n          type=\"button\"\n          mode=\"bleed\"\n          padding={2}\n          paddingRight={3}\n          radius=\"full\"\n          selected\n          {...getMenuButtonProps({selected, tCore, tStructure})}\n        />\n      }\n      menu={\n        <Menu>\n          {published && (\n            <VersionMenuItem\n              type=\"published\"\n              onSelect={onSelectRelease}\n              isSelected={selected === 'published'}\n              documentId={documentId}\n            />\n          )}\n          {draft && (\n            <VersionMenuItem\n              type=\"draft\"\n              onSelect={onSelectRelease}\n              isSelected={selected === 'draft'}\n              documentId={documentId}\n            />\n          )}\n          {releases.map((release) => (\n            <VersionMenuItem\n              key={release._id}\n              release={release}\n              onSelect={onSelectRelease}\n              isSelected={typeof selected !== 'string' && selected?._id === release._id}\n              documentId={documentId}\n            />\n          ))}\n        </Menu>\n      }\n    />\n  )\n}\n\ntype VersionMenuItemProps = {\n  onSelect: (releaseId: string) => void\n  isSelected?: boolean\n  documentId: string\n} & (\n  | {\n      release: ReleaseDocument\n      type?: never\n    }\n  | {\n      type: 'published' | 'draft'\n      release?: never\n    }\n)\n\nconst VersionMenuItem: ComponentType<VersionMenuItemProps> = ({\n  type,\n  release,\n  onSelect,\n  isSelected,\n  documentId,\n}) => {\n  const {t: tCore} = useTranslation()\n  const {t: tStructure} = useTranslation(structureLocaleNamespace)\n\n  const onClick = useCallback(() => {\n    if (type === 'draft') {\n      onSelect(getDraftId(documentId))\n      return\n    }\n\n    if (type === 'published') {\n      onSelect(getPublishedId(documentId))\n      return\n    }\n\n    if (typeof release?._id !== 'undefined') {\n      onSelect(getVersionId(documentId, getReleaseIdFromReleaseDocumentId(release._id)))\n    }\n  }, [type, onSelect, documentId, release?._id])\n\n  if (type) {\n    const tone: ButtonTone = type === 'published' ? 'positive' : 'caution'\n\n    return (\n      <MenuItem padding={1} paddingRight={3} onClick={onClick} pressed={isSelected}>\n        <Flex gap={1}>\n          <ReleaseAvatar padding={2} tone={tone} />\n          <Box paddingY={2}>\n            <Text size={1} weight=\"medium\">\n              {tStructure(['compare-versions.status', type].join('.'))}\n            </Text>\n          </Box>\n        </Flex>\n      </MenuItem>\n    )\n  }\n\n  const tone: ButtonTone = release ? getReleaseTone(release) : 'neutral'\n\n  return (\n    <MenuItem padding={1} paddingRight={3} onClick={onClick} pressed={isSelected}>\n      <Flex gap={1}>\n        <ReleaseAvatar padding={2} tone={tone} />\n        <Stack flex={1} paddingY={2} paddingRight={2} space={2}>\n          <Text size={1} weight=\"medium\">\n            {release.metadata.title || tCore('release.placeholder-untitled-release')}\n          </Text>\n          {['asap', 'undecided'].includes(release.metadata.releaseType) && (\n            <Text muted size={1}>\n              {tCore(`release.type.${release.metadata.releaseType}`)}\n            </Text>\n          )}\n          {release.metadata.releaseType === 'scheduled' && (\n            <Text muted size={1}>\n              {formatRelativeLocalePublishDate(release)}\n            </Text>\n          )}\n        </Stack>\n        <Flex flex=\"none\">\n          {isReleaseScheduledOrScheduling(release) && (\n            <Box padding={2}>\n              <Text size={1}>\n                <LockIcon />\n              </Text>\n            </Box>\n          )}\n        </Flex>\n      </Flex>\n    </MenuItem>\n  )\n}\n\nfunction getMenuButtonProps({\n  selected,\n  tCore,\n  tStructure,\n}: {\n  selected?: ReleaseDocument | 'published' | 'draft'\n  tCore: TFunction\n  tStructure: TFunction\n}): Pick<ComponentProps<typeof Button>, 'text' | 'tone' | 'icon' | 'iconRight' | 'disabled'> {\n  if (typeof selected === 'undefined') {\n    return {\n      text: tCore('common.loading'),\n      tone: 'neutral',\n      disabled: true,\n    }\n  }\n\n  if (isReleaseDocument(selected)) {\n    const tone: ButtonTone = selected ? getReleaseTone(selected) : 'neutral'\n\n    return {\n      text: selected?.metadata.title || tCore('release.placeholder-untitled-release'),\n      icon: <ReleaseAvatar padding={1} tone={tone} />,\n      iconRight: selected && isReleaseScheduledOrScheduling(selected) ? <LockIcon /> : undefined,\n      tone,\n    }\n  }\n\n  const tone: ButtonTone = selected === 'published' ? 'positive' : 'caution'\n\n  return {\n    text: tStructure(['compare-versions.status', selected].join('.')),\n    icon: <ReleaseAvatar padding={1} tone={tone} />,\n    tone,\n  }\n}\n\n/**\n * If the provided document id represents a version, find and return the corresponding release\n * document. Otherwise, return a string literal signifying whether the document id represents a\n * published or draft document.\n */\nfunction findRelease(\n  documentId: string,\n  releases: ReleaseDocument[],\n): ReleaseDocument | 'published' | 'draft' | undefined {\n  if (isPublishedId(documentId)) {\n    return 'published'\n  }\n\n  if (isDraftId(documentId)) {\n    return 'draft'\n  }\n\n  return releases.find(\n    ({_id}) => getReleaseIdFromReleaseDocumentId(_id) === getVersionFromId(documentId),\n  )\n}\n","import {styled} from 'styled-components'\n\nexport const DialogLayout = styled.div`\n  --offset-block: 40px;\n  display: grid;\n  height: calc(100vh - var(--offset-block));\n  min-height: 0;\n  overflow: hidden;\n  grid-template-areas:\n    'header header'\n    'previous-document next-document';\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: min-content minmax(0, 1fr);\n`\n","import {type ComponentType} from 'react'\nimport {type DocumentLayoutProps, type PluginOptions} from 'sanity'\n\n/**\n * Pick the document layout component when composing the component middleware chain.\n */\nexport function pickDocumentLayoutComponent(plugin: PluginOptions) {\n  return plugin.document?.components?.unstable_layout as ComponentType<\n    Omit<DocumentLayoutProps, 'renderDefault'>\n  >\n}\n","import {type Path} from '@sanity/types'\nimport {useCallback, useMemo} from 'react'\nimport deepEquals from 'react-fast-compare'\nimport {distinctUntilChanged, filter, map, type Observable} from 'rxjs'\n\nimport {type PathSyncChannelProps, type PathSyncState} from '../types/pathSyncChannel'\n\ntype Push = (state: PathSyncState) => void\n\n/**\n * Synchronise the open path between multiple document panes.\n *\n * @internal\n */\nexport function usePathSyncChannel({syncChannel, id}: PathSyncChannelProps): {\n  push: Push\n  path: Observable<Path>\n} {\n  const push = useCallback<Push>(\n    (state) => syncChannel.next({...state, source: id}),\n    [id, syncChannel],\n  )\n\n  const path = useMemo(\n    () =>\n      syncChannel.pipe(\n        distinctUntilChanged<PathSyncState>((previous, next) =>\n          deepEquals(previous.path, next.path),\n        ),\n        filter(({source}) => source !== id),\n        map((state) => state.path),\n      ),\n    [id, syncChannel],\n  )\n\n  return {\n    path,\n    push,\n  }\n}\n","import {styled} from 'styled-components'\n\nexport const Scroller = styled.div`\n  position: relative;\n  height: 100%;\n  overflow: auto;\n  scroll-behavior: smooth;\n  scrollbar-width: var(--scrollbar-width);\n  overscroll-behavior: contain;\n  will-change: scroll-position;\n`\n","import {type Path, type SanityDocument} from '@sanity/types'\nimport {\n  BoundaryElementProvider,\n  Card,\n  Container as UiContainer,\n  DialogProvider,\n  PortalProvider,\n} from '@sanity/ui'\nimport {noop} from 'lodash'\nimport {\n  type ComponentType,\n  type CSSProperties,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {\n  ChangeIndicatorsTracker,\n  createPatchChannel,\n  FormBuilder,\n  getPublishedId,\n  getVersionFromId,\n  isDraftId,\n  isPublishedId,\n  isVersionId,\n  LoadingBlock,\n  useDocumentForm,\n  useEditState,\n  useMiddlewareComponents,\n  VirtualizerScrollInstanceProvider,\n} from 'sanity'\nimport {CommentsEnabledContext, ConnectorContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {pickDocumentLayoutComponent} from '../../panes/document/document-layout/pickDocumentLayoutComponent'\nimport {usePathSyncChannel} from '../hooks/usePathSyncChannel'\nimport {type PathSyncChannel} from '../types/pathSyncChannel'\nimport {Scroller} from './Scroller'\n\nconst DiffViewPaneLayout = styled(Card)`\n  position: relative;\n  grid-area: var(--grid-area);\n`\n\nconst Container = styled(UiContainer)`\n  width: auto;\n`\n\ninterface DiffViewPaneProps {\n  documentType: string\n  documentId: string\n  role: 'previous' | 'next'\n  scrollElement: HTMLElement | null\n  syncChannel: PathSyncChannel\n  compareDocument: {\n    type: string\n    id: string\n  }\n}\n\nexport const DiffViewPane = forwardRef<HTMLDivElement, DiffViewPaneProps>(function DiffViewPane(\n  {role, documentType, documentId, scrollElement, syncChannel, compareDocument},\n  ref,\n) {\n  const containerElement = useRef<HTMLDivElement | null>(null)\n  const [portalElement, setPortalElement] = useState<HTMLDivElement | null>(null)\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const DocumentLayout = useMiddlewareComponents({\n    pick: pickDocumentLayoutComponent,\n    defaultComponent: useCallback(\n      () => (\n        <DiffViewDocument\n          compareDocument={compareDocument}\n          documentId={documentId}\n          documentType={documentType}\n          role={role}\n          scrollElement={scrollElement}\n          syncChannel={syncChannel}\n        />\n      ),\n      [compareDocument, documentId, documentType, role, scrollElement, syncChannel],\n    ),\n  })\n\n  return (\n    <ConnectorContext.Provider\n      value={{\n        // Render the change indicators inertly, because the diff view modal does not currently\n        // provide a way to display document inspectors.\n        isInteractive: false,\n        onOpenReviewChanges: noop,\n        onSetFocus: noop,\n        isReviewChangesOpen: false,\n      }}\n    >\n      <ChangeIndicatorsTracker>\n        <VirtualizerScrollInstanceProvider\n          scrollElement={scrollElement}\n          containerElement={containerElement}\n        >\n          <BoundaryElementProvider element={boundaryElement}>\n            <DiffViewPaneLayout\n              ref={setBoundaryElement}\n              style={\n                {\n                  '--grid-area': `${role}-document`,\n                } as CSSProperties\n              }\n              borderLeft={role === 'next'}\n            >\n              <Scroller\n                ref={ref}\n                style={\n                  {\n                    // The scroll position is synchronised between panes. This style hides the\n                    // scrollbar for all panes except the one displaying the next document.\n                    '--scrollbar-width': role !== 'next' && 'none',\n                  } as CSSProperties\n                }\n              >\n                <PortalProvider element={portalElement}>\n                  <DialogProvider position=\"absolute\">\n                    <Container ref={containerElement} padding={4} width={1}>\n                      <DocumentLayout documentId={documentId} documentType={documentType} />\n                    </Container>\n                  </DialogProvider>\n                </PortalProvider>\n              </Scroller>\n              <div data-testid=\"diffView-document-panel-portal\" ref={setPortalElement} />\n            </DiffViewPaneLayout>\n          </BoundaryElementProvider>\n        </VirtualizerScrollInstanceProvider>\n      </ChangeIndicatorsTracker>\n    </ConnectorContext.Provider>\n  )\n})\n\nconst DiffViewDocument: ComponentType<DiffViewPaneProps> = ({\n  role,\n  documentType,\n  documentId,\n  syncChannel,\n  compareDocument,\n}) => {\n  const compareValue = useCompareValue({compareDocument})\n  const [patchChannel] = useState(() => createPatchChannel())\n\n  const {\n    formState,\n    onChange,\n    onFocus,\n    onBlur,\n    onSetActiveFieldGroup,\n    onSetCollapsedFieldSet,\n    onSetCollapsedPath,\n    collapsedFieldSets,\n    ready,\n    collapsedPaths,\n    schemaType,\n    value,\n    onProgrammaticFocus,\n    ...documentForm\n  } = useDocumentForm({\n    documentId: getPublishedId(documentId),\n    documentType,\n    selectedPerspectiveName: perspectiveName(documentId),\n    releaseId: getVersionFromId(documentId),\n    comparisonValue: compareValue,\n  })\n\n  const isLoading = formState === null || !ready\n\n  const pathSyncChannel = usePathSyncChannel({\n    id: role,\n    syncChannel,\n  })\n\n  const onPathOpen = useCallback(\n    (path: Path) => {\n      documentForm.onPathOpen(path)\n      pathSyncChannel.push({source: role, path})\n    },\n    [documentForm, pathSyncChannel, role],\n  )\n\n  useEffect(() => {\n    const subscription = pathSyncChannel.path.subscribe(onProgrammaticFocus)\n    return () => subscription.unsubscribe()\n  }, [onProgrammaticFocus, pathSyncChannel.path])\n\n  return isLoading ? (\n    <LoadingBlock showText />\n  ) : (\n    <CommentsEnabledContext.Provider\n      value={{\n        enabled: false,\n        mode: null,\n      }}\n    >\n      <FormBuilder\n        // eslint-disable-next-line camelcase\n        __internal_patchChannel={patchChannel}\n        id={`diffView-pane-${role}`}\n        onChange={onChange}\n        onPathFocus={onFocus}\n        onPathOpen={onPathOpen}\n        onPathBlur={onBlur}\n        onFieldGroupSelect={onSetActiveFieldGroup}\n        onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n        onSetPathCollapsed={onSetCollapsedPath}\n        collapsedPaths={collapsedPaths}\n        collapsedFieldSets={collapsedFieldSets}\n        focusPath={formState.focusPath}\n        changed={formState.changed}\n        focused={formState.focused}\n        groups={formState.groups}\n        validation={formState.validation}\n        members={formState.members}\n        presence={formState.presence}\n        schemaType={schemaType}\n        value={value}\n      />\n    </CommentsEnabledContext.Provider>\n  )\n}\n\nfunction perspectiveName(documentId: string): string | undefined {\n  if (isVersionId(documentId)) {\n    return getVersionFromId(documentId)\n  }\n\n  if (isPublishedId(documentId)) {\n    return 'published'\n  }\n\n  return undefined\n}\n\ntype UseCompareValueOptions = Pick<DiffViewPaneProps, 'compareDocument'>\n\n/**\n * Fetch the contents of `compareDocument` for comparison with another version of the document.\n */\nfunction useCompareValue({compareDocument}: UseCompareValueOptions): SanityDocument | undefined {\n  const compareDocumentEditState = useEditState(\n    getPublishedId(compareDocument.id),\n    compareDocument.type,\n    'low',\n    getVersionFromId(compareDocument.id),\n  )\n\n  return useMemo(() => {\n    if (isVersionId(compareDocument.id)) {\n      return compareDocumentEditState.version ?? undefined\n    }\n\n    if (isDraftId(compareDocument.id)) {\n      return compareDocumentEditState.draft ?? undefined\n    }\n\n    if (isPublishedId(compareDocument.id)) {\n      return compareDocumentEditState.published ?? undefined\n    }\n\n    return undefined\n  }, [\n    compareDocument.id,\n    compareDocumentEditState.draft,\n    compareDocumentEditState.published,\n    compareDocumentEditState.version,\n  ])\n}\n","import {type ReferenceInputOptions} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\nimport {styled} from 'styled-components'\n\nconst Link = styled.a`\n  flex: 1;\n  text-decoration: none;\n  color: inherit;\n`\n\nexport const EditReferenceLinkComponent: ReferenceInputOptions['EditReferenceLinkComponent'] = ({\n  children,\n  documentId: _documentId,\n  documentType,\n}) => {\n  const {href} = useIntentLink({\n    intent: 'edit',\n    params: {\n      id: _documentId,\n      type: documentType,\n    },\n  })\n\n  return (\n    <Link href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      {children}\n    </Link>\n  )\n}\n","import {type ComponentType, useContext, useMemo, useState} from 'react'\nimport {type DocumentLayoutProps} from 'sanity'\nimport {ReferenceInputOptionsContext} from 'sanity/_singletons'\n\nimport {Dialog} from '../../../ui-components/dialog/Dialog'\nimport {useCreatePathSyncChannel} from '../hooks/useCreatePathSyncChannel'\nimport {useDiffViewRouter} from '../hooks/useDiffViewRouter'\nimport {useDiffViewState} from '../hooks/useDiffViewState'\nimport {useScrollMirror} from '../hooks/useScrollMirror'\nimport {VersionModeHeader} from '../versionMode/components/VersionModeHeader'\nimport {DialogLayout} from './DialogLayout'\nimport {DiffViewPane} from './DiffViewPane'\nimport {EditReferenceLinkComponent} from './EditReferenceLinkComponent'\n\nexport const DiffView: ComponentType<Pick<DocumentLayoutProps, 'documentId'>> = ({documentId}) => {\n  const {documents, state, mode} = useDiffViewState()\n  const {exitDiffView} = useDiffViewRouter()\n  const syncChannel = useCreatePathSyncChannel()\n  const [previousPaneElement, setPreviousPaneElement] = useState<HTMLElement | null>(null)\n  const [nextPaneElement, setNextPaneElement] = useState<HTMLElement | null>(null)\n  const referenceInputOptionsContext = useContext(ReferenceInputOptionsContext)\n\n  const diffViewReferenceInputOptionsContext = useMemo(\n    () => ({\n      ...referenceInputOptionsContext,\n      disableNew: true,\n      EditReferenceLinkComponent,\n    }),\n    [referenceInputOptionsContext],\n  )\n\n  useScrollMirror([previousPaneElement, nextPaneElement])\n\n  return (\n    <ReferenceInputOptionsContext.Provider value={diffViewReferenceInputOptionsContext}>\n      <Dialog\n        id=\"diffView\"\n        width=\"auto\"\n        onClose={exitDiffView}\n        padding={false}\n        __unstable_hideCloseButton\n      >\n        <DialogLayout>\n          {mode === 'version' && <VersionModeHeader documentId={documentId} state={state} />}\n          {state === 'ready' && (\n            <>\n              <DiffViewPane\n                documentType={documents.previous.type}\n                documentId={documents.previous.id}\n                role=\"previous\"\n                ref={setPreviousPaneElement}\n                scrollElement={previousPaneElement}\n                syncChannel={syncChannel}\n                compareDocument={documents.previous}\n              />\n              <DiffViewPane\n                documentType={documents.next.type}\n                documentId={documents.next.id}\n                role=\"next\"\n                ref={setNextPaneElement}\n                scrollElement={nextPaneElement}\n                syncChannel={syncChannel}\n                // The previous document's edit state is used to calculate the diff inroduced by the next document.\n                compareDocument={documents.previous}\n              />\n            </>\n          )}\n        </DialogLayout>\n      </Dialog>\n    </ReferenceInputOptionsContext.Provider>\n  )\n}\n","import {useToast} from '@sanity/ui'\nimport {type ComponentType, type PropsWithChildren} from 'react'\nimport {type DocumentLayoutProps, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {DiffView} from '../components/DiffView'\nimport {useDiffViewState} from '../hooks/useDiffViewState'\n\nexport const DiffViewDocumentLayout: ComponentType<\n  PropsWithChildren<Pick<DocumentLayoutProps, 'documentId' | 'documentType'>>\n> = ({children, documentId}) => {\n  const toast = useToast()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isActive} = useDiffViewState({\n    onParamsError: (errors) => {\n      toast.push({\n        id: 'diffViewParamsParsingError',\n        status: 'error',\n        title: t('compare-version.error.invalidParams.title'),\n        description: (\n          <ul>\n            {errors.map(([error, input]) => (\n              <li key={error}>\n                {t(`compare-version.error.${error}`, {\n                  input,\n                })}\n              </li>\n            ))}\n          </ul>\n        ),\n      })\n    },\n  })\n\n  return (\n    <>\n      {children}\n      {isActive && <DiffView documentId={documentId} />}\n    </>\n  )\n}\n","import {Box, type CardTone} from '@sanity/ui'\n\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\n\n/**\n * @internal\n */\nexport function ErrorPane(props: {\n  children?: React.ReactNode\n  currentMinWidth?: number\n  flex?: number\n  minWidth?: number\n  paneKey: string\n  title?: React.ReactNode\n  tone?: CardTone\n}) {\n  const {\n    children,\n    currentMinWidth,\n    flex,\n    minWidth,\n    paneKey,\n    title = 'Error',\n    tone = 'critical',\n  } = props\n\n  return (\n    <Pane\n      currentMinWidth={currentMinWidth}\n      flex={flex}\n      id={paneKey}\n      minWidth={minWidth}\n      tone={tone}\n    >\n      <PaneHeader title={title} />\n      <PaneContent overflow=\"auto\">\n        <Box paddingX={4} paddingY={5}>\n          {children}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n","import {merge, type Observable, of} from 'rxjs'\nimport {delay, mapTo} from 'rxjs/operators'\nimport {isDev} from 'sanity'\n\n/**\n * @internal\n */\nexport type WaitMessage = {messageKey: string} | {message: string}\n\n/**\n * @internal\n */\nexport function getWaitMessages(path: string[]): Observable<WaitMessage> {\n  const thresholds: (WaitMessage & {ms: number})[] = [\n    {ms: 300, messageKey: 'panes.resolving.default-message'},\n    {ms: 5000, messageKey: 'panes.resolving.slow-resolve-message'},\n  ]\n\n  if (isDev) {\n    const message = [\n      'Check console for errors?',\n      'Is your observable/promise resolving?',\n      path.length > 0 ? `Structure path: ${path.join(' ➝ ')}` : '',\n    ]\n\n    thresholds.push({\n      ms: 10000,\n      message: message.join('\\n'),\n    })\n  }\n\n  const src = of(null)\n\n  return merge(\n    ...thresholds.map((threshold) =>\n      src.pipe(\n        mapTo(\n          'messageKey' in threshold\n            ? {messageKey: threshold.messageKey}\n            : {message: threshold.message},\n        ),\n        delay(threshold.ms),\n      ),\n    ),\n  )\n}\n","import {_raf2, type CardTone, Flex} from '@sanity/ui'\nimport {memo, useEffect, useMemo, useState} from 'react'\nimport {type Observable} from 'rxjs'\nimport {LoadingBlock, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Delay} from '../../components/Delay'\nimport {Pane, PaneContent} from '../../components/pane'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {getWaitMessages, type WaitMessage} from './getWaitMessages'\n\ninterface LoadingPaneProps {\n  delay?: number\n  flex?: number\n  message?: string | ((p: string[]) => string | Observable<WaitMessage>)\n  minWidth?: number\n  paneKey: string\n  path?: string\n  selected?: boolean\n  title?: string\n  tone?: CardTone\n}\n\nconst DELAY = false\nconst DEFAULT_MESSAGE_KEY = 'panes.resolving.default-message'\n\nconst Content = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n`\n\n/**\n * @internal\n */\nexport const LoadingPane = memo((props: LoadingPaneProps) => {\n  const {\n    delay = 300,\n    flex,\n    message: messageProp = getWaitMessages,\n    minWidth,\n    paneKey,\n    path,\n    selected,\n    title,\n    tone,\n  } = props\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const resolvedMessage = useMemo(() => {\n    if (typeof messageProp === 'function') {\n      return messageProp(path ? path.split(';') : [])\n    }\n\n    return messageProp\n  }, [messageProp, path])\n\n  const [currentMessage, setCurrentMessage] = useState<string | null>(() => {\n    if (typeof resolvedMessage === 'string') return resolvedMessage\n    return t(DEFAULT_MESSAGE_KEY)\n  })\n\n  useEffect(() => {\n    if (typeof resolvedMessage !== 'object') return undefined\n    if (typeof resolvedMessage.subscribe !== 'function') return undefined\n\n    const sub = resolvedMessage.subscribe((message) => {\n      setCurrentMessage('messageKey' in message ? t(message.messageKey) : message.message)\n    })\n\n    return () => sub.unsubscribe()\n  }, [resolvedMessage, t])\n\n  const [contentElement, setContentElement] = useState<HTMLDivElement | null>(null)\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    if (!contentElement) return undefined\n    return _raf2(() => setMounted(true))\n  }, [contentElement])\n\n  const content = (\n    <Content\n      align=\"center\"\n      data-mounted={mounted ? '' : undefined}\n      direction=\"column\"\n      height=\"fill\"\n      justify=\"center\"\n      ref={setContentElement}\n    >\n      <LoadingBlock showText title={title || currentMessage} />\n    </Content>\n  )\n\n  return (\n    <Pane flex={flex} id={paneKey} minWidth={minWidth} selected={selected} tone={tone}>\n      <PaneContent>{DELAY ? <Delay ms={delay}>{content}</Delay> : content}</PaneContent>\n    </Pane>\n  )\n})\n\nLoadingPane.displayName = 'Memo(LoadingPane)'\n","import {useContext} from 'react'\nimport {DocumentPaneContext} from 'sanity/_singletons'\n\nimport {type DocumentPaneContextValue} from './DocumentPaneContext'\n\n/** @internal */\nexport function useDocumentPane(): DocumentPaneContextValue {\n  const documentPane = useContext(DocumentPaneContext)\n\n  if (!documentPane) {\n    throw new Error('DocumentPane: missing context value')\n  }\n\n  return documentPane\n}\n","import {useCallback, useLayoutEffect, useRef} from 'react'\nimport {\n  COMMENTS_INSPECTOR_NAME,\n  CommentsEnabledProvider,\n  CommentsProvider,\n  useCommentsEnabled,\n  usePerspective,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface CommentsWrapperProps {\n  children: React.ReactNode\n  documentId: string\n  documentType: string\n}\n\n/**\n * @internal\n * A wrapper that conditionally wraps the document layout in a comments provider\n * if the feature is enabled for the project and the current document.\n */\nexport function CommentsWrapper(props: CommentsWrapperProps) {\n  const {children, documentId, documentType} = props\n\n  return (\n    <CommentsEnabledProvider documentId={documentId} documentType={documentType}>\n      <CommentsProviderWrapper documentId={documentId} documentType={documentType}>\n        {children}\n      </CommentsProviderWrapper>\n    </CommentsEnabledProvider>\n  )\n}\n\nfunction CommentsProviderWrapper(props: CommentsWrapperProps) {\n  const {children, documentId, documentType} = props\n\n  const {enabled} = useCommentsEnabled()\n  const {connectionState, onPathOpen, inspector, openInspector} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const {params, setParams, createPathWithParams} = usePaneRouter()\n\n  const selectedCommentId = params?.comment\n  const paramsRef = useRef(params)\n\n  useLayoutEffect(() => {\n    paramsRef.current = params\n  }, [params])\n\n  const getCommentLink = useCallback(\n    (commentId: string) => {\n      // Generate a path based on the current pane params.\n      // We force a value for `inspect` to ensure that this is included in URLs when comments\n      // are created outside of the inspector context (i.e. directly on the field)\n      // @todo: consider filtering pane router params and culling all non-active RHS panes prior to generating this link\n      const path = createPathWithParams({\n        ...paramsRef.current,\n        comment: commentId,\n        inspect: COMMENTS_INSPECTOR_NAME,\n      })\n      return `${window.location.origin}${path}`\n    },\n    [createPathWithParams],\n  )\n\n  const handleClearSelectedComment = useCallback(() => {\n    setParams({...paramsRef.current, comment: undefined})\n  }, [setParams])\n\n  const handleOpenCommentsInspector = useCallback(() => {\n    if (inspector?.name === COMMENTS_INSPECTOR_NAME) return\n\n    openInspector(COMMENTS_INSPECTOR_NAME)\n  }, [inspector?.name, openInspector])\n\n  // If comments are not enabled, render the default document layout\n  if (!enabled) {\n    return <>{children}</>\n  }\n\n  return (\n    <CommentsProvider\n      documentId={documentId}\n      documentType={documentType}\n      getCommentLink={getCommentLink}\n      isCommentsOpen={inspector?.name === COMMENTS_INSPECTOR_NAME}\n      isConnecting={connectionState === 'connecting'}\n      onClearSelectedComment={handleClearSelectedComment}\n      onCommentsOpen={handleOpenCommentsInspector}\n      onPathOpen={onPathOpen}\n      selectedCommentId={selectedCommentId}\n      sortOrder=\"desc\"\n      type=\"field\"\n      releaseId={selectedReleaseId}\n    >\n      {children}\n    </CommentsProvider>\n  )\n}\n","import {useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getVersionFromId,\n  type ReleaseDocument,\n  useActiveReleases,\n  useArchivedReleases,\n  useDocumentVersions,\n  usePerspective,\n} from 'sanity'\n\nimport {usePaneRouter} from '../components/paneRouter/usePaneRouter'\nimport {type DocumentPaneContextValue} from '../panes/document/DocumentPaneContext'\n\ntype FilterReleases = {\n  notCurrentReleases: ReleaseDocument[]\n  currentReleases: ReleaseDocument[]\n  inCreation: ReleaseDocument | null\n}\n\n/**\n * @internal\n */\nexport function useFilteredReleases({\n  displayed,\n  documentId,\n}: Pick<DocumentPaneContextValue, 'displayed' | 'documentId'>): FilterReleases {\n  const {selectedReleaseId} = usePerspective()\n  const {data: releases} = useActiveReleases()\n  const {data: archivedReleases} = useArchivedReleases()\n  const {data: documentVersions} = useDocumentVersions({documentId})\n  const isCreatingDocument = displayed && !displayed._createdAt\n  const {params} = usePaneRouter()\n\n  return useMemo(() => {\n    if (!documentVersions) return {notCurrentReleases: [], currentReleases: [], inCreation: null}\n    // Gets the releases ids from the document versions, it means, the releases that the document belongs to\n    const releasesIds = documentVersions.map((id) => getVersionFromId(id))\n    const activeReleases = releases.reduce(\n      (acc: FilterReleases, release) => {\n        const versionDocExists = releasesIds.includes(\n          getReleaseIdFromReleaseDocumentId(release._id),\n        )\n        const releaseId = getReleaseIdFromReleaseDocumentId(release._id)\n        const isCreatingThisVersion =\n          isCreatingDocument &&\n          releaseId === getVersionFromId(displayed._id || '') &&\n          releaseId === selectedReleaseId\n\n        if (isCreatingThisVersion) {\n          acc.inCreation = release\n        } else if (versionDocExists) {\n          acc.currentReleases.push(release)\n        } else {\n          acc.notCurrentReleases.push(release)\n        }\n        return acc\n      },\n      {notCurrentReleases: [], currentReleases: [], inCreation: null},\n    )\n\n    // without historyVersion, version is not in an archived release\n    if (!params?.historyVersion) return activeReleases\n\n    const archivedRelease = archivedReleases.find(\n      (r) => getReleaseIdFromReleaseDocumentId(r._id) === params?.historyVersion,\n    )\n\n    // only for explicitly archived releases; published releases use published perspective\n    if (archivedRelease?.state === 'archived') {\n      activeReleases.currentReleases.push(archivedRelease)\n    }\n\n    return activeReleases\n  }, [\n    archivedReleases,\n    isCreatingDocument,\n    displayed?._id,\n    documentVersions,\n    params?.historyVersion,\n    releases,\n    selectedReleaseId,\n  ])\n}\n","import {useMemo} from 'react'\nimport {getReleaseIdFromReleaseDocumentId, getVersionId} from 'sanity'\n\nimport {type DocumentPaneContextValue} from '../panes/document/DocumentPaneContext'\nimport {useFilteredReleases} from './useFilteredReleases'\n\n/**\n * @internal\n */\nexport interface DocumentIdStack {\n  /**\n   * The position of the displayed document within the stack.\n   */\n  position: number\n  /**\n   * The id of the previous document in the stack.\n   */\n  previousId?: string\n  /**\n   * The id of the next document in the stack.\n   */\n  nextId?: string\n  /**\n   * An array of document ids comprising the stack the displayed document is a member of, ordered per\n   * release layering.\n   */\n  stack: string[]\n}\n\n/**\n * Get a stack of document ids representing existing versions of the provided document with release\n * layering applied.\n *\n * @internal\n */\nexport function useDocumentIdStack({\n  displayed,\n  documentId,\n  editState,\n}: Pick<DocumentPaneContextValue, 'displayed' | 'documentId' | 'editState'>): DocumentIdStack {\n  const filteredReleases = useFilteredReleases({displayed, documentId})\n  const systemStack = [editState?.published?._id, editState?.draft?._id]\n\n  const releaseStack = filteredReleases.currentReleases.map(\n    (release) =>\n      editState?.id && getVersionId(editState.id, getReleaseIdFromReleaseDocumentId(release._id)),\n  )\n\n  const stack = systemStack.concat(releaseStack).filter((id) => typeof id === 'string')\n\n  const position = useMemo(\n    () => stack.findIndex((id) => id === displayed?._id),\n    [displayed?._id, stack],\n  )\n\n  const previousId = useMemo(() => stack[position - 1] ?? undefined, [position, stack])\n  const nextId = useMemo(() => stack[position + 1] ?? undefined, [position, stack])\n\n  return {\n    position,\n    previousId,\n    nextId,\n    stack,\n  }\n}\n","import {useContext} from 'react'\nimport {StructureToolContext} from 'sanity/_singletons'\n\nimport {type StructureToolContextValue} from './types'\n\n/** @internal */\nexport function useStructureTool(): StructureToolContextValue {\n  const structureTool = useContext(StructureToolContext)\n  if (!structureTool) throw new Error(`StructureTool: missing context value`)\n\n  return structureTool\n}\n","import {type PaneRouterContextValue} from '../../components'\nimport {type PaneMenuItemGroup} from '../../types'\n\nexport const DOCUMENT_PANEL_MIN_WIDTH = 320\nexport const DOCUMENT_PANEL_INITIAL_MIN_WIDTH = 600\n\nexport const DOCUMENT_INSPECTOR_MIN_WIDTH = 320\nexport const DOCUMENT_INSPECTOR_MAX_WIDTH = 540\n\nexport const EMPTY_PARAMS: NonNullable<PaneRouterContextValue['params']> = {}\n\nexport const INSPECT_ACTION_PREFIX = 'inspect:'\n\nexport const DEFAULT_MENU_ITEM_GROUPS: PaneMenuItemGroup[] = [{id: 'inspectors'}, {id: 'links'}]\n\n// inspectors\nexport const HISTORY_INSPECTOR_NAME = 'sanity/structure/history'\nexport const VALIDATION_INSPECTOR_NAME = 'sanity/structure/validation'\n","import {memo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {type DocumentInspector, type DocumentInspectorMenuItem, useUnique} from 'sanity'\n\ninterface DocumentInspectorMenuItemsResolverProps {\n  documentId: string\n  documentType: string\n  inspectors: DocumentInspector[]\n  onMenuItems: (items: DocumentInspectorMenuItem[]) => void\n}\n\n// The menu item in a document inspector are resolved in a React hook (`useMenuItem`).\n// This means that the menu item needs to be resolved in a React component (in accordance with the rules of hooks).\n// In this component, we map over the configured inspectors and render a `InspectorMenuItem` for each.\n// The `InspectorMenuItem` will resolve the menu item in a React hook and call the `setMenuItem` callback\n// with the resolved menu item and the index of the inspector.\n// Finally, we call the `onMenuItems` callback with the resolved menu items.\nexport function DocumentInspectorMenuItemsResolver(props: DocumentInspectorMenuItemsResolverProps) {\n  const {documentId, documentType, inspectors, onMenuItems} = props\n\n  const len = inspectors.length\n  const [menuItems, setMenuItems] = useState<DocumentInspectorMenuItem[]>(() =>\n    Array.from(new Array(len)),\n  )\n\n  useEffect(() => {\n    if (menuItems.length !== len) {\n      const newFieldActions = Array.from(new Array(len))\n\n      for (let i = 0; i < len; i++) {\n        newFieldActions[i] = menuItems[i]\n      }\n\n      setMenuItems(newFieldActions)\n    }\n  }, [len, menuItems])\n\n  const setMenuItem = useCallback((index: number, node: DocumentInspectorMenuItem) => {\n    setMenuItems((prev) => {\n      const next = [...prev]\n      next[index] = node\n      return next\n    })\n  }, [])\n\n  useEffect(() => {\n    onMenuItems(menuItems.filter(Boolean))\n  }, [menuItems, onMenuItems])\n\n  const InspectorMenuItems = useMemo(() => {\n    return inspectors.map((inspector, index) => {\n      return inspector.useMenuItem\n        ? ([\n            defineInspectorMenuItemComponent({\n              documentId,\n              documentType,\n              index,\n              setMenuItem,\n              useMenuItem: inspector.useMenuItem,\n            }),\n            inspector.name,\n          ] as const)\n        : ([() => null, ''] as const)\n    })\n  }, [documentId, documentType, inspectors, setMenuItem])\n\n  return (\n    <>\n      {InspectorMenuItems.map(([InspectorMenuItem, key]) => key && <InspectorMenuItem key={key} />)}\n    </>\n  )\n}\nDocumentInspectorMenuItemsResolver.displayName = 'DocumentInspectorMenuItemsResolver'\n\nfunction defineInspectorMenuItemComponent({\n  documentId,\n  documentType,\n  index,\n  setMenuItem,\n  useMenuItem,\n}: {\n  documentId: string\n  documentType: string\n  index: number\n  setMenuItem: (index: number, node: DocumentInspectorMenuItem) => void\n  useMenuItem: NonNullable<DocumentInspector['useMenuItem']>\n}) {\n  return memo(function InspectorMenuItem() {\n    const menuItem = useMenuItem({\n      documentId,\n      documentType,\n    })\n    const node = useUnique(menuItem)\n\n    useEffect(() => {\n      setMenuItem(index, node)\n    }, [node])\n\n    return null\n  })\n}\n","import {unstable_useValuePreview as useValuePreview, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {useDocumentPane} from './useDocumentPane'\n\n/**\n * useDocumentTitle hook return type.\n *\n * @beta\n * @hidden\n */\ninterface UseDocumentTitle {\n  error?: string\n  title?: string\n}\n\n/**\n * React hook that returns the document title for the current document in the document pane.\n *\n * @beta\n * @hidden\n *\n * @returns The document title or error. See {@link UseDocumentTitle}\n */\nexport function useDocumentTitle(): UseDocumentTitle {\n  const {connectionState, schemaType, title, displayed} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const subscribed = Boolean(displayed)\n\n  const {error, value} = useValuePreview({\n    enabled: subscribed,\n    schemaType,\n    value: displayed,\n  })\n\n  if (connectionState === 'connecting' && !subscribed) {\n    return {error: undefined, title: undefined}\n  }\n\n  if (title) {\n    return {error: undefined, title}\n  }\n\n  if (!displayed) {\n    return {\n      error: undefined,\n      title: t('panes.document-header-title.new.text', {\n        schemaType: schemaType?.title || schemaType?.name,\n      }),\n    }\n  }\n\n  if (error) {\n    return {\n      error: t('panes.document-list-pane.error.text', {error: error.message}),\n      title: undefined,\n    }\n  }\n\n  return {error: undefined, title: value?.title}\n}\n","import {useToast} from '@sanity/ui'\nimport {memo, useEffect, useMemo, useRef} from 'react'\nimport {Translate, useDocumentOperationEvent, useTranslation} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {useDocumentPane} from './useDocumentPane'\nimport {useDocumentTitle} from './useDocumentTitle'\n\nconst IGNORE_OPS = ['patch', 'commit']\n\nexport const DocumentOperationResults = memo(function DocumentOperationResults() {\n  const {push: pushToast} = useToast()\n  const {documentId, documentType, value: documentPaneValue} = useDocumentPane()\n  const documentTitleInfo = useDocumentTitle()\n  const titleError = documentTitleInfo.error\n  const event: any = useDocumentOperationEvent(documentId, documentType)\n  const prevEvent = useRef(event)\n  const paneRouter = usePaneRouter()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const title = useMemo(() => {\n    // If title isn't set from document preview, use the title from the document pane value\n    if (\n      !documentTitleInfo.title &&\n      !titleError &&\n      !IGNORE_OPS.includes(event?.op) &&\n      typeof documentPaneValue.title === 'string' &&\n      event?.type === 'success'\n    ) {\n      return documentPaneValue.title\n    }\n    return documentTitleInfo.title\n  }, [documentTitleInfo.title, titleError, event, documentPaneValue.title])\n  //Truncate the document title and add \"...\" if it is over 25 characters\n  const documentTitleBase = title || t('panes.document-operation-results.operation-undefined-title')\n  const documentTitle =\n    documentTitleBase.length > 25 ? `${documentTitleBase.slice(0, 25)}...` : documentTitleBase\n\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    let cleanupId: number | undefined\n\n    if (event.type === 'error') {\n      pushToast({\n        closable: true,\n        duration: 30000, // 30s\n        status: 'error',\n        title: t('panes.document-operation-results.operation-error', {context: event.op}),\n        description: (\n          <details>\n            <summary>{t('panes.document-operation-results.error.summary.title')}</summary>\n            {event.error.message}\n          </details>\n        ),\n      })\n    }\n\n    if (event.type === 'success' && !IGNORE_OPS.includes(event.op)) {\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: (\n          <Translate\n            context={event.op}\n            i18nKey=\"panes.document-operation-results.operation-success\"\n            t={t}\n            values={{\n              op: event.op,\n              title: documentTitle,\n            }}\n            components={{\n              Strong: 'strong',\n            }}\n          />\n        ),\n      })\n    }\n\n    /**\n     * If the document was deleted successfully, close the pane.\n     */\n    if (event.type === 'success' && event.op === 'delete') {\n      // Wait until next tick to allow deletion toasts to appear first\n      cleanupId = setTimeout(() => paneRouter.closeCurrentAndAfter(), 0) as any as number\n    }\n\n    prevEvent.current = event\n\n    // eslint-disable-next-line consistent-return\n    return () => clearTimeout(cleanupId)\n  }, [event, paneRouter, pushToast, t, documentTitle])\n\n  return null\n})\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type PreviewValue, type SanityDocument, type SchemaType} from '@sanity/types'\nimport {assignWith} from 'lodash'\nimport {type ReactNode} from 'react'\nimport {combineLatest, type Observable, of} from 'rxjs'\nimport {map, startWith} from 'rxjs/operators'\nimport {type DocumentPreviewStore, getDraftId, getPublishedId} from 'sanity'\n\nimport {type PaneItemPreviewState} from './types'\n\nexport const isLiveEditEnabled = (schemaType: SchemaType) => schemaType.liveEdit === true\n\nexport const getMissingDocumentFallback = (item: SanityDocument) => ({\n  title: <em>{item.title ? String(item.title) : 'Missing document'}</em>,\n  subtitle: <em>{item.title ? `Missing document ID: ${item._id}` : `Document ID: ${item._id}`}</em>,\n  media: () => <WarningOutlineIcon />,\n})\n\nexport const getValueWithFallback = ({\n  value,\n  draft,\n  published,\n}: {\n  value: SanityDocument\n  draft?: Partial<SanityDocument> | PreviewValue | null\n  published?: Partial<SanityDocument> | PreviewValue | null\n}) => {\n  const snapshot = draft || published\n\n  if (!snapshot) {\n    return getMissingDocumentFallback(value)\n  }\n\n  return assignWith({}, snapshot, value, (objValue, srcValue) => {\n    return typeof srcValue === 'undefined' ? objValue : srcValue\n  })\n}\n\nexport function getPreviewStateObservable(\n  documentPreviewStore: DocumentPreviewStore,\n  schemaType: SchemaType,\n  documentId: string,\n  title: ReactNode,\n): Observable<PaneItemPreviewState> {\n  const draft$ = isLiveEditEnabled(schemaType)\n    ? of({snapshot: null})\n    : documentPreviewStore.observeForPreview(\n        {_type: 'reference', _ref: getDraftId(documentId)},\n        schemaType,\n      )\n\n  const published$ = documentPreviewStore.observeForPreview(\n    {_type: 'reference', _ref: getPublishedId(documentId)},\n    schemaType,\n  )\n\n  return combineLatest([draft$, published$]).pipe(\n    map(([draft, published]) => ({\n      draft: draft.snapshot ? {title, ...(draft.snapshot || {})} : null,\n      isLoading: false,\n      published: published.snapshot ? {title, ...(published.snapshot || {})} : null,\n    })),\n    startWith({draft: null, isLoading: true, published: null}),\n  )\n}\n","import {CloseIcon} from '@sanity/icons'\nimport {Box, Card, type CardProps, Flex, Text} from '@sanity/ui'\nimport {type HTMLProps, type ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\n\nexport interface DocumentInspectorHeaderProps {\n  as?: CardProps['as']\n  closeButtonLabel: string\n  flex?: CardProps['flex']\n  onClose: () => void\n  title: ReactNode\n}\n\nconst Root = styled(Card)({\n  position: 'relative',\n  zIndex: 1,\n  lineHeight: 0,\n})\n\n/** @internal */\nexport function DocumentInspectorHeader(\n  props: DocumentInspectorHeaderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n) {\n  const {as: forwardedAs, children, closeButtonLabel, onClose, title, ...restProps} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Root {...restProps} as={forwardedAs}>\n      <Flex padding={2}>\n        <Box flex={1} padding={3}>\n          <Text as=\"h1\" size={1} weight=\"medium\">\n            {title}\n          </Text>\n        </Box>\n        <Box flex=\"none\" padding={1}>\n          <Button\n            aria-label={closeButtonLabel}\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={onClose}\n            tooltipProps={{content: t('document-inspector.close-button.tooltip')}}\n          />\n        </Box>\n      </Flex>\n      {children}\n    </Root>\n  )\n}\n","import {Box} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {Resizable} from 'sanity'\n\nimport {usePane} from '../../../components'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {DOCUMENT_INSPECTOR_MAX_WIDTH, DOCUMENT_INSPECTOR_MIN_WIDTH} from '../constants'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface DocumentInspectorPanelProps {\n  documentId: string\n  documentType: string\n  flex?: number | number[]\n}\n\nexport function DocumentInspectorPanel(\n  props: DocumentInspectorPanelProps,\n): React.JSX.Element | null {\n  const {documentId, documentType, flex} = props\n  const {collapsed} = usePane()\n  const {closeInspector, inspector} = useDocumentPane()\n  const {features} = useStructureTool()\n\n  const handleClose = useCallback(() => {\n    if (inspector) closeInspector(inspector.name)\n  }, [closeInspector, inspector])\n\n  if (collapsed || !inspector) return null\n\n  const Component = inspector.component\n  const element = (\n    <Component onClose={handleClose} documentId={documentId} documentType={documentType} />\n  )\n\n  if (features.resizablePanes) {\n    return (\n      <Resizable\n        as=\"aside\"\n        data-ui=\"DocumentInspectorPanel\"\n        flex={flex}\n        resizerPosition=\"left\"\n        maxWidth={DOCUMENT_INSPECTOR_MAX_WIDTH}\n        minWidth={DOCUMENT_INSPECTOR_MIN_WIDTH}\n      >\n        {element}\n      </Resizable>\n    )\n  }\n\n  return (\n    <Box as=\"aside\" data-ui=\"DocumentInspectorPanel\" flex={flex}>\n      {element}\n    </Box>\n  )\n}\n","import {useCallback, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {map} from 'rxjs/operators'\nimport {useKeyValueStore} from 'sanity'\n\nconst STRUCTURE_TOOL_NAMESPACE = 'studio.structure-tool'\n\n/**\n * @internal\n */\nexport function useStructureToolSetting<ValueType>(\n  namespace: string,\n  key: string | null,\n  defaultValue?: ValueType,\n): [ValueType | undefined, (_value: ValueType) => void] {\n  const keyValueStore = useKeyValueStore()\n\n  const keyValueStoreKey = [STRUCTURE_TOOL_NAMESPACE, namespace, key].filter(Boolean).join('.')\n\n  const value$ = useMemo(() => {\n    return keyValueStore\n      .getKey(keyValueStoreKey)\n      .pipe(map((value) => (value === null ? defaultValue : value)))\n  }, [defaultValue, keyValueStore, keyValueStoreKey])\n\n  const value = useObservable(value$, defaultValue) as ValueType\n  const set = useCallback(\n    (newValue: ValueType) => {\n      if (newValue !== value) {\n        keyValueStore.setKey(keyValueStoreKey, newValue as string)\n      }\n    },\n    [keyValueStore, keyValueStoreKey, value],\n  )\n\n  return useMemo(() => [value, set], [set, value])\n}\n","export const VIEW_MODE_PARSED = {id: 'parsed', title: 'document-inspector.view-mode.parsed'}\nexport const VIEW_MODE_RAW = {id: 'raw', title: 'document-inspector.view-mode.raw-json'}\nexport const VIEW_MODES = [VIEW_MODE_PARSED, VIEW_MODE_RAW]\n","import {type SanityDocumentLike} from '@sanity/types'\nimport LRU from 'quick-lru'\nimport {isRecord, isString} from 'sanity'\n\nconst lru = new LRU({maxSize: 1000})\n\nexport function isExpanded(keyPath: any, value: any): any {\n  const cached = lru.get(keyPath)\n\n  if (cached === undefined) {\n    lru.set(keyPath, Array.isArray(value) || isRecord(value))\n    return isExpanded(keyPath, value)\n  }\n\n  return cached\n}\n\nexport function toggleExpanded(event: any): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nexport function selectElement(element: HTMLElement): void {\n  const sel = window.getSelection()\n\n  if (sel) {\n    const range = document.createRange()\n\n    sel.removeAllRanges()\n    range.selectNodeContents(element)\n    sel.addRange(range)\n  }\n}\n\nexport function select(event: any): void {\n  selectElement(event.currentTarget)\n}\n\nexport function maybeSelectAll(event: any): void {\n  const selectAll = event.keyCode === 65 && (event.metaKey || event.ctrlKey)\n\n  if (!selectAll) {\n    return\n  }\n\n  event.preventDefault()\n\n  selectElement(event.currentTarget)\n}\n\nexport function isDocumentLike(value: unknown): value is SanityDocumentLike {\n  return isRecord(value) && isString(value._id) && isString(value._type)\n}\n","import {rem, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const JSONInspectorWrapper = styled.div(({theme}: {theme: Theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[3])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0 - ${rem(space[4])} + 3px);\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[3])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import {SearchIcon} from '@sanity/icons'\nimport {TextInput} from '@sanity/ui'\nimport {type ChangeEvent, useCallback} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../i18n'\n\nexport function Search(props: {onChange: (q: string) => void; query: string}) {\n  const {onChange, query} = props\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => onChange(event.target.value),\n    [onChange],\n  )\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <TextInput\n      icon={SearchIcon}\n      onChange={handleChange}\n      placeholder={t('document-inspector.search.placeholder')}\n      radius={2}\n      value={query || ''}\n    />\n  )\n}\n","import {JsonInspector} from '@rexxars/react-json-inspector'\nimport {type SanityDocument} from '@sanity/types'\nimport {Card, Code, Flex, TabList, TabPanel} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {Translate, useTranslation} from 'sanity'\n\nimport {Dialog, Tab} from '../../../../ui-components'\nimport {DocTitle} from '../../../components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useStructureToolSetting} from '../../../useStructureToolSetting'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {VIEW_MODE_PARSED, VIEW_MODE_RAW, VIEW_MODES} from './constants'\nimport {isDocumentLike, isExpanded, maybeSelectAll, select, toggleExpanded} from './helpers'\nimport {JSONInspectorWrapper} from './InspectDialog.styles'\nimport {Search} from './Search'\n\ninterface InspectDialogProps {\n  value: Partial<SanityDocument> | null\n}\n\nexport function InspectDialog(props: InspectDialogProps) {\n  const {value} = props\n  const {onInspectClose, paneKey} = useDocumentPane()\n  const dialogIdPrefix = `${paneKey}_inspect_`\n\n  /* this creates a view mode (the default that it opens with is the parsed tab) that is saved based on the paneKey\n  where the inspect dialog lives.\n  This also means that when a page is loaded, the state of the tabs remains and doesn't revert to the pane tab */\n  const [viewModeId, onViewModeChange] = useStructureToolSetting(\n    'inspect-view-mode',\n    null,\n    'parsed',\n  )\n\n  /* based on the view mode it shows the right tab content */\n  const viewMode = VIEW_MODES.find((mode) => mode.id === viewModeId)\n\n  const setParsedViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_PARSED.id)\n  }, [onViewModeChange])\n\n  const setRawViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_RAW.id)\n  }, [onViewModeChange])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Dialog\n      bodyHeight=\"fill\"\n      id={`${dialogIdPrefix}dialog`}\n      header={\n        isDocumentLike(value) ? (\n          <Translate\n            t={t}\n            i18nKey=\"document-inspector.dialog.title\"\n            components={{\n              DocumentTitle: () => (\n                <em>\n                  <DocTitle document={value} />\n                </em>\n              ),\n            }}\n          />\n        ) : (\n          <em>{t('document-inspector.dialog.title-no-value')}</em>\n        )\n      }\n      onClose={onInspectClose}\n      onClickOutside={onInspectClose}\n      padding={false}\n      width={2}\n    >\n      <Flex direction=\"column\" height=\"fill\">\n        <Card\n          padding={3}\n          paddingTop={0}\n          shadow={1}\n          style={{position: 'sticky', bottom: 0, zIndex: 3}}\n        >\n          <TabList space={1}>\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_PARSED.id}`}\n              label={t(VIEW_MODE_PARSED.title)}\n              onClick={setParsedViewMode}\n              selected={viewMode === VIEW_MODE_PARSED}\n            />\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_RAW.id}`}\n              label={t(VIEW_MODE_RAW.title)}\n              onClick={setRawViewMode}\n              selected={viewMode === VIEW_MODE_RAW}\n            />\n          </TabList>\n        </Card>\n\n        <TabPanel\n          aria-labelledby={`${dialogIdPrefix}tab-${viewModeId}`}\n          flex={1}\n          id={`${dialogIdPrefix}tabpanel`}\n          overflow=\"auto\"\n          padding={4}\n          style={{outline: 'none'}}\n        >\n          {viewMode === VIEW_MODE_PARSED && (\n            <JSONInspectorWrapper>\n              <JsonInspector\n                data={value}\n                isExpanded={isExpanded}\n                onClick={toggleExpanded}\n                search={Search}\n                filterOptions={{ignoreCase: true}}\n              />\n            </JSONInspectorWrapper>\n          )}\n\n          {viewMode === VIEW_MODE_RAW && (\n            <Code\n              language=\"json\"\n              tabIndex={0}\n              onKeyDown={maybeSelectAll}\n              onDoubleClick={select}\n              onFocus={select}\n              size={1}\n            >\n              {JSON.stringify(value, null, 2)}\n            </Code>\n          )}\n        </TabPanel>\n      </Flex>\n    </Dialog>\n  )\n}\n","import {Box, type ButtonMode, type ButtonTone, Card, type CardTone, Flex, Text} from '@sanity/ui'\nimport {type ComponentType, type ElementType, type ReactNode} from 'react'\n\nimport {Button} from '../../../../../ui-components'\n\ninterface BannerProps {\n  action?: {\n    as?: ElementType | keyof React.JSX.IntrinsicElements\n    icon?: ComponentType\n    onClick?: () => void\n    text: string\n    tone?: ButtonTone\n    disabled?: boolean\n    mode?: ButtonMode\n  }\n  content: ReactNode\n  icon?: ComponentType\n  tone?: CardTone\n  paddingY?: number\n}\n\nexport function Banner(props: BannerProps) {\n  const {action, content, icon: Icon, tone = 'transparent', paddingY = 2, ...rest} = props\n\n  return (\n    <Box padding={1}>\n      <Card radius={3} paddingX={2} paddingY={paddingY} tone={tone} {...rest}>\n        <Flex align=\"center\" gap={3} paddingX={2}>\n          {Icon && (\n            <Text size={0}>\n              <Icon />\n            </Text>\n          )}\n\n          <Flex align=\"center\" flex={1} gap={2} paddingY={2}>\n            {content}\n          </Flex>\n\n          {action && (\n            <Button {...action} mode={action.mode || 'ghost'} tone={action.tone || 'default'} />\n          )}\n        </Flex>\n      </Card>\n    </Box>\n  )\n}\n","import {DocumentRemoveIcon, ReadOnlyIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {\n  isDraftPerspective,\n  isPublishedPerspective,\n  type ReleaseDocument,\n  Translate,\n  useDocumentOperation,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function DeletedDocumentBanners() {\n  const {isDeleted, isDeleting, ready} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n  if (!ready) return null\n  if (\n    !isPublishedPerspective(selectedPerspective) &&\n    !isDraftPerspective(selectedPerspective) &&\n    selectedPerspective.state === 'archived'\n  ) {\n    return <ArchivedReleaseBanner release={selectedPerspective as ReleaseDocument} />\n  }\n  if (isDeleted && !isDeleting) return <DeletedDocumentBanner />\n}\n\nfunction DeletedDocumentBanner() {\n  const {documentId, documentType, lastNonDeletedRevId} = useDocumentPane()\n  const {restore} = useDocumentOperation(documentId, documentType)\n  const {navigateIntent} = useRouter()\n\n  const handleRestore = useCallback(() => {\n    if (lastNonDeletedRevId) {\n      restore.execute(lastNonDeletedRevId)\n      navigateIntent('edit', {id: documentId, type: documentType})\n    }\n  }, [documentId, documentType, navigateIntent, restore, lastNonDeletedRevId])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Banner\n      action={\n        lastNonDeletedRevId\n          ? {\n              onClick: handleRestore,\n              text: t('banners.deleted-document-banner.restore-button.text'),\n            }\n          : undefined\n      }\n      content={\n        <Text size={1} weight=\"medium\">\n          {t('banners.deleted-document-banner.text')}\n        </Text>\n      }\n      data-testid=\"deleted-document-banner\"\n      icon={ReadOnlyIcon}\n    />\n  )\n}\n\nconst ArchivedReleaseBanner = ({release}: {release: ReleaseDocument}) => {\n  const {t} = useTranslation()\n\n  return (\n    <Banner\n      tone=\"caution\"\n      content={\n        <Text size={1} weight=\"medium\">\n          <Translate\n            t={t}\n            i18nKey=\"banners.deleted-release-banner.text\"\n            values={{title: release.metadata?.title || t('release.placeholder-untitled-release')}}\n          />\n        </Text>\n      }\n      data-testid=\"deleted-release-banner\"\n      icon={DocumentRemoveIcon}\n    />\n  )\n}\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {isDeprecatedSchemaType, Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function DeprecatedDocumentTypeBanner() {\n  const {schemaType} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!isDeprecatedSchemaType(schemaType)) {\n    return null\n  }\n\n  return (\n    <Banner\n      content={\n        <Text size={1} weight=\"medium\">\n          <Translate t={t} i18nKey=\"banners.deprecated-document-type-banner.text\" />{' '}\n          {schemaType.deprecated.reason}\n        </Text>\n      }\n      data-testid=\"deprecated-document-type-banner\"\n      icon={ErrorOutlineIcon}\n    />\n  )\n}\n","import {defineEvent} from '@sanity/telemetry'\n\n/** @internal */\nexport const AskToEditDialogOpened = defineEvent({\n  name: 'Ask To Edit Dialog Opened',\n  version: 1,\n  description: 'User clicked the \"Ask to edit\" button in the document permissions banner',\n})\n\n/** @internal */\nexport const AskToEditRequestSent = defineEvent({\n  name: 'Ask To Edit Request Sent',\n  version: 1,\n  description: 'User sent a role change request from the dialog',\n})\n","import {useTelemetry} from '@sanity/telemetry/react'\nimport {Box, Card, DialogProvider, Flex, Stack, Text, TextInput, useToast} from '@sanity/ui'\nimport {useId, useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {catchError, map, type Observable, of, startWith} from 'rxjs'\nimport {type Role, useClient, useProjectId, useTranslation, useZIndex} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Dialog} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {AskToEditRequestSent} from './__telemetry__/RequestPermissionDialog.telemetry'\nimport {type AccessRequest} from './useRoleRequestsStatus'\n\nconst MAX_NOTE_LENGTH = 150\n\n/** @internal */\nexport const DialogBody = styled(Box)`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 110px;\n`\n\n/** @internal */\nexport interface RequestPermissionDialogProps {\n  onClose?: () => void\n  onRequestSubmitted?: () => void\n}\n\n/**\n * A dialog that enables the user to request permission to change their\n * member role from \"Viewer\" to \"Editor\" or \"Admin\" depending on the\n * project's available roles.\n *\n * @internal\n */\nexport function RequestPermissionDialog({\n  onClose,\n  onRequestSubmitted,\n}: RequestPermissionDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const telemtry = useTelemetry()\n  const dialogId = `request-permissions-${useId()}`\n  const projectId = useProjectId()\n  const client = useClient({apiVersion: '2024-09-26'})\n  const toast = useToast()\n  const zOffset = useZIndex()\n\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const [note, setNote] = useState('')\n\n  const [msgError, setMsgError] = useState<string | undefined>()\n  const [hasTooManyRequests, setHasTooManyRequests] = useState<boolean>(false)\n  const [hasBeenDenied, setHasBeenDenied] = useState<boolean>(false)\n\n  const requestedRole$: Observable<'administrator' | 'editor'> = useMemo(() => {\n    const adminRole = 'administrator' as const\n    if (!projectId || !client) return of(adminRole)\n    return client.observable\n      .request<(Role & {appliesToUsers?: boolean})[]>({url: `/projects/${projectId}/roles`})\n      .pipe(\n        map((roles) => {\n          const hasEditor = roles\n            .filter((role) => role?.appliesToUsers)\n            .find((role) => role.name === 'editor')\n          return hasEditor ? 'editor' : adminRole\n        }),\n        startWith(adminRole),\n        catchError(() => of(adminRole)),\n      )\n  }, [projectId, client])\n\n  const requestedRole = useObservable(requestedRole$)\n\n  const onSubmit = () => {\n    setIsSubmitting(true)\n    client\n      .request<AccessRequest | null>({\n        url: `/access/project/${projectId}/requests`,\n        method: 'post',\n        body: {note, requestUrl: window?.location.href, requestedRole, type: 'role'},\n      })\n      .then((request) => {\n        if (request) {\n          if (onRequestSubmitted) onRequestSubmitted()\n          telemtry.log(AskToEditRequestSent)\n          toast.push({title: 'Edit access requested'})\n        }\n      })\n      .catch((err) => {\n        const statusCode = err?.response?.statusCode\n        const errMessage = err?.response?.body?.message\n        if (statusCode === 429) {\n          // User is over their cross-project request limit\n          setHasTooManyRequests(true)\n          setMsgError(errMessage)\n        }\n        if (statusCode === 409) {\n          // If we get a 409, user has been denied on this project or has a valid pending request\n          // valid pending request should be handled by GET request above\n          setHasBeenDenied(true)\n          setMsgError(errMessage)\n        } else {\n          toast.push({\n            title: 'There was a problem submitting your request.',\n            status: 'error',\n          })\n        }\n      })\n      .finally(() => {\n        setIsSubmitting(false)\n      })\n  }\n\n  return (\n    <DialogProvider position={'fixed'} zOffset={zOffset.fullscreen}>\n      <Dialog\n        width={1}\n        id={dialogId}\n        header={t('request-permission-dialog.header.text')}\n        footer={{\n          cancelButton: {\n            onClick: onClose,\n            text: t('confirm-dialog.cancel-button.fallback-text'),\n          },\n          confirmButton: {\n            onClick: onSubmit,\n            loading: isSubmitting,\n            disabled: hasTooManyRequests || hasBeenDenied,\n            text: t('request-permission-dialog.confirm-button.text'),\n            tone: 'primary',\n            type: 'submit',\n          },\n        }}\n        onClose={onClose}\n        onClickOutside={onClose}\n      >\n        <DialogBody>\n          <Stack space={4}>\n            <Text>{t('request-permission-dialog.description.text')}</Text>\n            {hasTooManyRequests || hasBeenDenied ? (\n              <Card tone={'caution'} padding={3} radius={2} shadow={1}>\n                <Text size={1}>\n                  {hasTooManyRequests && (\n                    <>{msgError ?? t('request-permission-dialog.warning.limit-reached.text')}</>\n                  )}\n                  {hasBeenDenied && (\n                    <>{msgError ?? t('request-permission-dialog.warning.denied.text')}</>\n                  )}\n                </Text>\n              </Card>\n            ) : (\n              <Stack space={3} paddingBottom={0}>\n                <TextInput\n                  placeholder={t('request-permission-dialog.note-input.placeholder.text')}\n                  disabled={isSubmitting}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter') onSubmit()\n                  }}\n                  maxLength={MAX_NOTE_LENGTH}\n                  value={note}\n                  onChange={(e) => {\n                    setNote(e.currentTarget.value)\n                  }}\n                />\n\n                <Text align=\"right\" muted size={1}>{`${note.length}/${MAX_NOTE_LENGTH}`}</Text>\n              </Stack>\n            )}\n          </Stack>\n        </DialogBody>\n      </Dialog>\n    </DialogProvider>\n  )\n}\n","import {addWeeks, isAfter, isBefore} from 'date-fns'\nimport {useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {of} from 'rxjs'\nimport {catchError, map, startWith} from 'rxjs/operators'\nimport {type SanityClient, useClient, useProjectId} from 'sanity'\n\n/** @internal */\nexport interface AccessRequest {\n  id: string\n  status: 'pending' | 'accepted' | 'declined'\n  resourceId: string\n  resourceType: 'project'\n  createdAt: string\n  updatedAt: string\n  updatedByUserId: string\n  requestedByUserId: string\n  requestedRole: string\n  type: 'access' | 'role'\n  note: string\n}\n\nconst LOADING_STATE = {loading: true, error: false, status: undefined}\nconst EMPTY_STATE = {loading: false, error: false, status: 'none'}\nconst DECLINED_STATE = {loading: false, error: false, status: 'declined'}\nconst PENDING_STATE = {loading: false, error: false, status: 'pending'}\nconst EXPIRED_STATE = {loading: false, error: false, status: 'expired'}\n\n/** @internal */\nexport const useRoleRequestsStatus = () => {\n  const client = useClient({apiVersion: '2024-07-01'})\n  const projectId = useProjectId()\n\n  const checkRoleRequests$ = useMemo(() => {\n    if (!client || !projectId) {\n      return of(EMPTY_STATE)\n    }\n\n    return checkRoleRequests(client, projectId)\n  }, [client, projectId])\n\n  const {loading, error, status} = useObservable(checkRoleRequests$, LOADING_STATE)\n  return {data: status, loading, error}\n}\n\nfunction checkRoleRequests(client: SanityClient, projectId: string) {\n  return client.observable\n    .request<AccessRequest[] | null>({\n      url: '/access/requests/me',\n      tag: 'use-role-requests-status',\n    })\n    .pipe(\n      map((requests) => {\n        if (!requests || requests.length === 0) {\n          return EMPTY_STATE\n        }\n\n        // Filter requests for the specific project and where type is 'role'\n        const projectRequests = requests.filter(\n          (request) => request.resourceId === projectId && request.type === 'role',\n        )\n\n        const declinedRequest = projectRequests.find((request) => request.status === 'declined')\n        if (\n          declinedRequest &&\n          isAfter(addWeeks(new Date(declinedRequest.createdAt), 2), new Date())\n        ) {\n          return DECLINED_STATE\n        }\n\n        const pendingRequest = projectRequests.find(\n          (request) =>\n            request.status === 'pending' &&\n            isAfter(addWeeks(new Date(request.createdAt), 2), new Date()),\n        )\n        if (pendingRequest) {\n          return PENDING_STATE\n        }\n\n        const oldPendingRequest = projectRequests.find(\n          (request) =>\n            request.status === 'pending' &&\n            isBefore(addWeeks(new Date(request.createdAt), 2), new Date()),\n        )\n\n        return oldPendingRequest ? EXPIRED_STATE : EMPTY_STATE\n      }),\n      catchError((err) => {\n        console.error('Failed to fetch access requests', err)\n        return of({loading: false, error: true, status: undefined})\n      }),\n      startWith(LOADING_STATE), // Start with loading state\n    )\n}\n","import {ReadOnlyIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {Text} from '@sanity/ui'\nimport {useMemo, useState} from 'react'\nimport {Translate, useCurrentUser, useListFormat, useTranslation} from 'sanity'\n\nimport {\n  RequestPermissionDialog,\n  useRoleRequestsStatus,\n} from '../../../../components/requestPermissionDialog'\nimport {AskToEditDialogOpened} from '../../../../components/requestPermissionDialog/__telemetry__/RequestPermissionDialog.telemetry'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\ninterface InsufficientPermissionBannerProps {\n  requiredPermission: 'update' | 'create'\n}\n\nexport function InsufficientPermissionBanner({\n  requiredPermission,\n}: InsufficientPermissionBannerProps) {\n  const currentUser = useCurrentUser()\n\n  const {\n    data: roleRequestStatus,\n    loading: requestStatusLoading,\n    error: requestStatusError,\n  } = useRoleRequestsStatus()\n  const [requestSent, setRequestSent] = useState(false)\n  const requestPending = useMemo(\n    () => roleRequestStatus === 'pending' || roleRequestStatus === 'declined' || requestSent,\n    [roleRequestStatus, requestSent],\n  )\n  const currentUserRoles = currentUser?.roles || []\n  const isOnlyViewer = currentUserRoles.length === 1 && currentUserRoles[0].name === 'viewer'\n  const [showRequestPermissionDialog, setShowRequestPermissionDialog] = useState(false)\n\n  const listFormat = useListFormat({style: 'short'})\n  const {t} = useTranslation(structureLocaleNamespace)\n  const telemetry = useTelemetry()\n\n  const roleTitles = currentUserRoles.map((role) => role.title)\n  const roles = listFormat\n    .formatToParts(roleTitles)\n    .map((part) =>\n      part.type === 'element' ? <code key={part.value}>{part.value}</code> : part.value,\n    )\n\n  return (\n    <>\n      <Banner\n        content={\n          <Text size={1} weight=\"medium\">\n            <Translate\n              t={t}\n              i18nKey=\"banners.permission-check-banner.missing-permission\"\n              components={{Roles: () => <>{roles}</>}}\n              values={{count: roles.length, roles: roleTitles}}\n              context={requiredPermission}\n            />\n          </Text>\n        }\n        action={\n          isOnlyViewer && roleRequestStatus && !requestStatusError && !requestStatusLoading\n            ? {\n                onClick: requestPending\n                  ? undefined\n                  : () => {\n                      setShowRequestPermissionDialog(true)\n                      telemetry.log(AskToEditDialogOpened)\n                    },\n                text: requestPending\n                  ? t('banners.permission-check-banner.request-permission-button.sent')\n                  : t('banners.permission-check-banner.request-permission-button.text'),\n                tone: requestPending ? 'default' : 'primary',\n                disabled: requestPending,\n                mode: requestPending ? 'bleed' : undefined,\n              }\n            : undefined\n        }\n        data-testid=\"permission-check-banner\"\n        icon={ReadOnlyIcon}\n      />\n      {showRequestPermissionDialog && (\n        <RequestPermissionDialog\n          onClose={() => setShowRequestPermissionDialog(false)}\n          onRequestSubmitted={() => {\n            setRequestSent(true)\n            setShowRequestPermissionDialog(false)\n          }}\n        />\n      )}\n    </>\n  )\n}\n","import {CloseIcon, SyncIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {type KeyedSegment, type Reference} from '@sanity/types'\nimport {Text} from '@sanity/ui'\nimport {fromString as pathFromString, get as pathGet} from '@sanity/util/paths'\nimport {memo, useCallback, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {concat, type Observable, of} from 'rxjs'\nimport {debounceTime, map} from 'rxjs/operators'\nimport {\n  type DocumentAvailability,\n  getPublishedId,\n  useDocumentPreviewStore,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {type RouterPaneGroup} from '../../../../types'\nimport {Banner} from './Banner'\n\ninterface ParentReferenceInfo {\n  loading: boolean\n  result?: {\n    availability: {\n      draft: DocumentAvailability\n      published: DocumentAvailability\n      version?: DocumentAvailability\n    }\n    refValue: string | undefined\n  }\n}\n\nexport const ReferenceChangedBanner = memo(() => {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {selectedReleaseId} = usePerspective()\n  const {params, groupIndex, routerPanesState, replaceCurrent, BackLink} = usePaneRouter()\n  const routerReferenceId = routerPanesState[groupIndex]?.[0].id\n  const parentGroup = routerPanesState[groupIndex - 1] as RouterPaneGroup | undefined\n  const parentSibling = parentGroup?.[0]\n  const parentId = parentSibling?.id\n  const hasHistoryOpen = Boolean(parentSibling?.params?.rev)\n  const parentRefPath = useMemo(() => {\n    return (params?.parentRefPath && pathFromString(params.parentRefPath)) || null\n  }, [params?.parentRefPath])\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  /**\n   * Loads information regarding the reference field of the parent pane. This\n   * is only applicable to child references (aka references-in-place).\n   *\n   * It utilizes the pane ID of the parent pane (which is a document ID) along\n   * with the `parentRefPath` router param on the current pane to find the\n   * current value of the reference field on the parent document.\n   *\n   * This is used to compare with the current pane's document ID. If the IDs\n   * don't match then this banner should reveal itself\n   */\n  const referenceInfoObservable = useMemo((): Observable<ParentReferenceInfo> => {\n    const parentRefPathSegment = parentRefPath?.[0] as string | undefined\n\n    // short-circuit: this document pane is not a child reference pane\n    if (!parentId || !parentRefPathSegment || !parentRefPath) {\n      return of({loading: false})\n    }\n\n    const publishedId = getPublishedId(parentId)\n    const path = pathFromString(parentRefPathSegment)\n\n    // note: observePaths doesn't support keyed path segments, so we need to select the nearest parent\n    const keyedSegmentIndex = path.findIndex(\n      (p): p is KeyedSegment => typeof p == 'object' && '_key' in p,\n    )\n\n    return concat(\n      // emit a loading state instantly\n      of({loading: true}),\n      // then emit the values from watching the published ID's path\n      documentPreviewStore\n        .unstable_observePathsDocumentPair(\n          publishedId,\n          (keyedSegmentIndex === -1 ? path : path.slice(0, keyedSegmentIndex)) as string[][],\n          {\n            version: selectedReleaseId,\n          },\n        )\n        .pipe(\n          // this debounce time is needed to prevent flashing banners due to\n          // the router state updating faster than the content-lake state. we\n          // debounce to wait for more emissions because the value pulled\n          // initially could be stale.\n          debounceTime(750),\n          map(\n            ({draft, published, version}): ParentReferenceInfo => ({\n              loading: false,\n              result: {\n                availability: {\n                  draft: draft.availability,\n                  published: published.availability,\n                  ...(version?.availability\n                    ? {\n                        version: version.availability,\n                      }\n                    : {}),\n                },\n                refValue: pathGet<Reference>(\n                  version?.snapshot || draft.snapshot || published.snapshot,\n                  parentRefPath,\n                )?._ref,\n              },\n            }),\n          ),\n        ),\n    )\n  }, [selectedReleaseId, documentPreviewStore, parentId, parentRefPath])\n  const referenceInfo = useObservable(referenceInfoObservable, {loading: true})\n\n  const handleReloadReference = useCallback(() => {\n    if (referenceInfo.loading) return\n\n    if (referenceInfo.result?.refValue) {\n      replaceCurrent({\n        id: referenceInfo.result.refValue,\n        params: params as Record<string, string>,\n      })\n    }\n  }, [referenceInfo.loading, referenceInfo.result, replaceCurrent, params])\n\n  const shouldHide =\n    // if `parentId` or `parentRefPath` is not present then this banner is n/a\n    !parentId ||\n    !parentRefPath ||\n    // if viewing this pane via history, then hide\n    hasHistoryOpen ||\n    // if loading, hide\n    referenceInfo.loading ||\n    // if the parent document is not available (e.g. due to permission denied or\n    // not found) we don't want to display a warning here, but instead rely on the\n    // parent view to display the appropriate message\n    (!referenceInfo.result?.availability.draft.available &&\n      !referenceInfo.result?.availability.published.available) ||\n    // if the references are the same, then hide the reference changed banner\n    referenceInfo.result?.refValue === routerReferenceId\n\n  if (shouldHide) return null\n\n  return (\n    <Banner\n      action={\n        referenceInfo.result?.refValue\n          ? {\n              onClick: handleReloadReference,\n              icon: SyncIcon,\n              text: t('banners.reference-changed-banner.reason-changed.reload-button.text'),\n            }\n          : {\n              as: BackLink,\n              icon: CloseIcon,\n              text: t('banners.reference-changed-banner.reason-removed.close-button.text'),\n            }\n      }\n      data-testid=\"reference-changed-banner\"\n      content={\n        <Text size={1} weight=\"medium\">\n          {referenceInfo.result?.refValue\n            ? t('banners.reference-changed-banner.reason-changed.text')\n            : t('banners.reference-changed-banner.reason-removed.text')}\n        </Text>\n      }\n      icon={WarningOutlineIcon}\n      tone=\"caution\"\n    />\n  )\n})\n\nReferenceChangedBanner.displayName = 'Memo(ReferenceChangedBanner)'\n","import {Text} from '@sanity/ui'\nimport {useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getVersionInlineBadge,\n  Translate,\n  useArchivedReleases,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\nexport function ArchivedReleaseDocumentBanner(): React.JSX.Element {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n  const {data: archivedReleases} = useArchivedReleases()\n\n  const {params, setParams} = usePaneRouter()\n  const handleGoBack = () => {\n    setParams({\n      ...params,\n      rev: params?.historyEvent || undefined,\n      since: undefined,\n      historyVersion: undefined,\n    })\n  }\n\n  const release = useMemo(() => {\n    return archivedReleases.find(\n      (r) => getReleaseIdFromReleaseDocumentId(r._id) === params?.historyVersion,\n    )\n  }, [archivedReleases, params?.historyVersion])\n\n  const description =\n    release?.state === 'published'\n      ? 'banners.published-release.description'\n      : 'banners.archived-release.description'\n\n  const title = release?.metadata.title || tCore('release.placeholder-untitled-release')\n\n  return (\n    <Banner\n      tone=\"caution\"\n      content={\n        <Text size={1}>\n          <Translate\n            t={t}\n            i18nKey={description}\n            values={{\n              title,\n            }}\n            components={{\n              VersionBadge: getVersionInlineBadge(release),\n            }}\n          />\n        </Text>\n      }\n      action={\n        params?.archivedRelease\n          ? undefined\n          : {\n              text: 'Go back to published version',\n              onClick: handleGoBack,\n            }\n      }\n    />\n  )\n}\n","import {ComposeSparklesIcon, InfoOutlineIcon, LaunchIcon} from '@sanity/icons'\nimport {Box, Card, Container, Flex, Heading, Text, useClickOutsideEvent} from '@sanity/ui'\nimport {useCallback, useMemo, useRef, useState} from 'react'\nimport {\n  getDocumentVariantType,\n  useCanvasCompanionDoc,\n  useNavigateToCanvasDoc,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Popover} from '../../../../../ui-components'\nimport {Button} from '../../../../../ui-components/button/Button'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nconst Image = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n  height: 180px;\n  display: flex;\n`\nconst CANVAS_IMAGE_URL =\n  'https://cdn.sanity.io/images/pyrmmpch/production/b47224e2f3a7d1747e43b9da1ac31739250e628b-632x376.png'\n\nconst CANVAS_APP_NAME = 'Canvas'\nconst CanvasPopoverContent = ({onClose}: {onClose: () => void}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const ref = useRef<HTMLDivElement | null>(null)\n  useClickOutsideEvent(onClose, () => [ref.current])\n\n  return (\n    <Card radius={3} overflow={'hidden'} width={0} ref={ref}>\n      <Container width={0}>\n        <Image src={CANVAS_IMAGE_URL} alt={'Canvas'} />\n        <Flex paddingX={4} paddingBottom={4} paddingTop={3} direction={'column'}>\n          <Flex paddingY={1} gap={2}>\n            <Text size={1} weight=\"semibold\">\n              {CANVAS_APP_NAME}\n            </Text>\n            <Text size={1} muted>\n              <ComposeSparklesIcon />\n            </Text>\n          </Flex>\n          <Box paddingTop={3}>\n            <Heading size={1}>{t('canvas.banner.popover-heading')}</Heading>\n          </Box>\n          <Box paddingTop={4}>\n            <Text size={1}>{t('canvas.banner.popover-description')}</Text>\n          </Box>\n        </Flex>\n        <Flex width=\"full\" gap={3} justify=\"flex-end\" paddingX={4} paddingBottom={4}>\n          <Button\n            mode=\"bleed\"\n            text={t('canvas.banner.popover-button-text')}\n            autoFocus\n            tone=\"primary\"\n            href=\"https://snty.link/canvas-docs\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            as=\"a\"\n            iconRight={LaunchIcon}\n          />\n        </Flex>\n      </Container>\n    </Card>\n  )\n}\nconst CanvasLinkedBannerContent = ({documentId}: {documentId: string}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const [open, setOpen] = useState(false)\n  const documentVariantType = getDocumentVariantType(documentId)\n  const variantText = useMemo(() => {\n    if (documentVariantType === 'published') return t('canvas.banner.linked-text.published')\n    if (documentVariantType === 'draft') return t('canvas.banner.linked-text.draft')\n    return t('canvas.banner.linked-text.version')\n  }, [documentVariantType, t])\n\n  const togglePopover = useCallback(() => setOpen((prev) => !prev), [])\n  const onClose = useCallback(() => setOpen(false), [])\n  return (\n    <Flex align={'center'} gap={2}>\n      <Text size={1} weight=\"medium\">\n        {variantText}\n      </Text>\n      <Popover\n        open={open}\n        size={0}\n        tone=\"default\"\n        portal\n        placement=\"bottom-start\"\n        content={<CanvasPopoverContent onClose={onClose} />}\n      >\n        <Button\n          tooltipProps={null}\n          mode=\"bleed\"\n          tone=\"default\"\n          icon={InfoOutlineIcon}\n          onClick={togglePopover}\n        />\n      </Popover>\n    </Flex>\n  )\n}\n\nexport function CanvasLinkedBanner() {\n  const {documentId, displayed} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const id = displayed?._id || documentId\n  const {companionDoc} = useCanvasCompanionDoc(id)\n  const navigateToCanvas = useNavigateToCanvasDoc(companionDoc?.canvasDocumentId, 'banner')\n\n  if (!companionDoc) return null\n\n  return (\n    <Banner\n      tone=\"neutral\"\n      data-test-id=\"canvas-linked-banner\"\n      paddingY={0}\n      content={<CanvasLinkedBannerContent documentId={id} />}\n      action={{\n        mode: 'ghost',\n        text: t('canvas.banner.edit-in-canvas-action'),\n        onClick: navigateToCanvas,\n      }}\n    />\n  )\n}\n","import {getSanityCreateLinkMetadata, useSanityCreateConfig} from 'sanity'\n\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function CreateLinkedBanner() {\n  const {value} = useDocumentPane()\n  const {documentLinkedBannerContent: CreateLinkedBannerContent} =\n    useSanityCreateConfig().components ?? {}\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n\n  if (!CreateLinkedBannerContent || !createLinkMetadata) return null\n\n  return (\n    <Banner\n      tone=\"transparent\"\n      data-test-id=\"sanity-create-read-only-banner\"\n      content={<CreateLinkedBannerContent metadata={createLinkMetadata} />}\n    />\n  )\n}\n","import {type ToastParams, useToast} from '@sanity/ui'\nimport {useEffect} from 'react'\n\n// https://developer.mozilla.org/en-US/docs/Web/API/setTimeout#maximum_delay_value\nconst LONG_ENOUGH_BUT_NOT_TOO_LONG = 1000 * 60 * 60 * 24 * 24\n\n/**\n * Workaround to support conditional toast (e.g. a toast that is visible as long as a condition holds true)\n */\nexport function useConditionalToast(params: ToastParams & {id: string; enabled?: boolean}) {\n  const toast = useToast()\n\n  // note1: there's a `duration || 0` in Sanity UI's pushToast(), so make it non-falsey\n  // note2: cannot use `Infinity` as duration, since it exceeds setTimeout's maximum delay value\n  useEffect(() => {\n    if (params.enabled) {\n      toast.push({...params, duration: LONG_ENOUGH_BUT_NOT_TOO_LONG})\n    }\n    return () => {\n      if (params.enabled) {\n        toast.push({\n          ...params,\n          // Note: @sanity/ui fallbacks to the default duration of 4s in case of falsey values\n          duration: 0.01,\n        })\n      }\n    }\n  }, [params, toast])\n}\n","import {Text, useToast} from '@sanity/ui'\nimport {useCallback, useEffect, useState} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionInlineBadge,\n  LATEST,\n  type ReleaseDocument,\n  Translate,\n  useTranslation,\n  useVersionOperations,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useConditionalToast} from '../documentViews/useConditionalToast'\nimport {Banner} from './Banner'\n\n// How long to wait after user hit the \"Add to release\"-button before displaying the \"waiting…\" toast\nconst TOAST_DELAY = 1000\n\ntype VersionCreateState = {\n  status: 'creating' | 'created'\n  lastUpdate: Date\n}\n\nexport function DocumentNotInReleaseBanner({\n  documentId,\n  currentRelease,\n  value,\n  isScheduledRelease,\n}: {\n  documentId: string\n  currentRelease: ReleaseDocument\n  value?: Record<string, unknown>\n  isScheduledRelease?: boolean\n}): React.JSX.Element {\n  const tone = getReleaseTone(currentRelease ?? LATEST)\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  const {createVersion} = useVersionOperations()\n\n  const [versionCreateState, setVersionCreateState] = useState<VersionCreateState | undefined>()\n  const toast = useToast()\n  const handleAddToRelease = useCallback(async () => {\n    if (currentRelease._id) {\n      setVersionCreateState({status: 'creating', lastUpdate: new Date()})\n      try {\n        await createVersion(\n          getReleaseIdFromReleaseDocumentId(currentRelease._id),\n          documentId,\n          value,\n        )\n        setVersionCreateState({status: 'created', lastUpdate: new Date()})\n      } catch (err) {\n        toast.push({\n          status: 'error',\n          closable: true,\n          title: t('banners.release.error.title'),\n          description: t('banners.release.error.description', {message: err.message}),\n        })\n        // Note: we only want to reset pending state in case of failure, not unconditionally the request completes (i.e. in a finally clause)\n        // this is because the UI won't reflect that the document was successfully added to the release until we get the result back over the listener\n        // once the listener event that adds the document to the release arrives the UI knows that a version exists,\n        // and this banner will not be rendered anymore\n        setVersionCreateState(undefined)\n      }\n    }\n  }, [createVersion, currentRelease._id, documentId, t, toast, value])\n\n  const now = useCurrentTime(200)\n\n  useConditionalToast({\n    status: 'info',\n    id: 'add-document-to-release',\n    enabled: Boolean(\n      versionCreateState?.status === 'created' &&\n        now.getTime() - versionCreateState.lastUpdate.getTime() > TOAST_DELAY,\n    ),\n    closable: true,\n    title: t('banners.release.waiting.title'),\n    description: t('banners.release.waiting.description'),\n  })\n\n  return (\n    <Banner\n      tone={tone}\n      content={\n        <Text size={1}>\n          <Translate\n            i18nKey=\"banners.release.not-in-release\"\n            t={t}\n            values={{\n              title:\n                currentRelease?.metadata?.title || tCore('release.placeholder-untitled-release'),\n            }}\n            components={{\n              VersionBadge: getVersionInlineBadge(currentRelease),\n            }}\n          />\n        </Text>\n      }\n      // Adding to a scheduled release is not allowed\n      action={\n        isScheduledRelease\n          ? undefined\n          : {\n              text: t('banners.release.action.add-to-release'),\n              tone: tone,\n              disabled: Boolean(versionCreateState),\n              onClick: handleAddToRelease,\n              mode: 'default',\n            }\n      }\n    />\n  )\n}\n\nfunction useCurrentTime(updateIntervalMs: number): Date {\n  const [currentTime, setCurrentTime] = useState(new Date())\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentTime(new Date())\n    }, updateIntervalMs)\n    return () => clearInterval(intervalId)\n  }, [updateIntervalMs])\n  return currentTime\n}\n","import {defineEvent} from '@sanity/telemetry'\n\ninterface TypeInfo {\n  liveEditResolveType: 'publish' | 'discard'\n}\n\n/**\n * When a draft in a live edit document is published\n * @internal\n */\nexport const ResolvedLiveEdit = defineEvent<TypeInfo>({\n  name: 'LiveEdit Draft Resolved',\n  version: 1,\n  description: 'User resolved a draft of a live edit document to continue editing',\n})\n","import {type SanityDocument} from '@sanity/client'\nimport {ErrorOutlineIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {Flex, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useState} from 'react'\nimport {type ObjectSchemaType, Translate, useDocumentOperation, useTranslation} from 'sanity'\n\nimport {Button} from '../../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {ResolvedLiveEdit} from './__telemetry__/DraftLiveEditBanner.telemetry'\nimport {Banner} from './Banner'\n\ninterface DraftLiveEditBannerProps {\n  displayed: Partial<SanityDocument> | null\n  documentId: string\n  schemaType: ObjectSchemaType\n}\n\nexport function DraftLiveEditBanner({\n  displayed,\n  documentId,\n  schemaType,\n}: DraftLiveEditBannerProps): React.JSX.Element | null {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const [isPublishing, setPublishing] = useState(false)\n  const [isDiscarding, setDiscarding] = useState(false)\n  const telemetry = useTelemetry()\n\n  const {publish, discardChanges} = useDocumentOperation(documentId, displayed?._type || '')\n\n  const handlePublish = useCallback(() => {\n    publish.execute()\n    setPublishing(true)\n    telemetry.log(ResolvedLiveEdit, {liveEditResolveType: 'publish'})\n  }, [publish, telemetry])\n\n  const handleDiscard = useCallback(() => {\n    discardChanges.execute()\n    setDiscarding(true)\n    telemetry.log(ResolvedLiveEdit, {liveEditResolveType: 'discard'})\n  }, [discardChanges, telemetry])\n\n  useEffect(() => {\n    return () => {\n      setPublishing(false)\n      setDiscarding(false)\n    }\n  })\n\n  return (\n    <Banner\n      content={\n        <Flex align=\"center\" justify=\"space-between\" gap={2}>\n          <Text size={1} weight=\"medium\">\n            <Translate\n              t={t}\n              i18nKey={'banners.live-edit-draft-banner.text'}\n              values={{schemaType: schemaType.title}}\n            />\n          </Text>\n\n          <Button\n            onClick={handlePublish}\n            text={t('action.publish.live-edit.label')}\n            tooltipProps={{content: t('banners.live-edit-draft-banner.publish.tooltip')}}\n            loading={isPublishing}\n          />\n\n          <Button\n            onClick={handleDiscard}\n            text={t('banners.live-edit-draft-banner.discard.tooltip')}\n            tooltipProps={{content: t('banners.live-edit-draft-banner.discard.tooltip')}}\n            loading={isDiscarding}\n          />\n        </Flex>\n      }\n      data-testid=\"live-edit-type-banner\"\n      icon={ErrorOutlineIcon}\n    />\n  )\n}\n","import {Flex, Text} from '@sanity/ui'\nimport {useCallback, useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isVersionId,\n  Translate,\n  useActiveReleases,\n  useDocumentVersions,\n  useOnlyHasVersions,\n  useSetPerspective,\n  useTranslation,\n  VersionInlineBadge,\n} from 'sanity'\n\nimport {Button} from '../../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\nexport function OpenReleaseToEditBanner({\n  documentId,\n  isPinnedDraftOrPublished,\n}: {\n  documentId: string\n  isPinnedDraftOrPublished: boolean\n}): React.JSX.Element | null {\n  const onlyHasVersions = useOnlyHasVersions({documentId})\n\n  /** this banner should only be rendered in specific cases\n   * 1. when the document is not a draft or published\n   * 2. when the document only has version or versions\n   * 3. when the global perspective is not set (published or draft)\n   */\n\n  if (!isVersionId(documentId)) {\n    return null\n  }\n\n  if (!onlyHasVersions || !isPinnedDraftOrPublished) {\n    return null\n  }\n\n  return <OpenReleaseToEditBannerInner documentId={documentId} />\n}\n\nexport function OpenReleaseToEditBannerInner({\n  documentId,\n}: {\n  documentId: string\n}): React.JSX.Element {\n  const {data: activeReleases} = useActiveReleases()\n  const setPerspective = useSetPerspective()\n  const releaseId = getVersionFromId(documentId) ?? ''\n  const currentVersion = useMemo(\n    () => activeReleases.find((version) => version._id.includes(releaseId)),\n    [activeReleases, releaseId],\n  )\n  const {t: tCore} = useTranslation()\n\n  const {data: documentVersions} = useDocumentVersions({documentId})\n\n  const documentVersionsTitleList = useMemo(\n    () =>\n      activeReleases\n        .filter((version) => {\n          return documentVersions.find((release) => {\n            const r = getVersionFromId(release) ?? ''\n            return getReleaseIdFromReleaseDocumentId(version._id) === r\n          })\n        })\n        .map((version) => version.metadata.title || tCore('release.placeholder-untitled-release')),\n    [activeReleases, documentVersions, tCore],\n  )\n  const tone = currentVersion && getReleaseTone(currentVersion)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleGoToEdit = useCallback(async () => {\n    setPerspective(releaseId)\n  }, [releaseId, setPerspective])\n\n  return (\n    <Banner\n      tone={tone}\n      paddingY={0}\n      data-testid=\"open-release-to-edit-banner\"\n      content={\n        <Flex direction={'row'} align=\"center\" justify=\"space-between\" flex={1}>\n          <Text size={1}>\n            <Flex direction={'row'} gap={1}>\n              {documentVersionsTitleList.length > 1 ? (\n                <Translate\n                  t={t}\n                  i18nKey=\"banners.release.navigate-to-edit-description-multiple\"\n                  components={{\n                    VersionBadge: () => (\n                      <VersionInlineBadge> {documentVersionsTitleList[0]}</VersionInlineBadge>\n                    ),\n                  }}\n                  values={{count: documentVersionsTitleList.length - 1}}\n                />\n              ) : (\n                <Translate\n                  t={t}\n                  i18nKey=\"banners.release.navigate-to-edit-description-single\"\n                  components={{\n                    VersionBadge: () => (\n                      <VersionInlineBadge> {documentVersionsTitleList[0]}</VersionInlineBadge>\n                    ),\n                  }}\n                />\n              )}\n            </Flex>\n          </Text>\n\n          <Button\n            text={t('banners.release.action.open-to-edit')}\n            tone={tone}\n            onClick={handleGoToEdit}\n          />\n        </Flex>\n      }\n    />\n  )\n}\n","import {LockIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {\n  formatRelativeLocalePublishDate,\n  getReleaseTone,\n  LATEST,\n  type ReleaseDocument,\n  Translate,\n  useTranslation,\n} from 'sanity'\n\nimport {Banner} from './Banner'\n\nexport function ScheduledReleaseBanner({\n  currentRelease,\n}: {\n  currentRelease: ReleaseDocument\n}): React.JSX.Element {\n  const tone = getReleaseTone(currentRelease ?? LATEST)\n\n  const {t: tCore} = useTranslation()\n\n  return (\n    <Banner\n      tone={tone}\n      icon={LockIcon}\n      content={\n        <Text size={1}>\n          <Translate\n            t={tCore}\n            i18nKey=\"release.banner.scheduled-for-publishing-on\"\n            values={{\n              date: formatRelativeLocalePublishDate(currentRelease),\n            }}\n          />\n        </Text>\n      }\n    />\n  )\n}\n","import {UnpublishIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {\n  getVersionInlineBadge,\n  isGoingToUnpublish,\n  isReleaseDocument,\n  Translate,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function UnpublishedDocumentBanner() {\n  const {value} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n  const willBeUnpublished = isGoingToUnpublish(value)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  if (isReleaseDocument(selectedPerspective) && willBeUnpublished) {\n    const title =\n      selectedPerspective.metadata?.title || tCore('release.placeholder-untitled-release')\n\n    return (\n      <Banner\n        tone=\"critical\"\n        content={\n          <Text size={1}>\n            <Translate\n              t={t}\n              i18nKey=\"banners.unpublished-release-banner.text\"\n              values={{\n                title,\n              }}\n              components={{\n                VersionBadge: getVersionInlineBadge(selectedPerspective),\n              }}\n            />\n          </Text>\n        }\n        icon={UnpublishIcon}\n      />\n    )\n  }\n  return null\n}\n","import {InfoOutlineIcon} from '@sanity/icons'\nimport {type ObjectSchemaType} from '@sanity/types'\nimport {Heading, Inline, Stack, Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Tooltip} from '../../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../../i18n'\n\ninterface DocumentHeaderProps {\n  documentId: string\n  schemaType: ObjectSchemaType\n  title?: string\n}\n\n/**\n * Use CSS container queries to conditionally render headings at different sizes.\n * We hide this entire container (including the document type) if container queries\n * not supported in the current browser.\n *\n * Note that usage of container queries in `styled-components` is only supported in `6.x`.\n * As such, studios that include `\"styled-components\": \"<6\"` as a dependency will only see\n * the largest heading size here, even if their browser supports it!\n */\n\nexport const TitleContainer = styled(Stack)`\n  ${({theme}) => {\n    return css`\n      @supports not (container-type: inline-size) {\n        display: none !important;\n      }\n\n      container-type: inline-size;\n\n      [data-heading] {\n        font-size: ${theme.sanity.fonts.heading.sizes[4].fontSize}px;\n        line-height: ${theme.sanity.fonts.heading.sizes[4].lineHeight}px;\n        overflow-wrap: break-word;\n        text-wrap: pretty;\n      }\n\n      @container (max-width: 560px) {\n        [data-heading] {\n          font-size: ${theme.sanity.fonts.heading.sizes[3].fontSize}px;\n          line-height: ${theme.sanity.fonts.heading.sizes[3].lineHeight}px;\n        }\n      }\n\n      @container (max-width: 420px) {\n        [data-heading] {\n          font-size: ${theme.sanity.fonts.heading.sizes[2].fontSize}px;\n          line-height: ${theme.sanity.fonts.heading.sizes[2].lineHeight}px;\n        }\n      }\n    `\n  }}\n`\n\n/**\n * Header containing current document title and type.\n * Document type is hidden if the document `_id` matches the current document `_type`.\n * The entire header is hidden if container queries are not supported.\n */\nexport const FormHeader = ({documentId, schemaType, title}: DocumentHeaderProps) => {\n  const isSingleton = documentId === schemaType.name\n  const description = schemaType.description\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (schemaType.__experimental_formPreviewTitle === false) {\n    return null\n  }\n  return (\n    <TitleContainer marginBottom={6} space={4}>\n      {!isSingleton && (\n        <Inline space={1}>\n          <Text muted size={1}>\n            {schemaType.title ?? schemaType.name}\n          </Text>\n          {description && (\n            <Tooltip content={description} placement=\"right\">\n              <InfoOutlineIcon data-testid=\"schema-description-icon\" />\n            </Tooltip>\n          )}\n        </Inline>\n      )}\n      <Heading as=\"h2\" data-heading muted={!title} data-testid=\"document-panel-document-title\">\n        {title ?? t('document-view.form-view.form-title-fallback')}\n      </Heading>\n    </TitleContainer>\n  )\n}\n","/* eslint-disable no-nested-ternary */\nimport {Box, Container, Flex, focusFirstDescendant, Spinner, Text} from '@sanity/ui'\nimport {type FormEvent, forwardRef, useCallback, useEffect, useMemo, useState} from 'react'\nimport {tap} from 'rxjs/operators'\nimport {\n  createPatchChannel,\n  type DocumentMutationEvent,\n  type DocumentRebaseEvent,\n  FormBuilder,\n  type FormDocumentValue,\n  fromMutationPatches,\n  type PatchMsg,\n  PresenceOverlay,\n  useDocumentPresence,\n  useDocumentStore,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {Delay} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {useDocumentTitle} from '../../useDocumentTitle'\nimport {FormHeader} from './FormHeader'\nimport {useConditionalToast} from './useConditionalToast'\n\ninterface FormViewProps {\n  hidden: boolean\n  margins: [number, number, number, number]\n}\n\nconst preventDefault = (ev: FormEvent) => ev.preventDefault()\n\nexport const FormView = forwardRef<HTMLDivElement, FormViewProps>(function FormView(props, ref) {\n  const {hidden, margins} = props\n\n  const {\n    collapsedFieldSets,\n    collapsedPaths,\n    displayed: value,\n    editState,\n    documentId,\n    documentType,\n    fieldActions,\n    onChange,\n    validation,\n    ready,\n    formState,\n    onFocus,\n    connectionState,\n    onBlur,\n    onSetCollapsedPath,\n    onPathOpen,\n    onSetCollapsedFieldSet,\n    onSetActiveFieldGroup,\n    openPath,\n  } = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const documentStore = useDocumentStore()\n  const presence = useDocumentPresence(documentId)\n  const {title} = useDocumentTitle()\n  // The `patchChannel` is an INTERNAL publish/subscribe channel that we use to notify form-builder\n  // nodes about both remote and local patches.\n  // - Used by the Portable Text input to modify selections.\n  // - Used by `withDocument` to reset value.\n  const [patchChannel] = useState(() => createPatchChannel())\n\n  const isLocked = editState?.transactionSyncLock?.enabled\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const conditionalToastParams = useMemo(\n    () => ({\n      id: `sync-lock`,\n      status: 'warning' as const,\n      enabled: isLocked,\n      title: t('document-view.form-view.sync-lock-toast.title'),\n      description: t('document-view.form-view.sync-lock-toast.description'),\n      closable: true,\n    }),\n    [isLocked, t],\n  )\n\n  useConditionalToast(conditionalToastParams)\n\n  useEffect(() => {\n    const sub = documentStore.pair\n      .documentEvents(documentId, documentType, selectedReleaseId)\n      .pipe(\n        tap((event) => {\n          if (event.type === 'mutation') {\n            patchChannel.publish(prepareMutationEvent(event))\n          }\n\n          if (event.type === 'rebase') {\n            patchChannel.publish(prepareRebaseEvent(event))\n          }\n        }),\n      )\n      .subscribe()\n\n    return () => {\n      sub.unsubscribe()\n    }\n  }, [documentId, documentStore, documentType, patchChannel, selectedReleaseId])\n\n  const hasRev = Boolean(value?._rev)\n  const handleInitialValue = useEffectEvent(() => {\n    // this is a workaround for an issue that caused the document pushed to withDocument to get\n    // stuck at the first initial value.\n    // This effect is triggered only when the document goes from not having a revision, to getting one\n    // so it will kick in as soon as the document is received from the backend\n    patchChannel.publish({\n      type: 'mutation',\n      patches: [],\n      snapshot: value,\n    })\n  })\n  useEffect(() => {\n    if (hasRev) {\n      handleInitialValue()\n    }\n    // React to changes in hasRev only\n  }, [hasRev])\n\n  const [formRef, setFormRef] = useState<null | HTMLDivElement>(null)\n\n  // We only want to run it on first mount\n  const [focusedFirstDescendant, setFocusedFirstDescendant] = useState(false)\n  useEffect(() => {\n    // Only focus on the first descendant if there is not already a focus path\n    // This is to avoid stealing focus from intent links\n    if (!focusedFirstDescendant && ready && !formState?.focusPath.length && formRef) {\n      setFocusedFirstDescendant(true)\n      focusFirstDescendant(formRef)\n    }\n  }, [focusedFirstDescendant, formRef, formState?.focusPath.length, ready])\n\n  const setRef = useCallback(\n    (node: HTMLDivElement | null) => {\n      setFormRef(node)\n      if (typeof ref === 'function') {\n        ref(node)\n      } else if (ref) {\n        ref.current = node\n      }\n    },\n    [ref],\n  )\n\n  const isReadOnly = connectionState === 'reconnecting' || formState?.readOnly || !editState?.ready\n\n  return (\n    <Container\n      hidden={hidden}\n      paddingX={4}\n      paddingTop={5}\n      paddingBottom={9}\n      sizing=\"border\"\n      width={1}\n    >\n      <PresenceOverlay margins={margins}>\n        <Box\n          as=\"form\"\n          onSubmit={preventDefault}\n          ref={setRef}\n          data-testid=\"form-view\"\n          data-read-only={isReadOnly ? 'true' : undefined}\n        >\n          {connectionState === 'connecting' && !editState?.draft && !editState?.published ? (\n            <Delay ms={300}>\n              {/* TODO: replace with loading block */}\n              <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n                <Spinner muted />\n                <Box marginTop={3}>\n                  <Text align=\"center\" muted size={1}>\n                    {t('document-view.form-view.loading')}\n                  </Text>\n                </Box>\n              </Flex>\n            </Delay>\n          ) : formState === null || hidden ? (\n            <Box padding={2}>\n              <Text>{t('document-view.form-view.form-hidden')}</Text>\n            </Box>\n          ) : (\n            <>\n              <FormHeader documentId={documentId} schemaType={formState.schemaType} title={title} />\n              <FormBuilder\n                __internal_fieldActions={fieldActions}\n                __internal_patchChannel={patchChannel}\n                changed={formState.changed}\n                collapsedFieldSets={collapsedFieldSets}\n                collapsedPaths={collapsedPaths}\n                focused={formState.focused}\n                focusPath={formState.focusPath}\n                groups={formState.groups}\n                id=\"root\"\n                members={formState.members}\n                onChange={onChange}\n                onFieldGroupSelect={onSetActiveFieldGroup}\n                onPathBlur={onBlur}\n                onPathFocus={onFocus}\n                onPathOpen={onPathOpen}\n                onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n                onSetPathCollapsed={onSetCollapsedPath}\n                openPath={openPath}\n                presence={presence}\n                readOnly={isReadOnly}\n                schemaType={formState.schemaType}\n                validation={validation}\n                value={\n                  // note: the form state doesn't have a typed concept of a \"document\" value\n                  // but these should be compatible\n                  formState.value as FormDocumentValue\n                }\n              />\n            </>\n          )}\n        </Box>\n      </PresenceOverlay>\n    </Container>\n  )\n})\n\nfunction prepareMutationEvent(event: DocumentMutationEvent): PatchMsg {\n  const patches = event.mutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'mutation',\n    snapshot: event.document,\n    patches: fromMutationPatches(event.origin, patches),\n  }\n}\n\nfunction prepareRebaseEvent(event: DocumentRebaseEvent): PatchMsg {\n  const remotePatches = event.remoteMutations.map((mut) => mut.patch).filter(Boolean)\n  const localPatches = event.localMutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'rebase',\n    snapshot: event.document,\n    patches: fromMutationPatches('remote', remotePatches).concat(\n      fromMutationPatches('local', localPatches),\n    ),\n  }\n}\n","import {TabList} from '@sanity/ui'\nimport {type ComponentType, type ReactNode, useCallback} from 'react'\n\nimport {Tab} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components'\nimport {useDocumentPane} from '../../useDocumentPane'\n\n/**\n * This component will render the tabs for the document pane, following this rules:\n *  if the view tabs are wider than 200px it collapses to a dropdown\n *  if the header is smaller than 480px it collapses to a dropdown\n * For this we need to first measure the pane header width and then the tabs width.\n *\n * Gotcha, if the tabs are wider han 200px it renders a dropdown and if then the tabs change to be smaller than 200px\n * it will not change back to tabs, this is a limitation of the current implementation but an ok tradeoff to avoid mounting\n * ghost elements just to measure the width.\n */\nexport function DocumentHeaderTabs() {\n  const {activeViewId, paneKey, views} = useDocumentPane()\n\n  const tabPanelId = `${paneKey}tabpanel`\n\n  return (\n    <TabList space={1}>\n      {views.map((view, index) => (\n        <DocumentHeaderTab\n          icon={view.icon}\n          id={`${paneKey}tab-${view.id}`}\n          isActive={activeViewId === view.id}\n          key={view.id}\n          label={view.title}\n          tabPanelId={tabPanelId}\n          viewId={index === 0 ? null : (view.id ?? null)}\n        />\n      ))}\n    </TabList>\n  )\n}\n\nfunction DocumentHeaderTab(props: {\n  icon?: ComponentType | ReactNode\n  id: string\n  isActive: boolean\n  label: string\n  tabPanelId: string\n  viewId: string | null\n}) {\n  const {icon, id, isActive, label, tabPanelId, viewId, ...rest} = props\n  const {ready, editState} = useDocumentPane()\n  const {setView} = usePaneRouter()\n  const handleClick = useCallback(() => setView(viewId), [setView, viewId])\n\n  return (\n    <Tab\n      {...rest} // required to enable <TabList> keyboard navigation\n      aria-controls={tabPanelId}\n      disabled={!ready && !editState?.draft && !editState?.published}\n      icon={icon}\n      id={id}\n      label={label}\n      onClick={handleClick}\n      selected={isActive}\n    />\n  )\n}\n","import {unstable_useValuePreview as useValuePreview, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nexport function DocumentHeaderTitle(): React.JSX.Element {\n  const {connectionState, schemaType, title, value: documentValue} = useDocumentPane()\n  const subscribed = Boolean(documentValue)\n\n  const {error, value} = useValuePreview({\n    enabled: subscribed,\n    schemaType,\n    value: documentValue,\n  })\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (connectionState === 'connecting' && !subscribed) {\n    return <></>\n  }\n\n  if (title) {\n    return <>{title}</>\n  }\n\n  if (!documentValue) {\n    return (\n      <>\n        {t('panes.document-header-title.new.text', {\n          schemaType: schemaType?.title || schemaType?.name,\n        })}\n      </>\n    )\n  }\n\n  if (error) {\n    return <>{t('panes.document-header-title.error.text', {error: error.message})}</>\n  }\n\n  return (\n    <>\n      {value?.title || (\n        <span style={{color: 'var(--card-muted-fg-color)'}}>\n          {t('panes.document-header-title.untitled.text')}\n        </span>\n      )}\n    </>\n  )\n}\n","import {StarFilledIcon, StarIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {type ComponentType} from 'react'\nimport {useManageFavorite, type UseManageFavoriteProps, useTranslation} from 'sanity'\n\nimport {Button} from '../../../../../ui-components/button/Button'\nimport {structureLocaleNamespace} from '../../../../i18n'\n\nexport const FavoriteToggle: ComponentType<UseManageFavoriteProps & {documentExists: boolean}> = ({\n  documentExists,\n  ...props\n}) => {\n  const {isFavorited, isReady, favorite, unfavorite} = useManageFavorite(props)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const description = t(\n    isFavorited\n      ? 'document.favorites.remove-from-favorites'\n      : 'document.favorites.add-to-favorites',\n  )\n\n  return (\n    <Button\n      mode=\"bleed\"\n      onClick={isFavorited ? unfavorite : favorite}\n      disabled={!isReady || !documentExists}\n      aria-label={description}\n      aria-live=\"assertive\"\n      tooltipProps={{\n        content: <Text size={1}>{description}</Text>,\n        placement: 'right',\n      }}\n    >\n      <Text size={1}>{isFavorited ? <StarFilledIcon /> : <StarIcon />}</Text>\n    </Button>\n  )\n}\n","import {ArrowLeftIcon} from '@sanity/icons'\nimport {memo, useMemo} from 'react'\nimport {CapabilityGate, getPublishedId, useActiveWorkspace, useTranslation} from 'sanity'\n\nimport {Button} from '../../../../../ui-components'\nimport {PaneHeader, usePane, usePaneRouter} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentHeaderTabs} from './DocumentHeaderTabs'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\nimport {FavoriteToggle} from './FavoriteToggle'\n\n/**\n * When not collapsed this component will render the title and the tabs.\n * This component will render inside the document panel and not with the DocumentPanelHeader\n */\nexport const DocumentPanelSubHeader = memo(function DocumentPanelHeader() {\n  const {editState, connectionState, views, documentId, displayed} = useDocumentPane()\n  const {features} = useStructureTool()\n  const {index, BackLink} = usePaneRouter()\n  const {activeWorkspace} = useActiveWorkspace()\n  const publishedDocId = getPublishedId(documentId)\n\n  const showTabs = views.length > 1\n\n  const {collapsed, isLast} = usePane()\n  // Prevent focus if this is the last (non-collapsed) pane.\n  const tabIndex = isLast && !collapsed ? -1 : 0\n\n  // show the back button if both the feature is enabled and the current pane\n  // is not the first\n  const showBackButton = features.backButton && index > 0\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const title = useMemo(() => <DocumentHeaderTitle />, [])\n  const tabs = useMemo(() => showTabs && <DocumentHeaderTabs />, [showTabs])\n\n  const backButton = useMemo(\n    () =>\n      showBackButton && (\n        <Button\n          as={BackLink}\n          data-as=\"a\"\n          icon={ArrowLeftIcon}\n          mode=\"bleed\"\n          tooltipProps={{content: t('pane-header.back-button.text')}}\n        />\n      ),\n    [BackLink, showBackButton, t],\n  )\n\n  const favoriteToggle = (\n    <CapabilityGate capability=\"comlink\" condition=\"available\">\n      <FavoriteToggle\n        resourceType=\"studio\"\n        documentId={publishedDocId}\n        documentType={displayed?._type ?? ''}\n        resourceId={[activeWorkspace.projectId, activeWorkspace.dataset].join('.')}\n        schemaName={activeWorkspace.name}\n        projectId={activeWorkspace.projectId}\n        dataset={activeWorkspace.dataset}\n        documentExists={\n          (editState?.ready &&\n            (editState.version ?? editState.draft ?? editState.published) !== null) ??\n          false\n        }\n      />\n    </CapabilityGate>\n  )\n\n  return (\n    <PaneHeader\n      loading={connectionState === 'connecting' && !editState?.draft && !editState?.published}\n      title={title}\n      tabs={tabs}\n      tabIndex={tabIndex}\n      backButton={backButton}\n      appendTitle={favoriteToggle}\n    />\n  )\n})\n","import {BoundaryElementProvider, Box, Flex, PortalProvider, usePortal} from '@sanity/ui'\nimport {useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  getSanityCreateLinkMetadata,\n  getVersionFromId,\n  isReleaseDocument,\n  isReleaseScheduledOrScheduling,\n  isSanityCreateLinked,\n  isSystemBundle,\n  LegacyLayerProvider,\n  type ReleaseDocument,\n  ScrollContainer,\n  usePerspective,\n  VirtualizerScrollInstanceProvider,\n} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {PaneContent, usePane, usePaneLayout, usePaneRouter} from '../../../components'\nimport {isLiveEditEnabled} from '../../../components/paneItem/helpers'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {DocumentInspectorPanel} from '../documentInspector'\nimport {InspectDialog} from '../inspectDialog'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {\n  DeletedDocumentBanners,\n  DeprecatedDocumentTypeBanner,\n  InsufficientPermissionBanner,\n  ReferenceChangedBanner,\n} from './banners'\nimport {ArchivedReleaseDocumentBanner} from './banners/ArchivedReleaseDocumentBanner'\nimport {CanvasLinkedBanner} from './banners/CanvasLinkedBanner'\nimport {CreateLinkedBanner} from './banners/CreateLinkedBanner'\nimport {DocumentNotInReleaseBanner} from './banners/DocumentNotInReleaseBanner'\nimport {DraftLiveEditBanner} from './banners/DraftLiveEditBanner'\nimport {OpenReleaseToEditBanner} from './banners/OpenReleaseToEditBanner'\nimport {ScheduledReleaseBanner} from './banners/ScheduledReleaseBanner'\nimport {UnpublishedDocumentBanner} from './banners/UnpublishedDocumentBanner'\nimport {FormView} from './documentViews'\nimport {DocumentPanelSubHeader} from './header/DocumentPanelSubHeader'\n\ninterface DocumentPanelProps {\n  footerHeight: number | null\n  headerHeight: number | null\n  isInspectOpen: boolean\n  rootElement: HTMLDivElement | null\n  setDocumentPanelPortalElement: (el: HTMLElement | null) => void\n  footer: React.ReactNode\n}\n\nconst DocumentBox = styled(Box)({\n  position: 'relative',\n})\n\nconst Scroller = styled(ScrollContainer)<{$disabled: boolean}>(({$disabled}) => {\n  if ($disabled) {\n    return {height: '100%'}\n  }\n\n  return css`\n    height: 100%;\n    overflow: auto;\n    position: relative;\n    scroll-behavior: smooth;\n    outline: none;\n  `\n})\n\nexport const DocumentPanel = function DocumentPanel(props: DocumentPanelProps) {\n  const {\n    footerHeight,\n    headerHeight,\n    isInspectOpen,\n    rootElement,\n    setDocumentPanelPortalElement,\n    footer,\n  } = props\n  const {\n    activeViewId,\n    displayed,\n    documentId,\n    editState,\n    inspector,\n    value,\n    views,\n    ready,\n    schemaType,\n    permissions,\n    isPermissionsLoading,\n  } = useDocumentPane()\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n  const showCreateBanner = isSanityCreateLinked(createLinkMetadata)\n\n  const {params} = usePaneRouter()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed} = usePane()\n  const parentPortal = usePortal()\n  const {features} = useStructureTool()\n  const [_portalElement, setPortalElement] = useState<HTMLDivElement | null>(null)\n  const [documentScrollElement, setDocumentScrollElement] = useState<HTMLDivElement | null>(null)\n  const formContainerElement = useRef<HTMLDivElement | null>(null)\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n\n  const activeView = useMemo(\n    () => views.find((view) => view.id === activeViewId) || views[0] || {type: 'form'},\n    [activeViewId, views],\n  )\n\n  // Use a local portal container when split panes is supported\n  const portalElement: HTMLElement | null = features.splitPanes\n    ? _portalElement || parentPortal.element\n    : parentPortal.element\n\n  // Calculate the height of the header\n  const margins: [number, number, number, number] = useMemo(() => {\n    if (layoutCollapsed) {\n      return [headerHeight || 0, 0, footerHeight ? footerHeight + 2 : 2, 0]\n    }\n\n    return [0, 0, 2, 0]\n  }, [layoutCollapsed, footerHeight, headerHeight])\n\n  const formViewHidden = activeView.type !== 'form'\n\n  const activeViewNode = useMemo(() => {\n    if (activeView.type === 'component' && activeView.component) {\n      const ActiveViewComponent = activeView.component\n      return (\n        <ActiveViewComponent\n          document={{\n            draft: editState?.draft || null,\n            displayed: displayed || value,\n            historical: displayed,\n            published: editState?.published || null,\n          }}\n          documentId={documentId}\n          options={activeView.options}\n          schemaType={schemaType}\n        />\n      )\n    }\n    return false\n  }, [activeView, displayed, documentId, editState?.draft, editState?.published, schemaType, value])\n\n  const isLiveEdit = isLiveEditEnabled(schemaType)\n\n  // Scroll to top as `documentId` changes\n  useEffect(() => {\n    if (!documentScrollElement?.scrollTo) return\n    documentScrollElement.scrollTo(0, 0)\n  }, [documentId, documentScrollElement])\n\n  // Pass portal element to `DocumentPane`\n  useEffect(() => {\n    if (portalElement) {\n      setDocumentPanelPortalElement(portalElement)\n    }\n  }, [portalElement, setDocumentPanelPortalElement])\n\n  const inspectDialog = useMemo(() => {\n    return isInspectOpen ? <InspectDialog value={displayed || value} /> : null\n  }, [isInspectOpen, displayed, value])\n\n  const showInspector = Boolean(!collapsed && inspector)\n  const {selectedPerspective, selectedReleaseId} = usePerspective()\n\n  const banners = useMemo(() => {\n    if (params?.historyVersion) {\n      return <ArchivedReleaseDocumentBanner />\n    }\n\n    const isScheduledRelease =\n      isReleaseDocument(selectedPerspective) && isReleaseScheduledOrScheduling(selectedPerspective)\n\n    const documentInScheduledRelease = Boolean(\n      isScheduledRelease &&\n        displayed?._id &&\n        getVersionFromId(displayed?._id) === selectedReleaseId,\n    )\n\n    if (documentInScheduledRelease) {\n      return <ScheduledReleaseBanner currentRelease={selectedPerspective as ReleaseDocument} />\n    }\n    const isPinnedDraftOrPublish = isSystemBundle(selectedPerspective)\n\n    if (\n      displayed?._id &&\n      getVersionFromId(displayed._id) !== selectedReleaseId &&\n      ready &&\n      !isPinnedDraftOrPublish\n    ) {\n      return (\n        <DocumentNotInReleaseBanner\n          documentId={value._id}\n          currentRelease={selectedPerspective as ReleaseDocument}\n          value={displayed || undefined}\n          isScheduledRelease={isScheduledRelease}\n        />\n      )\n    }\n\n    if (\n      activeView.type === 'form' &&\n      isLiveEdit &&\n      ready &&\n      editState?.draft?._id &&\n      !selectedReleaseId\n    ) {\n      return (\n        <DraftLiveEditBanner\n          displayed={displayed}\n          documentId={documentId}\n          schemaType={schemaType}\n        />\n      )\n    }\n\n    if (activeView.type !== 'form' || isPermissionsLoading) return null\n\n    return (\n      <>\n        {showCreateBanner && <CreateLinkedBanner />}\n        {!permissions?.granted && (\n          <InsufficientPermissionBanner requiredPermission={requiredPermission} />\n        )}\n        <ReferenceChangedBanner />\n        <DeprecatedDocumentTypeBanner />\n        <CanvasLinkedBanner />\n        <DeletedDocumentBanners />\n        <UnpublishedDocumentBanner />\n        <OpenReleaseToEditBanner\n          documentId={displayed?._id ?? documentId}\n          isPinnedDraftOrPublished={isPinnedDraftOrPublish}\n        />\n      </>\n    )\n  }, [\n    params?.historyVersion,\n    selectedPerspective,\n    displayed,\n    selectedReleaseId,\n    ready,\n    activeView.type,\n    isLiveEdit,\n    editState?.draft?._id,\n    isPermissionsLoading,\n    showCreateBanner,\n    permissions?.granted,\n    requiredPermission,\n    documentId,\n    value._id,\n    schemaType,\n  ])\n  const showFormView = features.resizablePanes || !showInspector\n  return (\n    <PaneContent>\n      <Flex height=\"fill\">\n        {showFormView && (\n          <Flex height=\"fill\" direction=\"column\" width=\"fill\" flex={2}>\n            <LegacyLayerProvider zOffset=\"paneHeader\">\n              {banners}\n              <DocumentPanelSubHeader />\n            </LegacyLayerProvider>\n            <DocumentBox flex={2} overflow=\"hidden\">\n              <PortalProvider\n                element={portalElement}\n                __unstable_elements={{documentScrollElement: documentScrollElement}}\n              >\n                <BoundaryElementProvider element={documentScrollElement}>\n                  <VirtualizerScrollInstanceProvider\n                    scrollElement={documentScrollElement}\n                    containerElement={formContainerElement}\n                  >\n                    <Scroller\n                      $disabled={layoutCollapsed || false}\n                      data-testid=\"document-panel-scroller\"\n                      ref={setDocumentScrollElement}\n                    >\n                      <FormView\n                        hidden={formViewHidden}\n                        margins={margins}\n                        ref={formContainerElement}\n                      />\n                      {activeViewNode}\n                    </Scroller>\n\n                    {inspectDialog}\n\n                    <div data-testid=\"document-panel-portal\" ref={setPortalElement} />\n                  </VirtualizerScrollInstanceProvider>\n                </BoundaryElementProvider>\n              </PortalProvider>\n            </DocumentBox>\n\n            {footer}\n          </Flex>\n        )}\n        {showInspector && (\n          <BoundaryElementProvider element={rootElement}>\n            <DocumentInspectorPanel\n              documentId={documentId}\n              documentType={schemaType.name}\n              flex={1}\n            />\n          </BoundaryElementProvider>\n        )}\n      </Flex>\n    </PaneContent>\n  )\n}\nDocumentPanel.displayName = 'DocumentPanel'\n","/**\n * @internal\n */\nexport const _DEBUG = false\n\nexport const EMPTY_PARAMS = Object.freeze({})\nexport const LOADING_PANE = Symbol('LOADING_PANE')\n\nexport const DOCUMENT_PANEL_PORTAL_ELEMENT = 'documentPanelPortalElement'\n","import {type Placement} from '@sanity/ui'\n\nimport {type DialogProps} from '../../../../../ui-components'\n\nexport const POPOVER_FALLBACK_PLACEMENTS: Placement[] = ['left', 'bottom']\n\nexport const DIALOG_WIDTH_TO_UI_WIDTH: {[key: string]: DialogProps['width']} = {\n  small: 0,\n  medium: 1,\n  large: 2,\n  full: 'auto',\n}\n","import {\n  Box,\n  Button, // eslint-disable-line no-restricted-imports\n  Flex,\n  Grid,\n  Popover, // eslint-disable-line no-restricted-imports\n  Text,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport {useCallback, useRef} from 'react'\nimport {type DocumentActionConfirmDialogProps, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\n\nexport function ConfirmDialog(props: {\n  dialog: DocumentActionConfirmDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<ConfirmDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\n/**\n * Dialog rendered by custom document actions of dialog type `confirm`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nfunction ConfirmDialogContent(props: {dialog: DocumentActionConfirmDialogProps}) {\n  const {dialog} = props\n  const {\n    cancelButtonIcon,\n    cancelButtonText,\n    confirmButtonIcon,\n    confirmButtonText,\n    // color,\n    message,\n    onCancel,\n    onConfirm,\n    tone,\n  } = dialog\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isTopLayer} = useLayer()\n  const ref = useRef<HTMLDivElement | null>(null)\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onCancel()\n    },\n    [isTopLayer, onCancel],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(isTopLayer && onCancel, () => [ref.current])\n\n  return (\n    <Flex direction=\"column\" ref={ref} style={{minWidth: 320 - 16, maxWidth: 400}}>\n      <Box flex={1} overflow=\"auto\" padding={4}>\n        <Text>{message}</Text>\n      </Box>\n      <Box paddingX={4} paddingY={3} style={{borderTop: '1px solid var(--card-border-color)'}}>\n        <Grid columns={2} gap={2}>\n          <Button\n            data-testid=\"confirm-dialog-cancel-button\"\n            icon={cancelButtonIcon}\n            onClick={onCancel}\n            mode=\"ghost\"\n            text={cancelButtonText || t('confirm-dialog.cancel-button.fallback-text')}\n          />\n          <Button\n            data-testid=\"confirm-dialog-confirm-button\"\n            icon={confirmButtonIcon}\n            onClick={onConfirm}\n            text={confirmButtonText || t('confirm-dialog.confirm-button.fallback-text')}\n            tone={tone}\n          />\n        </Grid>\n      </Box>\n    </Flex>\n  )\n}\n","import {\n  Box,\n  Dialog, // eslint-disable-line no-restricted-imports\n} from '@sanity/ui'\nimport {useId} from 'react'\nimport {type DocumentActionModalDialogProps, LegacyLayerProvider} from 'sanity'\n\nimport {DIALOG_WIDTH_TO_UI_WIDTH} from './constants'\n\n/**\n * Dialog rendered by custom document actions of dialog type `dialog`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nexport function ModalDialog(props: {dialog: DocumentActionModalDialogProps}) {\n  const {dialog} = props\n  const dialogId = useId()\n\n  const footer = dialog.footer && (\n    <Box paddingX={4} paddingY={3}>\n      {dialog.footer}\n    </Box>\n  )\n\n  return (\n    <LegacyLayerProvider zOffset=\"fullscreen\">\n      <Dialog\n        animate\n        __unstable_hideCloseButton={dialog.showCloseButton === false}\n        footer={footer}\n        header={dialog.header}\n        id={dialogId}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClose={dialog.onClose}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClickOutside={dialog.onClose}\n        width={dialog.width === undefined ? 1 : DIALOG_WIDTH_TO_UI_WIDTH[dialog.width]}\n      >\n        <Box padding={4}>{dialog.content}</Box>\n      </Dialog>\n    </LegacyLayerProvider>\n  )\n}\n","import {\n  Popover, // eslint-disable-line no-restricted-imports\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport {useCallback, useRef} from 'react'\nimport {type DocumentActionPopoverDialogProps} from 'sanity'\n\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\n\nexport function PopoverDialog(props: {\n  dialog: DocumentActionPopoverDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<PopoverDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\n/**\n * Popover rendered by custom document actions of dialog type `popover`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nfunction PopoverDialogContent(props: {dialog: DocumentActionPopoverDialogProps}) {\n  const {dialog} = props\n  const {content, onClose} = dialog\n  const {isTopLayer} = useLayer()\n  const ref = useRef<HTMLDivElement | null>(null)\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onClose()\n    },\n    [isTopLayer, onClose],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(isTopLayer && onClose, () => [ref.current])\n\n  return <div ref={ref}>{content}</div>\n}\n","import {PortalProvider, Text, usePortal} from '@sanity/ui'\nimport {type ReactNode, useId} from 'react'\nimport {type DocumentActionDialogProps} from 'sanity'\n\nimport {Dialog} from '../../../../ui-components'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {ConfirmDialog} from './dialogs/ConfirmDialog'\nimport {ModalDialog} from './dialogs/ModalDialog'\nimport {PopoverDialog} from './dialogs/PopoverDialog'\n\nexport interface ActionStateDialogProps {\n  dialog: DocumentActionDialogProps\n  referenceElement?: HTMLElement | null\n}\n\n// A portal provider that uses the document panel portal element if it exists\n// as the portal element so that dialogs are scoped to the document panel\nfunction DocumentActionPortalProvider(props: {children: ReactNode}) {\n  const {children} = props\n  const {element, elements} = usePortal()\n  const portalElement = elements?.[DOCUMENT_PANEL_PORTAL_ELEMENT] || element\n\n  return <PortalProvider element={portalElement}>{children}</PortalProvider>\n}\n\nexport function ActionStateDialog(props: ActionStateDialogProps) {\n  const {dialog, referenceElement = null} = props\n  const modalId = useId()\n\n  if (dialog.type === 'confirm') {\n    return <ConfirmDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'popover') {\n    return <PopoverDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'dialog' || !dialog.type) {\n    return (\n      <DocumentActionPortalProvider>\n        <ModalDialog dialog={dialog} />\n      </DocumentActionPortalProvider>\n    )\n  }\n\n  if (dialog.type === 'custom') {\n    return <DocumentActionPortalProvider>{dialog?.component}</DocumentActionPortalProvider>\n  }\n\n  // @todo: add validation?\n  const unknownModal: any = dialog\n\n  // eslint-disable-next-line no-console\n  console.warn(`Unsupported modal type ${unknownModal.type}`)\n\n  return (\n    <Dialog\n      id={modalId}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClose={unknownModal.onClose}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClickOutside={unknownModal.onClose}\n      width={1}\n    >\n      {unknownModal.content || (\n        // eslint-disable-next-line i18next/no-literal-string\n        <Text size={1}>\n          Unexpected modal type (<code>{unknownModal.type}</code>)\n        </Text>\n      )}\n    </Dialog>\n  )\n}\n","import {Menu} from '@sanity/ui'\nimport {memo, type ReactNode, useCallback, useId, useMemo, useState} from 'react'\nimport {\n  ContextMenuButton,\n  type DocumentActionDescription,\n  LegacyLayerProvider,\n  useTranslation,\n} from 'sanity'\n\nimport {MenuButton, MenuItem, type PopoverProps} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {ActionStateDialog} from './ActionStateDialog'\n\nexport interface ActionMenuButtonProps {\n  actionStates: DocumentActionDescription[]\n  disabled: boolean\n}\n\n/**\n * @internal\n */\nexport const ActionDialogWrapper = memo(function ActionDialogWrapper({\n  actionStates,\n  children,\n  referenceElement,\n}: {\n  actionStates: DocumentActionDescription[]\n  children: ({handleAction}: {handleAction: (idx: number) => void}) => ReactNode\n  referenceElement?: HTMLElement | null\n}) {\n  const [actionIndex, setActionIndex] = useState(-1)\n  const currentAction = useMemo(() => actionStates[actionIndex], [actionIndex, actionStates])\n\n  const handleAction = useCallback((idx: number) => {\n    setActionIndex(idx)\n  }, [])\n\n  const result = useMemo(() => children({handleAction}), [children, handleAction])\n\n  return (\n    <>\n      {currentAction && currentAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={currentAction.dialog} referenceElement={referenceElement} />\n        </LegacyLayerProvider>\n      )}\n      {result}\n    </>\n  )\n})\n\n/**\n * @internal\n */\nexport function ActionMenuButton(props: ActionMenuButtonProps) {\n  const {actionStates, disabled} = props\n  const idPrefix = useId()\n\n  const [referenceElement, setReferenceElement] = useState<HTMLButtonElement | null>(null)\n\n  const popoverProps: PopoverProps = useMemo(\n    () => ({\n      placement: 'top-end',\n      portal: true,\n      preventOverflow: true,\n    }),\n    [],\n  )\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const renderActionDialog = useCallback<\n    ({handleAction}: {handleAction: (idx: number) => void}) => ReactNode\n  >(\n    ({handleAction}) => (\n      <MenuButton\n        id={`${idPrefix}-action-menu`}\n        button={\n          <ContextMenuButton\n            aria-label={t('buttons.action-menu-button.aria-label')}\n            disabled={disabled}\n            data-testid=\"action-menu-button\"\n            tooltipProps={{content: t('buttons.action-menu-button.tooltip')}}\n          />\n        }\n        menu={\n          <Menu padding={1}>\n            {actionStates.map((actionState, idx) => (\n              <ActionMenuListItem\n                actionState={actionState}\n                disabled={disabled}\n                index={idx}\n                // eslint-disable-next-line react/no-array-index-key\n                key={idx}\n                onAction={handleAction}\n              />\n            ))}\n          </Menu>\n        }\n        popover={popoverProps}\n        ref={setReferenceElement}\n      />\n    ),\n    [actionStates, disabled, idPrefix, popoverProps, t],\n  )\n\n  return (\n    <ActionDialogWrapper actionStates={actionStates} referenceElement={referenceElement}>\n      {renderActionDialog}\n    </ActionDialogWrapper>\n  )\n}\n\ninterface ActionMenuListItemProps {\n  actionState: DocumentActionDescription\n  disabled: boolean\n  index: number\n  onAction: (idx: number) => void\n}\n\nexport function ActionMenuListItem(props: ActionMenuListItemProps) {\n  const {actionState, disabled, index, onAction} = props\n  const {onHandle} = actionState\n\n  const handleClick = useCallback(() => {\n    onAction(index)\n    if (onHandle) onHandle()\n  }, [index, onAction, onHandle])\n\n  const hotkeys = useMemo(() => {\n    return actionState.shortcut\n      ? String(actionState.shortcut)\n          .split('+')\n          .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1))\n      : undefined\n  }, [actionState.shortcut])\n\n  return (\n    <MenuItem\n      data-testid={`action-${actionState.label.replace(' ', '')}`}\n      disabled={disabled || Boolean(actionState.disabled)}\n      hotkeys={hotkeys}\n      icon={actionState.icon}\n      onClick={handleClick}\n      text={actionState.label}\n      tone={actionState.tone}\n      {...(actionState.disabled && {tooltipProps: {content: actionState.title}})}\n    />\n  )\n}\n","/* eslint-disable import/no-extraneous-dependencies */\n\nimport {TrashIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {ConfirmDeleteDialog} from '../components'\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_TITLE_KEY = {\n  NOTHING_TO_DELETE: 'action.delete.disabled.nothing-to-delete',\n  NOT_READY: 'action.delete.disabled.not-ready',\n}\n\n/** @internal */\nexport const DeleteAction: DocumentActionComponent = ({id, type, draft, onComplete, release}) => {\n  const {setIsDeleting: paneSetIsDeleting} = useDocumentPane()\n  const {delete: deleteOp} = useDocumentOperation(id, type, release)\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setIsDeleting(true)\n    setConfirmDialogOpen(false)\n    paneSetIsDeleting(true)\n    deleteOp.execute()\n    onComplete()\n  }, [deleteOp, onComplete, paneSetIsDeleting])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'delete',\n  })\n\n  const currentUser = useCurrentUser()\n\n  return useMemo(() => {\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: TrashIcon,\n        disabled: true,\n        label: t('action.delete.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"delete-document\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: TrashIcon,\n      disabled: isDeleting || Boolean(deleteOp.disabled) || isPermissionsLoading,\n      title: (deleteOp.disabled && t(DISABLED_REASON_TITLE_KEY[deleteOp.disabled])) || '',\n      label: isDeleting ? t('action.delete.running.label') : t('action.delete.label'),\n      shortcut: 'Ctrl+Alt+D',\n      onHandle: handle,\n      dialog: isConfirmDialogOpen && {\n        type: 'custom',\n        component: (\n          <ConfirmDeleteDialog\n            // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n            action=\"delete\"\n            id={draft?._id || id}\n            type={type}\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      },\n    }\n  }, [\n    currentUser,\n    deleteOp.disabled,\n    draft?._id,\n    handle,\n    handleCancel,\n    handleConfirm,\n    id,\n    isConfirmDialogOpen,\n    isDeleting,\n    isPermissionsLoading,\n    permissions?.granted,\n    t,\n    type,\n  ])\n}\n\nDeleteAction.action = 'delete'\nDeleteAction.displayName = 'DeleteAction'\n","/* eslint-disable import/no-extraneous-dependencies */\n\nimport {ResetIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDialogProps,\n  InsufficientPermissionsMessage,\n  isPublishedId,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_KEY = {\n  NO_CHANGES: 'action.discard-changes.disabled.no-change',\n  NOT_PUBLISHED: 'action.discard-changes.disabled.not-published',\n  NOT_READY: 'action.discard-changes.disabled.not-ready',\n} as const\n\n/** @internal */\nexport const DiscardChangesAction: DocumentActionComponent = ({\n  id,\n  type,\n  published,\n  liveEdit,\n  onComplete,\n  release,\n}) => {\n  const {discardChanges} = useDocumentOperation(id, type, release)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'discardDraft',\n  })\n  const currentUser = useCurrentUser()\n  const {displayed} = useDocumentPane()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const isPublished = displayed?._id && isPublishedId(displayed?._id)\n\n  const handleConfirm = useCallback(() => {\n    discardChanges.execute()\n    onComplete()\n  }, [discardChanges, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | false = useMemo(\n    () =>\n      isConfirmDialogOpen && {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: t('action.discard-changes.confirm-dialog.confirm-discard-changes'),\n      },\n    [handleConfirm, isConfirmDialogOpen, onComplete, t],\n  )\n\n  return useMemo(() => {\n    if (!published || liveEdit || isPublished) {\n      return null\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: ResetIcon,\n        disabled: true,\n        label: t('action.discard-changes.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"discard-changes\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: ResetIcon,\n      disabled: Boolean(discardChanges.disabled) || isPermissionsLoading,\n      title: t((discardChanges.disabled && DISABLED_REASON_KEY[discardChanges.disabled]) || ''),\n      label: t('action.discard-changes.label'),\n      onHandle: handle,\n      dialog,\n    }\n  }, [\n    currentUser,\n    dialog,\n    discardChanges.disabled,\n    handle,\n    isPermissionsLoading,\n    isPublished,\n    liveEdit,\n    permissions?.granted,\n    published,\n    t,\n  ])\n}\n\nDiscardChangesAction.action = 'discardChanges'\nDiscardChangesAction.displayName = 'DiscardChangesAction'\n","import {CopyIcon} from '@sanity/icons'\nimport {uuid} from '@sanity/uuid'\nimport {useCallback, useMemo, useState} from 'react'\nimport {filter, firstValueFrom} from 'rxjs'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useDocumentStore,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nconst DISABLED_REASON_KEY = {\n  NOTHING_TO_DUPLICATE: 'action.duplicate.disabled.nothing-to-duplicate',\n  NOT_READY: 'action.duplicate.disabled.not-ready',\n}\n\n/** @internal */\nexport const DuplicateAction: DocumentActionComponent = ({id, type, onComplete, release}) => {\n  const documentStore = useDocumentStore()\n  const {duplicate} = useDocumentOperation(id, type, release)\n  const {navigateIntent} = useRouter()\n  const [isDuplicating, setDuplicating] = useState(false)\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'duplicate',\n  })\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const currentUser = useCurrentUser()\n\n  const handle = useCallback(async () => {\n    const dupeId = uuid()\n\n    setDuplicating(true)\n\n    // set up the listener before executing\n    const duplicateSuccess = firstValueFrom(\n      documentStore.pair\n        .operationEvents(id, type)\n        .pipe(filter((e) => e.op === 'duplicate' && e.type === 'success')),\n    )\n    duplicate.execute(dupeId)\n\n    // only navigate to the duplicated document when the operation is successful\n    await duplicateSuccess\n    navigateIntent('edit', {id: dupeId, type})\n\n    onComplete()\n  }, [documentStore.pair, duplicate, id, navigateIntent, onComplete, type])\n\n  return useMemo(() => {\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        icon: CopyIcon,\n        disabled: true,\n        label: t('action.duplicate.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"duplicate-document\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      icon: CopyIcon,\n      disabled: isDuplicating || Boolean(duplicate.disabled) || isPermissionsLoading,\n      label: isDuplicating ? t('action.duplicate.running.label') : t('action.duplicate.label'),\n      title: duplicate.disabled ? t(DISABLED_REASON_KEY[duplicate.disabled]) : '',\n      onHandle: handle,\n    }\n  }, [\n    currentUser,\n    duplicate.disabled,\n    handle,\n    isDuplicating,\n    isPermissionsLoading,\n    permissions?.granted,\n    t,\n  ])\n}\n\nDuplicateAction.action = 'duplicate'\nDuplicateAction.displayName = 'DuplicateAction'\n","import {RevertIcon} from '@sanity/icons'\nimport {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDialogProps,\n  useDocumentOperation,\n  useDocumentOperationEvent,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../i18n'\n\n/** @internal */\nexport const HistoryRestoreAction: DocumentActionComponent = ({\n  id,\n  type,\n  revision,\n  onComplete,\n  release,\n}) => {\n  const {restore} = useDocumentOperation(id, type, release)\n  const event = useDocumentOperationEvent(id, type)\n  const {navigateIntent} = useRouter()\n  const prevEvent = useRef(event)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleConfirm = useCallback(() => {\n    restore.execute(revision!)\n    onComplete()\n  }, [restore, revision, onComplete])\n\n  /**\n   * If the restore operation is successful, navigate to the document edit view\n   */\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    if (event.type === 'success' && event.op === 'restore') {\n      navigateIntent('edit', {id, type})\n    }\n\n    prevEvent.current = event\n  }, [event, id, navigateIntent, type])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: t('action.restore.confirm.message'),\n      }\n    }\n\n    return null\n  }, [handleConfirm, isConfirmDialogOpen, onComplete, t])\n\n  const isRevisionInitial = revision === '@initial'\n  const isRevisionLatest = revision === undefined // undefined means latest revision\n\n  return useMemo(() => {\n    if (isRevisionLatest) {\n      return null\n    }\n\n    return {\n      label: t('action.restore.label'),\n      tone: 'caution',\n      onHandle: handle,\n      title: t(\n        isRevisionInitial\n          ? 'action.restore.disabled.cannot-restore-initial'\n          : 'action.restore.tooltip',\n      ),\n      icon: RevertIcon,\n      dialog,\n      disabled: isRevisionInitial,\n    }\n  }, [dialog, handle, isRevisionInitial, isRevisionLatest, t])\n}\n\nHistoryRestoreAction.action = 'restore'\nHistoryRestoreAction.displayName = 'HistoryRestoreAction'\n","import {defineEvent} from '@sanity/telemetry'\n\ninterface DocumentPublishedInfo {\n  /**\n   * The document was created and published straight away\n   */\n  publishedImmediately: boolean\n\n  /**\n   * The document had a previously published version when it was published\n   */\n  previouslyPublished: boolean\n}\nexport const DocumentPublished = defineEvent<DocumentPublishedInfo>({\n  name: 'Document Published',\n  version: 1,\n  description: 'User clicked the \"Publish\" button in the document pane',\n})\n","import {PublishIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {isValidationErrorMarker} from '@sanity/types'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  isPublishedId,\n  type TFunction,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useEditState,\n  useRelativeTime,\n  useSyncState,\n  useTranslation,\n  useValidationStatus,\n} from 'sanity'\n\nimport {structureLocaleNamespace, type StructureLocaleResourceKeys} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\nimport {DocumentPublished} from './__telemetry__/documentActions.telemetry'\n\nconst DISABLED_REASON_TITLE_KEY: Record<string, StructureLocaleResourceKeys> = {\n  LIVE_EDIT_ENABLED: 'action.publish.live-edit.publish-disabled',\n  ALREADY_PUBLISHED: 'action.publish.already-published.no-time-ago.tooltip',\n  NO_CHANGES: 'action.publish.no-changes.tooltip',\n  NOT_READY: 'action.publish.disabled.not-ready',\n} as const\n\nfunction getDisabledReason(\n  reason: keyof typeof DISABLED_REASON_TITLE_KEY,\n  publishedAt: string | undefined,\n  t: TFunction,\n) {\n  if (reason === 'ALREADY_PUBLISHED' && publishedAt) {\n    return <AlreadyPublished publishedAt={publishedAt} />\n  }\n  return t(DISABLED_REASON_TITLE_KEY[reason])\n}\n\nfunction AlreadyPublished({publishedAt}: {publishedAt: string}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const timeSincePublished = useRelativeTime(publishedAt, {useTemporalPhrase: true})\n  return <span>{t('action.publish.already-published.tooltip', {timeSincePublished})}</span>\n}\n\n/** @internal */\n// eslint-disable-next-line complexity\nexport const PublishAction: DocumentActionComponent = (props) => {\n  const {id, type, liveEdit, draft, published, release} = props\n  const [publishState, setPublishState] = useState<'publishing' | 'published' | null>(null)\n  const {publish} = useDocumentOperation(id, type)\n  const validationStatus = useValidationStatus(id, type)\n  const syncState = useSyncState(id, type)\n  const {changesOpen, documentId, documentType, value} = useDocumentPane()\n  const editState = useEditState(documentId, documentType)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const revision = (editState?.draft || editState?.published || {})._rev\n\n  const hasValidationErrors = validationStatus.validation.some(isValidationErrorMarker)\n  // we use this to \"schedule\" publish after pending tasks (e.g. validation and sync) has completed\n  const [publishScheduled, setPublishScheduled] = useState<boolean>(false)\n  const isSyncing = syncState.isSyncing\n  const isValidating = validationStatus.isValidating\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'publish',\n  })\n\n  const currentUser = useCurrentUser()\n\n  // eslint-disable-next-line no-nested-ternary\n  const title = publish.disabled\n    ? getDisabledReason(publish.disabled, (published || {})._updatedAt, t) || ''\n    : hasValidationErrors\n      ? t('action.publish.validation-issues.tooltip')\n      : ''\n\n  const hasDraft = Boolean(draft)\n\n  const doPublish = useCallback(() => {\n    publish.execute()\n    setPublishState('publishing')\n  }, [publish])\n\n  useEffect(() => {\n    // make sure the validation status is about the current revision and not an earlier one\n    const validationComplete =\n      validationStatus.isValidating === false && validationStatus.revision !== revision\n\n    if (!publishScheduled || isSyncing || !validationComplete) {\n      return\n    }\n\n    if (!hasValidationErrors) {\n      doPublish()\n    }\n    setPublishScheduled(false)\n  }, [\n    isSyncing,\n    doPublish,\n    hasValidationErrors,\n    publishScheduled,\n    validationStatus.revision,\n    revision,\n    isValidating,\n    validationStatus.isValidating,\n  ])\n\n  useEffect(() => {\n    const didPublish = publishState === 'publishing' && !hasDraft\n\n    const nextState = didPublish ? 'published' : null\n    const delay = didPublish ? 200 : 4000\n    const timer = setTimeout(() => {\n      setPublishState(nextState)\n    }, delay)\n    return () => clearTimeout(timer)\n  }, [changesOpen, publishState, hasDraft])\n\n  const telemetry = useTelemetry()\n\n  const handle = useCallback(() => {\n    telemetry.log(DocumentPublished, {\n      publishedImmediately: !draft?._createdAt,\n      previouslyPublished: Boolean(published),\n    })\n    if (\n      syncState.isSyncing ||\n      validationStatus.isValidating ||\n      validationStatus.revision !== revision\n    ) {\n      setPublishScheduled(true)\n    } else {\n      doPublish()\n    }\n  }, [\n    telemetry,\n    draft?._createdAt,\n    published,\n    syncState.isSyncing,\n    validationStatus.isValidating,\n    validationStatus.revision,\n    revision,\n    doPublish,\n  ])\n\n  return useMemo(() => {\n    if (release) {\n      // Version documents are not publishable by this action, they should be published as part of a release\n      return null\n    }\n    if (liveEdit) {\n      // Live edit documents are not publishable by this action, they are published automatically\n      return null\n    }\n\n    /**\n     * When draft is null, if not a published or version document\n     * then it means the draft is yet to be saved - in this case don't disabled\n     * the publish button due to ALREADY_PUBLISHED reason\n     */\n    if (isPublishedId(value._id) && draft !== null) {\n      return {\n        tone: 'default',\n        icon: PublishIcon,\n        label: t('action.publish.label'),\n        title: getDisabledReason('ALREADY_PUBLISHED', published?._updatedAt, t),\n        disabled: true,\n      }\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'default',\n        icon: PublishIcon,\n        label: t('action.publish.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"publish-document\" currentUser={currentUser} />\n        ),\n        disabled: true,\n      }\n    }\n\n    const disabled = Boolean(\n      publishScheduled ||\n        editState?.transactionSyncLock?.enabled ||\n        publishState === 'publishing' ||\n        publishState === 'published' ||\n        hasValidationErrors ||\n        publish.disabled,\n    )\n\n    return {\n      disabled: disabled || isPermissionsLoading,\n      tone: 'default',\n      label:\n        // eslint-disable-next-line no-nested-ternary\n        publishState === 'published'\n          ? t('action.publish.published.label')\n          : publishScheduled || publishState === 'publishing'\n            ? t('action.publish.running.label')\n            : t('action.publish.draft.label'),\n      // @todo: Implement loading state, to show a `<Button loading />` state\n      // loading: publishScheduled || publishState === 'publishing',\n      icon: PublishIcon,\n      // eslint-disable-next-line no-nested-ternary\n      title: publishScheduled\n        ? t('action.publish.waiting')\n        : publishState === 'published' || publishState === 'publishing'\n          ? null\n          : title,\n      shortcut: disabled || publishScheduled ? null : 'Ctrl+Alt+P',\n      onHandle: handle,\n    }\n  }, [\n    release,\n    liveEdit,\n    value._id,\n    draft,\n    isPermissionsLoading,\n    permissions?.granted,\n    publishScheduled,\n    editState?.transactionSyncLock?.enabled,\n    publishState,\n    hasValidationErrors,\n    publish.disabled,\n    t,\n    title,\n    handle,\n    published?._updatedAt,\n    currentUser,\n  ])\n}\n\nPublishAction.action = 'publish'\nPublishAction.displayName = 'PublishAction'\n","import {UnpublishIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionModalDialogProps,\n  InsufficientPermissionsMessage,\n  isDraftId,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {ConfirmDeleteDialog} from '../components'\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_KEY = {\n  NOT_PUBLISHED: 'action.unpublish.disabled.not-published',\n  NOT_READY: 'action.unpublish.disabled.not-ready',\n  LIVE_EDIT_ENABLED: 'action.unpublish.disabled.live-edit-enabled',\n}\n\n/** @internal */\nexport const UnpublishAction: DocumentActionComponent = ({\n  id,\n  type,\n  draft,\n  onComplete,\n  liveEdit,\n  release,\n}) => {\n  const {unpublish} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'unpublish',\n  })\n  const currentUser = useCurrentUser()\n  const {displayed} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const isDraft = displayed?._id && isDraftId(displayed?._id)\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setConfirmDialogOpen(false)\n    unpublish.execute()\n    onComplete()\n  }, [onComplete, unpublish])\n\n  const dialog: DocumentActionModalDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'dialog',\n        onClose: onComplete,\n        content: (\n          <ConfirmDeleteDialog\n            id={draft?._id || id}\n            type={type}\n            // eslint-disable-next-line @sanity/i18n/no-attribute-string-literals\n            action=\"unpublish\"\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      }\n    }\n\n    return null\n  }, [draft, id, handleCancel, handleConfirm, isConfirmDialogOpen, onComplete, type])\n\n  return useMemo(() => {\n    if (release || isDraft) {\n      // Version documents cannot be unpublished by this action, they should be unpublished as part of a release\n      // Draft documents can't either\n      return null\n    }\n    if (liveEdit) {\n      return null\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: UnpublishIcon,\n        label: 'Unpublish',\n        title: (\n          <InsufficientPermissionsMessage context=\"unpublish-document\" currentUser={currentUser} />\n        ),\n        disabled: true,\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: UnpublishIcon,\n      disabled: Boolean(unpublish.disabled) || isPermissionsLoading,\n      label: t('action.unpublish.label'),\n      title: unpublish.disabled ? t(DISABLED_REASON_KEY[unpublish.disabled]) : '',\n      onHandle: () => setConfirmDialogOpen(true),\n      dialog,\n    }\n  }, [\n    release,\n    isDraft,\n    liveEdit,\n    isPermissionsLoading,\n    permissions?.granted,\n    unpublish.disabled,\n    t,\n    dialog,\n    currentUser,\n  ])\n}\n\nUnpublishAction.action = 'unpublish'\nUnpublishAction.displayName = 'UnpublishAction'\n","/* eslint-disable no-warning-comments */\n/* eslint-disable camelcase */\nimport {Flex, LayerProvider, Stack, Text} from '@sanity/ui'\nimport {memo, useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDescription,\n  type DocumentActionProps,\n  Hotkeys,\n  usePerspective,\n  useSource,\n} from 'sanity'\n\nimport {Button, Tooltip} from '../../../../ui-components'\nimport {RenderActionCollectionState} from '../../../components'\nimport {HistoryRestoreAction} from '../../../documentActions'\nimport {toLowerCaseNoSpaces} from '../../../util/toLowerCaseNoSpaces'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {ActionMenuButton} from './ActionMenuButton'\nimport {ActionStateDialog} from './ActionStateDialog'\n\ninterface DocumentStatusBarActionsInnerProps {\n  disabled: boolean\n  showMenu: boolean\n  states: DocumentActionDescription[]\n}\n\nconst DocumentStatusBarActionsInner = memo(function DocumentStatusBarActionsInner(\n  props: DocumentStatusBarActionsInnerProps,\n) {\n  const {disabled, showMenu, states} = props\n  const {__internal_tasks} = useSource()\n  const {editState} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const [firstActionState, ...menuActionStates] = states\n  const [buttonElement, setButtonElement] = useState<HTMLButtonElement | null>(null)\n\n  // TODO: This could be refactored to use the tooltip from the button if the firstAction.title was updated to a string.\n  const tooltipContent = useMemo(() => {\n    if (!firstActionState || (!firstActionState.title && !firstActionState.shortcut)) return null\n\n    return (\n      <Flex style={{maxWidth: 300}} align=\"center\" gap={3}>\n        {firstActionState.title && <Text size={1}>{firstActionState.title}</Text>}\n        {firstActionState.shortcut && (\n          <Hotkeys\n            data-testid=\"document-status-bar-hotkeys\"\n            fontSize={1}\n            style={{marginTop: -4, marginBottom: -4}}\n            keys={String(firstActionState.shortcut)\n              .split('+')\n              .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1).toLowerCase())}\n          />\n        )}\n      </Flex>\n    )\n  }, [firstActionState])\n  const showFirstActionButton = firstActionState && !selectedReleaseId && !editState?.liveEdit\n\n  const sideMenuItems = useMemo(() => {\n    return showFirstActionButton ? menuActionStates : [firstActionState, ...menuActionStates]\n  }, [showFirstActionButton, firstActionState, menuActionStates])\n\n  return (\n    <Flex align=\"center\" gap={1}>\n      {__internal_tasks && __internal_tasks.footerAction}\n      {showFirstActionButton && (\n        <LayerProvider zOffset={200}>\n          <Tooltip disabled={!tooltipContent} content={tooltipContent} placement=\"top\">\n            <Stack>\n              <Button\n                data-testid={`action-${toLowerCaseNoSpaces(firstActionState.label)}`}\n                disabled={disabled || Boolean(firstActionState.disabled)}\n                icon={firstActionState.icon}\n                // eslint-disable-next-line react/jsx-handler-names\n                onClick={firstActionState.onHandle}\n                ref={setButtonElement}\n                text={firstActionState.label}\n                tone={firstActionState.tone || 'primary'}\n              />\n            </Stack>\n          </Tooltip>\n        </LayerProvider>\n      )}\n      {/* if it's in version we always only want to show the items on the side menu and not on the main action */}\n      {((showMenu && menuActionStates.length > 0) || selectedReleaseId) && (\n        <ActionMenuButton actionStates={sideMenuItems} disabled={disabled} />\n      )}\n      {firstActionState && firstActionState.dialog && (\n        <ActionStateDialog dialog={firstActionState.dialog} referenceElement={buttonElement} />\n      )}\n    </Flex>\n  )\n})\n\nexport const DocumentStatusBarActions = memo(function DocumentStatusBarActions() {\n  const {\n    actions: allActions,\n    connectionState,\n    documentId,\n    editState,\n    isInitialValueLoading,\n  } = useDocumentPane()\n  // const [isMenuOpen, setMenuOpen] = useState(false)\n  // const handleMenuOpen = useCallback(() => setMenuOpen(true), [])\n  // const handleMenuClose = useCallback(() => setMenuOpen(false), [])\n  // const handleActionComplete = useCallback(() => setMenuOpen(false), [])\n\n  // The restore action has a dedicated place in the UI; it's only visible when the user is viewing\n  // a different document revision. It must be omitted from this collection.\n  const actions = useMemo(\n    () => (allActions ?? []).filter((action) => !isRestoreAction(action)),\n    [allActions],\n  )\n  const actionProps: Omit<DocumentActionProps, 'onComplete'> | null = useMemo(\n    () => (editState ? {...editState, initialValueResolved: !isInitialValueLoading} : null),\n    [editState, isInitialValueLoading],\n  )\n\n  const renderDocumentStatusBarActions = useCallback<\n    (props: {states: DocumentActionDescription[]}) => React.ReactNode\n  >(\n    ({states}) => (\n      <DocumentStatusBarActionsInner\n        disabled={connectionState !== 'connected'}\n        // isMenuOpen={isMenuOpen}\n        // onMenuOpen={handleMenuOpen}\n        // onMenuClose={handleMenuClose}\n        showMenu={actions.length > 1}\n        states={states}\n        // Use document ID as key to make sure that the actions state is reset when the document changes\n        key={documentId}\n      />\n    ),\n    [actions.length, connectionState, documentId],\n  )\n\n  if (actions.length === 0 || !actionProps) {\n    return null\n  }\n\n  return (\n    <RenderActionCollectionState\n      // component={}\n      // onActionComplete={handleActionComplete}\n      actions={actions}\n      actionProps={actionProps}\n      group=\"default\"\n    >\n      {renderDocumentStatusBarActions}\n    </RenderActionCollectionState>\n  )\n})\n\nexport const HistoryStatusBarActions = memo(function HistoryStatusBarActions() {\n  const {\n    actions,\n    connectionState,\n    editState,\n    revisionId: revision,\n    isInitialValueLoading,\n  } = useDocumentPane()\n\n  const disabled = (editState?.draft || editState?.published || {})._rev === revision\n  const actionProps: Omit<DocumentActionProps, 'onComplete'> | null = useMemo(\n    () =>\n      editState\n        ? {\n            ...editState,\n            revision: revision || undefined,\n            initialValueResolved: !isInitialValueLoading,\n          }\n        : null,\n    [editState, revision, isInitialValueLoading],\n  )\n\n  // If multiple `restore` actions are defined, ensure only the final one is used.\n  const historyActions = useMemo(() => (actions ?? []).filter(isRestoreAction).slice(-1), [actions])\n\n  const renderDocumentStatusBarActions = useCallback<\n    (props: {states: DocumentActionDescription[]}) => React.ReactNode\n  >(\n    ({states}) => (\n      <DocumentStatusBarActionsInner\n        disabled={connectionState !== 'connected' || Boolean(disabled)}\n        showMenu={false}\n        states={states}\n      />\n    ),\n    [connectionState, disabled],\n  )\n  if (!actionProps) {\n    return null\n  }\n  return (\n    <RenderActionCollectionState actions={historyActions} actionProps={actionProps} group=\"default\">\n      {renderDocumentStatusBarActions}\n    </RenderActionCollectionState>\n  )\n})\n\nexport function isRestoreAction(\n  action: DocumentActionComponent,\n): action is DocumentActionComponent & {action: 'restore'} {\n  return action.action === HistoryRestoreAction.action\n}\n","import {Text} from '@sanity/ui'\nimport {memo, useCallback, useMemo} from 'react'\nimport {\n  formatRelativeLocalePublishDate,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isDraftId,\n  isPublishedId,\n  isPublishedPerspective,\n  isReleaseScheduledOrScheduling,\n  isVersionId,\n  type ReleaseDocument,\n  Translate,\n  useActiveReleases,\n  useDateTimeFormat,\n  type UseDateTimeFormatOptions,\n  useOnlyHasVersions,\n  usePerspective,\n  useSchema,\n  useSetPerspective,\n  useTranslation,\n  VersionChip,\n} from 'sanity'\n\nimport {isLiveEditEnabled} from '../../../../../components/paneItem/helpers'\nimport {usePaneRouter} from '../../../../../components/paneRouter/usePaneRouter'\nimport {useFilteredReleases} from '../../../../../hooks/useFilteredReleases'\nimport {useDocumentPane} from '../../../useDocumentPane'\n\nconst TooltipContent = ({release}: {release: ReleaseDocument}) => {\n  const {t} = useTranslation()\n\n  if (release.state === 'archived') {\n    return <Text size={1}>{t('release.chip.tooltip.archived')}</Text>\n  }\n  if (release.metadata.releaseType === 'asap') {\n    return <Text size={1}>{t('release.type.asap')}</Text>\n  }\n  if (release.metadata.releaseType === 'scheduled') {\n    const isActive = release.state === 'active'\n\n    return (\n      release.metadata.intendedPublishAt && (\n        <Text size={1}>\n          {isActive ? (\n            <Translate\n              t={t}\n              i18nKey=\"release.chip.tooltip.intended-for-date\"\n              values={{\n                date: formatRelativeLocalePublishDate(release),\n              }}\n            />\n          ) : (\n            <Translate\n              t={t}\n              i18nKey=\"release.chip.tooltip.scheduled-for-date\"\n              values={{\n                date: formatRelativeLocalePublishDate(release),\n              }}\n            />\n          )}\n        </Text>\n      )\n    )\n  }\n\n  if (release.metadata.releaseType === 'undecided') {\n    return <Text size={1}>{t('release.type.undecided')}</Text>\n  }\n  return null\n}\n\nconst DATE_TIME_FORMAT: UseDateTimeFormatOptions = {\n  dateStyle: 'medium',\n  timeStyle: 'short',\n}\n\nexport const DocumentPerspectiveList = memo(function DocumentPerspectiveList() {\n  const {selectedReleaseId, selectedPerspectiveName} = usePerspective()\n  const {t} = useTranslation()\n  const setPerspective = useSetPerspective()\n  const {params, setParams} = usePaneRouter()\n  const dateTimeFormat = useDateTimeFormat(DATE_TIME_FORMAT)\n  const {loading} = useActiveReleases()\n  const schema = useSchema()\n  const {editState, displayed, documentType, documentId} = useDocumentPane()\n  const isCreatingDocument = displayed && !displayed._createdAt\n  const filteredReleases = useFilteredReleases({displayed, documentId})\n  const onlyHasVersions = useOnlyHasVersions({documentId})\n\n  const handlePerspectiveChange = useCallback(\n    (perspective: Parameters<typeof setPerspective>[0]) => () => {\n      if (perspective === 'published' && params?.historyVersion) {\n        setParams({\n          ...params,\n          rev: params?.historyEvent || undefined,\n          since: undefined,\n          historyVersion: undefined,\n        })\n      }\n      setPerspective(perspective)\n    },\n    [setPerspective, setParams, params],\n  )\n\n  const schemaType = schema.get(documentType)\n  const isLiveEdit = schemaType ? isLiveEditEnabled(schemaType) : false\n\n  const isPublishedChipDisabled = useMemo(() => {\n    // If it's a live edit document the only option to edit it is through\n    // the published perspective, users should be able to select it.\n    if (isLiveEdit && !selectedReleaseId) return false\n\n    // If it's not live edit, we want to check for the existence of the published doc.\n    return !editState?.published\n  }, [isLiveEdit, selectedReleaseId, editState?.published])\n\n  const getReleaseChipState = useCallback(\n    (release: ReleaseDocument): {selected: boolean; disabled?: boolean} => {\n      if (!params?.historyVersion)\n        return {\n          selected:\n            getReleaseIdFromReleaseDocumentId(release._id) ===\n            getVersionFromId(displayed?._id || ''),\n        }\n\n      const isReleaseHistoryMatch =\n        getReleaseIdFromReleaseDocumentId(release._id) === params.historyVersion\n\n      return {selected: isReleaseHistoryMatch, disabled: isReleaseHistoryMatch}\n    },\n    [displayed?._id, params?.historyVersion],\n  )\n\n  const isPublishSelected: boolean = useMemo(() => {\n    /**\n     * The publish perspective is selected when:\n     *  - the document is live edit and there is no draft\n     *  - the document is published and the selected perspective is published\n     */\n    if (isLiveEdit && !editState?.draft?._id && !selectedReleaseId) return true\n    if (\n      isPublishedId(displayed?._id || '') &&\n      isPublishedPerspective(selectedPerspectiveName || '')\n    ) {\n      return true\n    }\n    return false\n  }, [\n    displayed?._id,\n    editState?.draft?._id,\n    isLiveEdit,\n    selectedPerspectiveName,\n    selectedReleaseId,\n  ])\n\n  const isDraftSelected: boolean = useMemo(() => {\n    const displayedId = displayed?._id || ''\n    /** the draft is selected when:\n     * not viewing a historical version,\n     * when the document displayed is a draft,\n     * when the perspective is null,\n     * when the document is not published and the displayed version is draft,\n     * when there is no draft (new document),\n     */\n    if (isPublishSelected) return false\n    if (params?.historyVersion) return false\n    if (selectedPerspectiveName) return false\n    if (isVersionId(displayedId)) return false\n    if (isDraftId(displayedId)) return true\n    if (\n      isPublishedId(displayedId) &&\n      editState?.published &&\n      isPublishedPerspective(selectedPerspectiveName || '')\n    )\n      return false\n    return true\n  }, [\n    displayed?._id,\n    editState?.published,\n    isPublishSelected,\n    params?.historyVersion,\n    selectedPerspectiveName,\n  ])\n\n  const isDraftDisabled: boolean = useMemo(() => {\n    // Draft is disabled when the document has no published or draft but has versions\n    if (onlyHasVersions || (isCreatingDocument && selectedReleaseId)) {\n      return true\n    }\n\n    // Draft is disabled when we are creating a new document inside a release\n    // or when the document is live edit and there is no draft\n    if (!editState?.draft && !isLiveEdit) {\n      return false\n    }\n\n    if (isCreatingDocument && selectedReleaseId) return true\n    if (isLiveEdit) return true\n    return false\n  }, [editState?.draft, isCreatingDocument, isLiveEdit, onlyHasVersions, selectedReleaseId])\n\n  return (\n    <>\n      <VersionChip\n        tooltipContent={\n          <Text size={1}>\n            {editState?.published && editState?.published?._updatedAt ? (\n              <Translate\n                t={t}\n                i18nKey=\"release.chip.tooltip.published-date\"\n                values={{date: dateTimeFormat.format(new Date(editState?.published._updatedAt))}}\n              />\n            ) : (\n              <>{t('release.chip.tooltip.not-published')}</>\n            )}\n          </Text>\n        }\n        disabled={isPublishedChipDisabled}\n        onClick={handlePerspectiveChange('published')}\n        selected={isPublishSelected}\n        text={t('release.chip.published')}\n        tone=\"positive\"\n        contextValues={{\n          documentId: editState?.published?._id || editState?.id || '',\n          menuReleaseId: editState?.published?._id || editState?.id || '',\n          releases: filteredReleases.notCurrentReleases,\n          releasesLoading: loading,\n          documentType,\n          fromRelease: 'published',\n          isVersion: false,\n          disabled: !editState?.published,\n        }}\n      />\n      <VersionChip\n        tooltipContent={\n          <Text size={1}>\n            {editState?.draft ? (\n              <>\n                {editState?.draft._updatedAt ? (\n                  <Translate\n                    t={t}\n                    i18nKey=\"release.chip.tooltip.edited-date\"\n                    values={{date: dateTimeFormat.format(new Date(editState?.draft._updatedAt))}}\n                  />\n                ) : (\n                  <Translate\n                    t={t}\n                    i18nKey=\"release.chip.tooltip.created-date\"\n                    values={{date: dateTimeFormat.format(new Date(editState?.draft._createdAt))}}\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                {isLiveEdit\n                  ? t('release.chip.tooltip.draft-disabled.live-edit')\n                  : t('release.chip.tooltip.no-edits')}\n              </>\n            )}\n          </Text>\n        }\n        selected={isDraftSelected}\n        disabled={isDraftDisabled}\n        text={t('release.chip.draft')}\n        tone={editState?.draft ? 'caution' : 'neutral'}\n        onClick={handlePerspectiveChange('drafts')}\n        contextValues={{\n          documentId: editState?.draft?._id || editState?.published?._id || editState?.id || '',\n          menuReleaseId: editState?.draft?._id || editState?.published?._id || editState?.id || '',\n          releases: filteredReleases.notCurrentReleases,\n          releasesLoading: loading,\n          documentType: documentType,\n          fromRelease: 'draft',\n          isVersion: false,\n          disabled: !editState?.draft,\n        }}\n      />\n      {filteredReleases.inCreation && (\n        <VersionChip\n          tooltipContent={<TooltipContent release={filteredReleases.inCreation} />}\n          selected\n          onClick={() => {}}\n          locked={false}\n          tone={getReleaseTone(filteredReleases.inCreation)}\n          text={\n            filteredReleases.inCreation.metadata.title || t('release.placeholder-untitled-release')\n          }\n          contextValues={{\n            disabled: true, // disable the chip context menu, this one is in creation\n            documentId: displayed?._id || '',\n            menuReleaseId: filteredReleases.inCreation._id,\n            releases: filteredReleases.notCurrentReleases,\n            releasesLoading: loading,\n            documentType,\n            fromRelease: getReleaseIdFromReleaseDocumentId(filteredReleases.inCreation._id),\n            releaseState: filteredReleases.inCreation.state,\n            isVersion: true,\n          }}\n        />\n      )}\n\n      {displayed &&\n        filteredReleases.currentReleases?.map((release) => (\n          <VersionChip\n            key={release._id}\n            tooltipContent={<TooltipContent release={release} />}\n            {...getReleaseChipState(release)}\n            onClick={handlePerspectiveChange(getReleaseIdFromReleaseDocumentId(release._id))}\n            text={release.metadata.title || t('release.placeholder-untitled-release')}\n            tone={getReleaseTone(release)}\n            locked={isReleaseScheduledOrScheduling(release)}\n            contextValues={{\n              documentId: displayed?._id || '',\n              menuReleaseId: release._id,\n              releases: filteredReleases.notCurrentReleases,\n              releasesLoading: loading,\n              documentType: documentType,\n              fromRelease: getReleaseIdFromReleaseDocumentId(release._id),\n              releaseState: release.state,\n              isVersion: true,\n            }}\n          />\n        ))}\n    </>\n  )\n})\n","import {ArrowLeftIcon, CloseIcon, SplitVerticalIcon} from '@sanity/icons'\nimport {Box, Card, Flex} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {getTheme_v2, rgba} from '@sanity/ui/theme'\nimport {\n  type ForwardedRef,\n  forwardRef,\n  memo,\n  useCallback,\n  useDeferredValue,\n  useMemo,\n  useState,\n} from 'react'\nimport {type DocumentActionDescription, useFieldActions, useTranslation} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../../../ui-components'\nimport {\n  PaneContextMenuButton,\n  PaneHeader,\n  PaneHeaderActionButton,\n  RenderActionCollectionState,\n  usePane,\n  usePaneRouter,\n} from '../../../../components'\nimport {type _PaneMenuNode} from '../../../../components/pane/types'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../../../menuNodes'\nimport {type PaneMenuItem} from '../../../../types'\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {ActionDialogWrapper, ActionMenuListItem} from '../../statusBar/ActionMenuButton'\nimport {isRestoreAction} from '../../statusBar/DocumentStatusBarActions'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\nimport {DocumentPerspectiveList} from './perspective/DocumentPerspectiveList'\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface DocumentPanelHeaderProps {\n  menuItems: PaneMenuItem[]\n}\n\nconst HorizontalScroller = styled(Card)((props) => {\n  const theme = getTheme_v2(props.theme)\n\n  return css`\n    scrollbar-width: none;\n    z-index: 1;\n    flex: 1;\n    position: relative;\n    > div {\n      &::-webkit-scrollbar {\n        width: 0;\n        height: 0;\n      }\n    }\n\n    &::after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      width: ${theme.space[3]}px;\n      background: linear-gradient(to right, ${rgba(theme.color.bg, 0)}, var(--card-bg-color));\n    }\n  `\n})\n\nexport const DocumentPanelHeader = memo(\n  forwardRef(function DocumentPanelHeader(\n    _props: DocumentPanelHeaderProps,\n    ref: ForwardedRef<HTMLDivElement>,\n  ) {\n    const {menuItems} = _props\n    const {\n      actions: allActions,\n      editState,\n      onMenuAction,\n      isInitialValueLoading,\n      onPaneClose,\n      onPaneSplit,\n      menuItemGroups,\n      schemaType,\n      connectionState,\n      views,\n      unstable_languageFilter,\n    } = useDocumentPane()\n    const {features} = useStructureTool()\n    const {index, BackLink, hasGroupSiblings} = usePaneRouter()\n    const {actions: fieldActions} = useFieldActions()\n    const [referenceElement, setReferenceElement] = useState<HTMLElement | null>(null)\n\n    // The restore action has a dedicated place in the UI; it's only visible when the user is\n    // viewing a different document revision. It must be omitted from this collection.\n    const actions = useMemo(\n      () => (allActions ?? []).filter((action) => !isRestoreAction(action)),\n      [allActions],\n    )\n\n    const menuNodes = useMemo(\n      () =>\n        resolveMenuNodes({actionHandler: onMenuAction, fieldActions, menuItems, menuItemGroups}),\n      [onMenuAction, fieldActions, menuItemGroups, menuItems],\n    )\n\n    const menuButtonNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n    const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n    const showTabs = views.length > 1\n\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    // there are three kinds of buttons possible:\n    //\n    // 1. split pane - creates a new split pane\n    // 2. close split pane — closes the current split pane\n    // 3. close pane group — closes the current pane group\n\n    // show the split pane button if they're enabled and there is more than one\n    // view available to use to create a split view\n    const showSplitPaneButton = features.splitViews && onPaneSplit && views.length > 1\n\n    // show the split pane button close button if the split button is showing\n    // and there is more than one split pane open (aka has-siblings)\n    const showSplitPaneCloseButton = showSplitPaneButton && hasGroupSiblings\n\n    // show the back button if both the feature is enabled and the current pane\n    // is not the first\n    const showBackButton = features.backButton && index > 0\n\n    // show the pane group close button if the `showSplitPaneCloseButton` is\n    // _not_ showing (the split pane button replaces the group close button)\n    // and if the back button is not showing (the back button and the close\n    // button do the same thing and shouldn't be shown at the same time)\n    // and if a BackLink component was provided\n    const showPaneGroupCloseButton = !showSplitPaneCloseButton && !showBackButton && !!BackLink\n\n    const {t} = useTranslation(structureLocaleNamespace)\n\n    const renderPaneActions = useCallback<\n      (props: {states: DocumentActionDescription[]}) => React.ReactNode\n    >(\n      ({states}) => (\n        <DocumentPanelHeaderActionDialogDeferred\n          contextMenuNodes={contextMenuNodes}\n          setReferenceElement={setReferenceElement}\n          referenceElement={referenceElement}\n          states={states}\n        />\n      ),\n      [contextMenuNodes, referenceElement],\n    )\n\n    const title = useMemo(() => <DocumentHeaderTitle />, [])\n    const backButton = useMemo(\n      () =>\n        showBackButton && (\n          <Button\n            as={BackLink}\n            data-as=\"a\"\n            icon={ArrowLeftIcon}\n            mode=\"bleed\"\n            tooltipProps={{content: t('pane-header.back-button.text')}}\n          />\n        ),\n      [BackLink, showBackButton, t],\n    )\n    const renderedActions = useMemo(\n      () => (\n        <Flex align=\"center\" gap={1}>\n          {unstable_languageFilter.length > 0 && (\n            <>\n              {unstable_languageFilter.map((LanguageFilterComponent, idx) => {\n                return (\n                  <LanguageFilterComponent\n                    // eslint-disable-next-line react/no-array-index-key\n                    key={`language-filter-${idx}`}\n                    schemaType={schemaType}\n                  />\n                )\n              })}\n            </>\n          )}\n\n          {menuButtonNodes.map((item) => (\n            <PaneHeaderActionButton key={item.key} node={item} />\n          ))}\n          {editState && (\n            <RenderActionCollectionState\n              actions={actions}\n              actionProps={{...editState, initialValueResolved: !isInitialValueLoading}}\n              group=\"paneActions\"\n            >\n              {renderPaneActions}\n            </RenderActionCollectionState>\n          )}\n\n          {showSplitPaneButton && (\n            <Button\n              aria-label={t('buttons.split-pane-button.aria-label')}\n              icon={SplitVerticalIcon}\n              key=\"split-pane-button\"\n              mode=\"bleed\"\n              onClick={onPaneSplit}\n              tooltipProps={{content: t('buttons.split-pane-button.tooltip')}}\n            />\n          )}\n\n          {showSplitPaneCloseButton && (\n            <Button\n              icon={CloseIcon}\n              key=\"close-view-button\"\n              mode=\"bleed\"\n              onClick={onPaneClose}\n              tooltipProps={{content: t('buttons.split-pane-close-button.title')}}\n            />\n          )}\n\n          {showPaneGroupCloseButton && (\n            <Button\n              icon={CloseIcon}\n              key=\"close-view-button\"\n              mode=\"bleed\"\n              tooltipProps={{content: t('buttons.split-pane-close-group-button.title')}}\n              as={BackLink}\n            />\n          )}\n        </Flex>\n      ),\n      [\n        BackLink,\n        actions,\n        editState,\n        isInitialValueLoading,\n        menuButtonNodes,\n        onPaneClose,\n        onPaneSplit,\n        renderPaneActions,\n        schemaType,\n        showPaneGroupCloseButton,\n        showSplitPaneButton,\n        showSplitPaneCloseButton,\n        t,\n        unstable_languageFilter,\n      ],\n    )\n\n    return (\n      <TooltipDelayGroupProvider>\n        {collapsed ? (\n          <PaneHeader\n            border\n            ref={ref}\n            loading={connectionState === 'connecting' && !editState?.draft && !editState?.published}\n            title={title}\n            tabIndex={tabIndex}\n            backButton={backButton}\n          />\n        ) : (\n          <Card hidden={collapsed} style={{lineHeight: 0}} borderBottom>\n            <Flex gap={3} paddingY={3}>\n              <HorizontalScroller>\n                <Flex\n                  flex={1}\n                  gap={1}\n                  overflow=\"auto\"\n                  paddingX={3}\n                  data-testid=\"document-perspective-list\"\n                >\n                  <DocumentPerspectiveList />\n                </Flex>\n              </HorizontalScroller>\n\n              <Box flex=\"none\" paddingRight={3}>\n                {renderedActions}\n              </Box>\n            </Flex>\n          </Card>\n        )}\n      </TooltipDelayGroupProvider>\n    )\n  }),\n)\n\nconst DocumentPanelHeaderActionDialogDeferred = memo(\n  function DocumentPanelHeaderActionDialogDeferred(props: {\n    states: DocumentActionDescription[]\n    setReferenceElement: React.Dispatch<React.SetStateAction<HTMLElement | null>>\n    referenceElement: HTMLElement | null\n    contextMenuNodes: _PaneMenuNode[]\n  }) {\n    const {setReferenceElement, referenceElement, contextMenuNodes} = props\n    /**\n     * The purpose of this component is to allow deferring the rendering of document action hook states if the main thread becomes very busy.\n     * The `useDeferredValue` doesn't have an effect unless it's used to delay rendering a component that has `React.memo` to prevent unnecessary re-renders.\n     */\n    const states = useDeferredValue(props.states)\n\n    return (\n      <DocumentPanelHeaderActionDialog\n        setReferenceElement={setReferenceElement}\n        referenceElement={referenceElement}\n        contextMenuNodes={contextMenuNodes}\n        states={states}\n      />\n    )\n  },\n)\n\nconst DocumentPanelHeaderActionDialog = memo(function DocumentPanelHeaderActionDialog(props: {\n  states: DocumentActionDescription[]\n  setReferenceElement: React.Dispatch<React.SetStateAction<HTMLElement | null>>\n  referenceElement: HTMLElement | null\n  contextMenuNodes: _PaneMenuNode[]\n}) {\n  const {states, setReferenceElement, contextMenuNodes, referenceElement} = props\n\n  const renderActionDialog = useCallback<\n    ({handleAction}: {handleAction: (idx: number) => void}) => React.ReactNode\n  >(\n    ({handleAction}) => (\n      <div ref={setReferenceElement}>\n        <PaneContextMenuButton\n          nodes={contextMenuNodes}\n          key=\"context-menu\"\n          actionsNodes={\n            states.length > 0\n              ? states.map((actionState, actionIndex) => (\n                  <ActionMenuListItem\n                    key={actionState.label}\n                    actionState={actionState}\n                    disabled={Boolean(actionState.disabled)}\n                    index={actionIndex}\n                    onAction={handleAction}\n                  />\n                ))\n              : undefined\n          }\n        />\n      </div>\n    ),\n    [contextMenuNodes, setReferenceElement, states],\n  )\n\n  return (\n    <ActionDialogWrapper actionStates={states} referenceElement={referenceElement}>\n      {renderActionDialog}\n    </ActionDialogWrapper>\n  )\n})\n","import {Button, type ButtonProps} from '../../../ui-components'\n\ninterface SpacerButtonProps {\n  size?: ButtonProps['size']\n}\n\n/**\n * This renders a visually hidden <Button> component that is still contributes\n * to document layout.\n *\n * It's used to simplify padding in Sanity UI components that contain buttons which\n * may not always be rendered.\n *\n * TODO: let's find a more elegant solve to this layout shift problem\n *\n * @internal\n */\nexport function SpacerButton({size}: SpacerButtonProps) {\n  return (\n    <Button\n      aria-hidden\n      disabled\n      size={size}\n      style={{\n        pointerEvents: 'none',\n        visibility: 'hidden',\n        width: 0,\n      }}\n      text=\"-\"\n    />\n  )\n}\n","import {Badge, type BadgeTone, Inline} from '@sanity/ui'\nimport {memo, useCallback, useDeferredValue} from 'react'\nimport {type DocumentBadgeDescription} from 'sanity'\n\nimport {Tooltip} from '../../../../ui-components'\nimport {RenderBadgeCollectionState} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface DocumentBadgesInnerProps {\n  states: DocumentBadgeDescription[]\n}\n\nconst BADGE_TONES: Record<string, BadgeTone | undefined> = {\n  primary: 'primary',\n  success: 'positive',\n  warning: 'caution',\n  danger: 'critical',\n}\n\nconst DocumentBadgesInner = memo(function DocumentBadgesInner({states}: DocumentBadgesInnerProps) {\n  if (states.length === 0) {\n    return null\n  }\n  return (\n    <Inline space={1}>\n      {states.map((badge, index) => (\n        <Tooltip\n          content={badge.title}\n          disabled={!badge.title}\n          key={`${badge.label}-${index}`}\n          placement=\"top\"\n          portal\n        >\n          <Badge\n            fontSize={1}\n            mode=\"outline\"\n            paddingX={2}\n            paddingY={1}\n            radius={4}\n            tone={badge.color ? BADGE_TONES[badge.color] : undefined}\n            style={{whiteSpace: 'nowrap'}}\n          >\n            {badge.label}\n          </Badge>\n        </Tooltip>\n      ))}\n    </Inline>\n  )\n})\n\nconst DocumentBadgesDeferred = memo(function DocumentBadgesDeferred(\n  props: DocumentBadgesInnerProps,\n) {\n  /**\n   * The purpose of this component is to allow deferring the rendering of document action hook states if the main thread becomes very busy.\n   * The `useDeferredValue` doesn't have an effect unless it's used to delay rendering a component that has `React.memo` to prevent unnecessary re-renders.\n   */\n  const states = useDeferredValue(props.states)\n  return <DocumentBadgesInner states={states} />\n})\n\nexport function DocumentBadges() {\n  const {badges, editState} = useDocumentPane()\n\n  const renderDocumentBadges = useCallback<\n    (props: {states: DocumentBadgeDescription[]}) => React.ReactNode\n  >(({states}) => <DocumentBadgesDeferred states={states} />, [])\n\n  if (!editState || !badges) return null\n\n  return (\n    <RenderBadgeCollectionState badges={badges} badgeProps={editState}>\n      {renderDocumentBadges}\n    </RenderBadgeCollectionState>\n  )\n}\n","import {\n  AddIcon,\n  CloseIcon,\n  EditIcon,\n  type IconComponent,\n  PublishIcon,\n  TrashIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\n\nexport const TIMELINE_ICON_COMPONENTS: {[key: string]: IconComponent | undefined} = {\n  create: AddIcon,\n  delete: TrashIcon,\n  discardDraft: CloseIcon,\n  initial: AddIcon,\n  editDraft: EditIcon,\n  editLive: EditIcon,\n  publish: PublishIcon,\n  unpublish: UnpublishIcon,\n}\n","import {type IconComponent} from '@sanity/icons'\nimport {type ChunkType} from 'sanity'\n\nimport {TIMELINE_ICON_COMPONENTS} from './constants'\n\nexport function getTimelineEventIconComponent(type: ChunkType): IconComponent | undefined {\n  return TIMELINE_ICON_COMPONENTS[type]\n}\n","import {ChevronLeftIcon} from '@sanity/icons'\nimport {type MouseEvent, useCallback} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {TIMELINE_LIST_WRAPPER_ID} from './timeline'\n\n/**\n * This is a hack to force the scrollbar to not appear when the list is expanding,\n * if we don't do this the scrollbar will appear for a brief moment when the list is expanding and then disappear\n * when the list is fully expanded.\n */\nfunction hideScrollbarOnExpand(isExpanded: boolean) {\n  // Do nothing if the list is already expanded\n  if (isExpanded) return\n\n  const listWrapper = document.getElementById(TIMELINE_LIST_WRAPPER_ID)\n\n  if (listWrapper) {\n    const firstChildren = listWrapper.children[0] as HTMLElement\n    const hasScrollbar = firstChildren.scrollHeight > firstChildren.clientHeight\n    if (!hasScrollbar) {\n      //\n      const currentStyle = getComputedStyle(firstChildren).overflowY\n      // Add overflow hidden to the listWrapper to avoid the scrollbar to appear when expanding\n      firstChildren.style.overflowY = 'hidden'\n      setTimeout(() => {\n        // Reset the overflow style after the list is expanded\n        firstChildren.style.overflowY = currentStyle\n      }, 0)\n    }\n  }\n}\n\nconst FlipIcon = styled(ChevronLeftIcon)`\n  transition: transform 200ms;\n  &[data-expanded='true'] {\n    transform: rotate(-90deg);\n  }\n`\n\nexport function ExpandableTimelineItemButton({\n  isExpanded,\n  onExpand,\n}: {\n  isExpanded: boolean\n  onExpand: () => void\n}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleExpandClick = useCallback(\n    (e: MouseEvent<HTMLButtonElement>) => {\n      e.stopPropagation()\n      hideScrollbarOnExpand(isExpanded)\n      onExpand()\n    },\n    [onExpand, isExpanded],\n  )\n\n  return (\n    <Button\n      mode=\"bleed\"\n      icon={<FlipIcon data-expanded={isExpanded} />}\n      tooltipProps={{\n        content: isExpanded\n          ? t('timeline-item.menu.action-collapse')\n          : t('timeline-item.menu.action-expand'),\n      }}\n      onClick={handleExpandClick}\n    />\n  )\n}\n","import {Box, Flex, Stack} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const StackWrapper = styled(Stack)`\n  max-width: 200px;\n`\n\nexport const ListWrapper = styled(Flex)<{$maxHeight: string}>`\n  max-height: ${(props) => props.$maxHeight};\n  min-width: 244px;\n`\n\nexport const Root = styled(Box)<{$visible?: boolean}>(({$visible}) => {\n  return css`\n    opacity: 0;\n    pointer-events: none;\n    transition: opacity 0.2s;\n\n    ${$visible &&\n    css`\n      opacity: 1;\n      pointer-events: auto;\n    `}\n  `\n})\n","import {type ChunkType, type StudioLocaleResourceKeys} from 'sanity'\n\n/**\n * Maps from a chunk type to an i18n key for the operation\n *\n * @internal\n */\nexport const TIMELINE_ITEM_I18N_KEY_MAPPING: Record<ChunkType, StudioLocaleResourceKeys> = {\n  initial: 'timeline.operation.created-initial',\n  create: 'timeline.operation.created',\n  publish: 'timeline.operation.published',\n  editLive: 'timeline.operation.edited-live',\n  editDraft: 'timeline.operation.edited-draft',\n  unpublish: 'timeline.operation.unpublished',\n  discardDraft: 'timeline.operation.draft-discarded',\n  delete: 'timeline.operation.deleted',\n}\n","import {type AvatarSize, AvatarStack} from '@sanity/ui'\nimport {UserAvatar} from 'sanity'\n\ninterface UserAvatarStackProps {\n  maxLength?: number\n  userIds: string[]\n  size?: AvatarSize\n  withTooltip?: boolean\n}\n\nexport function UserAvatarStack({\n  maxLength,\n  userIds,\n  size,\n  withTooltip = true,\n}: UserAvatarStackProps) {\n  return (\n    <AvatarStack maxLength={maxLength} size={size}>\n      {userIds.map((userId) => (\n        <UserAvatar key={userId} user={userId} withTooltip={withTooltip} />\n      ))}\n    </AvatarStack>\n  )\n}\n","import {Box, Card, Flex, Skeleton, Stack, Text} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {getTheme_v2, type ThemeColorAvatarColorKey} from '@sanity/ui/theme'\nimport {type MouseEvent, useCallback, useMemo} from 'react'\nimport {\n  AvatarSkeleton,\n  type ChunkType,\n  type RelativeTimeOptions,\n  useDateTimeFormat,\n  UserAvatar,\n  useRelativeTime,\n  useTranslation,\n  useUser,\n} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Tooltip} from '../../../../ui-components'\nimport {getTimelineEventIconComponent} from './helpers'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING} from './timelineI18n'\nimport {UserAvatarStack} from './userAvatarStack'\nimport {type ChunksWithCollapsedDrafts} from './utils'\n\nexport const IconBox = styled(Flex)<{$color: ThemeColorAvatarColorKey}>((props) => {\n  const theme = getTheme_v2(props.theme)\n  const color = props.$color\n\n  return css`\n    --card-icon-color: ${theme.color.avatar[color].fg};\n    background-color: ${theme.color.avatar[color].bg};\n    box-shadow: 0 0 0 1px var(--card-bg-color);\n\n    position: absolute;\n    width: ${theme.avatar.sizes[0].size}px;\n    height: ${theme.avatar.sizes[0].size}px;\n    right: -3px;\n    bottom: -3px;\n    border-radius: 50%;\n  `\n})\n\nconst TIMELINE_ITEM_EVENT_TONE: Record<ChunkType | 'withinSelection', ThemeColorAvatarColorKey> = {\n  initial: 'blue',\n  create: 'blue',\n  publish: 'green',\n  editLive: 'green',\n  editDraft: 'yellow',\n  unpublish: 'orange',\n  discardDraft: 'orange',\n  delete: 'red',\n  withinSelection: 'magenta',\n}\n\nexport interface TimelineItemProps {\n  chunk: ChunksWithCollapsedDrafts\n  isSelected: boolean\n  onSelect: (chunk: ChunksWithCollapsedDrafts) => void\n  collaborators?: Set<string>\n  optionsMenu?: React.ReactNode\n}\n\nconst RELATIVE_TIME_OPTIONS: RelativeTimeOptions = {\n  minimal: true,\n  useTemporalPhrase: true,\n}\n\nconst NameSkeleton = styled(Skeleton)((props) => {\n  const theme = getTheme_v2(props.theme)\n  return css`\n    width: 6ch;\n    height: ${theme.font.text.sizes[0].lineHeight}px;\n  `\n})\n\nconst UserLine = ({userId}: {userId: string}) => {\n  const [user, loading] = useUser(userId)\n\n  return (\n    <Flex align=\"center\" gap={2} key={userId} padding={1}>\n      <Box>{loading || !user ? <AvatarSkeleton animated /> : <UserAvatar user={user} />}</Box>\n      <Box>\n        {loading || !user?.displayName ? (\n          <Text size={1}>\n            <NameSkeleton animated />\n          </Text>\n        ) : (\n          <Text muted size={1}>\n            {user.displayName}\n          </Text>\n        )}\n      </Box>\n    </Flex>\n  )\n}\nconst TooltipContent = ({collaborators}: {collaborators: string[]}) => {\n  const {t} = useTranslation('studio')\n  return (\n    <Stack paddingBottom={1}>\n      <Box padding={1} paddingBottom={2}>\n        <Text size={1} weight=\"medium\">\n          {t('timeline.changes.title')}\n        </Text>\n      </Box>\n      {collaborators.map((userId) => (\n        <UserLine key={userId} userId={userId} />\n      ))}\n    </Stack>\n  )\n}\nexport function TimelineItem({\n  chunk,\n  isSelected,\n  onSelect,\n  collaborators,\n  optionsMenu,\n}: TimelineItemProps) {\n  const {t} = useTranslation('studio')\n  const {type, endTimestamp: timestamp} = chunk\n  const IconComponent = getTimelineEventIconComponent(type)\n  const authorUserIds = Array.from(chunk.authors)\n  const collaboratorsUsersIds = collaborators ? Array.from(collaborators) : []\n  const isSelectable = type !== 'delete'\n  const dateFormat = useDateTimeFormat({dateStyle: 'medium', timeStyle: 'short'})\n  const date = new Date(timestamp)\n\n  const updatedTimeAgo = useRelativeTime(date || '', RELATIVE_TIME_OPTIONS)\n\n  const formattedTimestamp = useMemo(() => {\n    const parsedDate = new Date(timestamp)\n    const formattedDate = dateFormat.format(parsedDate)\n\n    return formattedDate\n  }, [timestamp, dateFormat])\n\n  const handleClick = useCallback(\n    (evt: MouseEvent<HTMLDivElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (isSelectable) {\n        onSelect(chunk)\n      }\n    },\n    [onSelect, chunk, isSelectable],\n  )\n\n  return (\n    <Flex align=\"center\" gap={1}>\n      <Card\n        as=\"button\"\n        onClick={handleClick}\n        padding={2}\n        pressed={isSelected}\n        radius={2}\n        data-ui=\"timelineItem\"\n        data-testid=\"timeline-item-button\"\n        data-chunk-id={chunk.id}\n      >\n        <Flex align=\"center\" gap={3}>\n          <div style={{position: 'relative'}}>\n            <UserAvatarStack maxLength={3} userIds={authorUserIds} size={2} />\n            <IconBox align=\"center\" justify=\"center\" $color={TIMELINE_ITEM_EVENT_TONE[type]}>\n              <Text size={0}>{IconComponent && <IconComponent />}</Text>\n            </IconBox>\n          </div>\n          <Stack space={2}>\n            <Text size={1} weight=\"medium\">\n              {t(TIMELINE_ITEM_I18N_KEY_MAPPING[type]) || <code>{type}</code>}\n            </Text>\n\n            <Text as=\"time\" size={1} muted dateTime={timestamp} title={formattedTimestamp}>\n              {updatedTimeAgo}\n            </Text>\n          </Stack>\n\n          {collaboratorsUsersIds.length > 0 && (\n            <Flex flex={1} justify=\"flex-end\" align=\"center\">\n              <Tooltip\n                placement=\"top\"\n                content={<TooltipContent collaborators={collaboratorsUsersIds} />}\n                portal\n              >\n                <Box paddingLeft={2} paddingY={2}>\n                  <UserAvatarStack\n                    maxLength={3}\n                    userIds={collaboratorsUsersIds}\n                    size={0}\n                    withTooltip={false}\n                  />\n                </Box>\n              </Tooltip>\n            </Flex>\n          )}\n        </Flex>\n      </Card>\n      {optionsMenu}\n    </Flex>\n  )\n}\n","import {type Chunk, type ChunkType} from 'sanity'\n\nexport type NonPublishChunk = Omit<Chunk, 'type'> & {\n  type: Exclude<ChunkType, 'publish'>\n  parentId?: string\n}\n\nexport type PublishChunk = Omit<Chunk, 'type'> & {\n  type: 'publish'\n  children: string[]\n  collaborators: Set<string>\n}\n\nexport const isNonPublishChunk = (chunk: Chunk): chunk is NonPublishChunk =>\n  chunk.type !== 'publish'\n\nexport const isPublishChunk = (chunk: Chunk): chunk is PublishChunk => chunk.type === 'publish'\n\n/**\n * searches for the previous publish action in the list of chunks\n * e.g. chunks = [publish, edit, publish, edit, edit] it needs to return the second publish action\n * e.g. chunks = [publish, edit, delete, edit, edit] it returns undefined\n */\n\nfunction getPreviousPublishAction(chunks: Chunk[]) {\n  let previousPublish: PublishChunk | null = null\n  // We need to iterate from the end to the start of the list\n  for (let index = chunks.length - 1; index >= 0; index--) {\n    const chunk = chunks[index]\n    if (isPublishChunk(chunk)) {\n      previousPublish = chunk\n      break\n    }\n    if (chunk.type === 'editDraft') {\n      continue\n    } else break\n  }\n\n  return previousPublish\n}\nexport type ChunksWithCollapsedDrafts = NonPublishChunk | PublishChunk\n\n/**\n * Takes an array of chunks and adds them metadata necessary for the timeline view.\n * for draft chunks, it will add the parentId of the published chunk if this draft action is now published\n * for published, it will add the children array and the collaborators array\n */\nexport function addChunksMetadata(chunks: Chunk[]): ChunksWithCollapsedDrafts[] {\n  const result: ChunksWithCollapsedDrafts[] = []\n\n  for (const chunk of chunks) {\n    if (isPublishChunk(chunk)) {\n      result.push({\n        ...chunk,\n        type: 'publish',\n        children: [],\n        collaborators: new Set(), // Initialize the collaborators array\n      })\n      continue\n    }\n    if (isNonPublishChunk(chunk)) {\n      const previousPublish = getPreviousPublishAction(result)\n      if (chunk.type === 'editDraft' && previousPublish?.type === 'publish') {\n        Array.from(chunk.authors).forEach((id) => {\n          previousPublish.collaborators.add(id)\n        })\n        previousPublish.children.push(chunk.id)\n        result.push({\n          ...chunk,\n          parentId: previousPublish.id,\n        })\n        continue\n      }\n    }\n    if (isNonPublishChunk(chunk)) {\n      result.push(chunk)\n    }\n  }\n\n  return result\n}\n","import {Box, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type Chunk,\n  CommandList,\n  type CommandListRenderItemCallback,\n  LoadingBlock,\n  useTranslation,\n} from 'sanity'\n\nimport {ExpandableTimelineItemButton} from './expandableTimelineItemButton'\nimport {ListWrapper, Root, StackWrapper} from './timeline.styled'\nimport {TimelineItem} from './timelineItem'\nimport {\n  addChunksMetadata,\n  type ChunksWithCollapsedDrafts,\n  isNonPublishChunk,\n  isPublishChunk,\n} from './utils'\n\ninterface TimelineProps {\n  chunks: Chunk[]\n  hasMoreChunks: boolean | null\n  lastChunk?: Chunk | null\n  onLoadMore: () => void\n  onSelect: (chunk: Chunk) => void\n  /**\n   * The list needs a predefined max height for the scroller to work.\n   */\n  listMaxHeight?: string\n}\n\nexport const TIMELINE_LIST_WRAPPER_ID = 'timeline-list-wrapper'\n\nexport const Timeline = ({\n  chunks,\n  hasMoreChunks,\n  lastChunk: selectedChunk,\n  onLoadMore,\n  onSelect,\n  listMaxHeight = 'calc(100vh - 280px)',\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n  const {t} = useTranslation('studio')\n  const selectedChunkId = selectedChunk?.id\n  const chunksWithMetadata = useMemo(() => addChunksMetadata(chunks), [chunks])\n\n  const [expandedParents, setExpandedParents] = useState<Set<string>>(() => {\n    if (selectedChunkId) {\n      // If the selected chunk is a draft, we need to expand its parent\n      const selected = chunksWithMetadata.find((chunk) => chunk.id === selectedChunkId)\n      if (selected && isNonPublishChunk(selected) && selected.parentId) {\n        return new Set([selected.parentId])\n      }\n    }\n    return new Set()\n  })\n\n  useEffect(() => {\n    // This effect ensures that when we reload the timeline with a selected draft, we expand its parent.\n    if (selectedChunkId) {\n      const selected = chunksWithMetadata.find((chunk) => chunk.id === selectedChunkId)\n      if (selected && isNonPublishChunk(selected) && selected.parentId) {\n        const parentId = selected.parentId\n        setExpandedParents((prev) => {\n          if (prev.has(parentId)) return prev\n          const next = new Set(prev)\n          next.add(parentId)\n          return next\n        })\n      }\n    }\n  }, [chunksWithMetadata, selectedChunkId])\n\n  const filteredChunks = useMemo(() => {\n    return chunksWithMetadata.filter((chunk) => {\n      if (isPublishChunk(chunk) || !chunk.parentId) return true\n      // If the chunk has a parent id keep it hidden until the parent is expanded.\n      return expandedParents.has(chunk.parentId)\n    })\n  }, [chunksWithMetadata, expandedParents])\n\n  useEffect(() => {\n    // This effect ensures that we load more chunks if the list is not long enough.\n    // This could happen if a parent chunk has multiple drafts, so you could end with a list of 50 transactions but only\n    // 1 parent chunk, the publish, which squashed all the changes.\n    // In that case, users will see the loading block at the bottom, but nothing will really be happening. Because they haven't reach the end of the list.\n    if (filteredChunks.length < 16 && hasMoreChunks) {\n      onLoadMore()\n    }\n  }, [filteredChunks, hasMoreChunks, onLoadMore])\n\n  const handleExpandParent = useCallback(\n    (parentId: string) => () =>\n      setExpandedParents((prev) => {\n        const next = new Set(prev)\n\n        if (prev.has(parentId)) next.delete(parentId)\n        else next.add(parentId)\n\n        return next\n      }),\n    [],\n  )\n\n  const selectedIndex = useMemo(\n    () =>\n      selectedChunkId ? filteredChunks.findIndex((chunk) => chunk.id === selectedChunkId) : -1,\n    [selectedChunkId, filteredChunks],\n  )\n  const handleSelectChunk = useCallback(\n    (chunk: ChunksWithCollapsedDrafts) => {\n      const timelineChunk = chunks.find((c) => c.id === chunk.id)\n      if (timelineChunk) onSelect(timelineChunk)\n      else {\n        console.error('TimelineItem: chunk not found')\n        onSelect(chunk)\n      }\n    },\n    [chunks, onSelect],\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<(typeof filteredChunks)[number]>>(\n    (chunk, {activeIndex}) => {\n      const isFirst = activeIndex === 0\n\n      return (\n        <Box\n          paddingBottom={1}\n          paddingTop={isFirst ? 1 : 0}\n          paddingRight={1}\n          paddingLeft={isNonPublishChunk(chunk) && chunk.parentId ? 4 : 1}\n        >\n          <TimelineItem\n            chunk={chunk}\n            isSelected={selectedChunkId === chunk.id}\n            onSelect={handleSelectChunk}\n            collaborators={isPublishChunk(chunk) ? chunk.collaborators : undefined}\n            optionsMenu={\n              isPublishChunk(chunk) && chunk.children.length > 0 ? (\n                <ExpandableTimelineItemButton\n                  isExpanded={expandedParents.has(chunk.id)}\n                  onExpand={handleExpandParent(chunk.id)}\n                />\n              ) : null\n            }\n          />\n          {activeIndex === filteredChunks.length - 1 && hasMoreChunks && <LoadingBlock />}\n        </Box>\n      )\n    },\n    [\n      expandedParents,\n      filteredChunks.length,\n      handleExpandParent,\n      handleSelectChunk,\n      hasMoreChunks,\n      selectedChunkId,\n    ],\n  )\n\n  useEffect(() => setMounted(true), [])\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {filteredChunks.length === 0 && (\n        <StackWrapper padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </StackWrapper>\n      )}\n\n      {filteredChunks.length > 0 && (\n        <ListWrapper direction=\"column\" $maxHeight={listMaxHeight} id={TIMELINE_LIST_WRAPPER_ID}>\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={t('timeline.list.aria-label')}\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={57}\n            items={filteredChunks}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      )}\n    </Root>\n  )\n}\n\nTimeline.displayName = 'Timeline'\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Flex, Stack} from '@sanity/ui'\nimport {TextWithTone, useTranslation} from 'sanity'\n\nexport function TimelineError({versionError}: {versionError?: boolean}) {\n  const {t} = useTranslation('studio')\n\n  return (\n    <Flex align=\"flex-start\" gap={3} padding={4}>\n      <TextWithTone tone=\"critical\">\n        <ErrorOutlineIcon />\n      </TextWithTone>\n      <Stack space={4}>\n        <TextWithTone size={1} tone=\"critical\" weight=\"medium\">\n          {versionError\n            ? t('timeline.error.load-document-changes-version-title')\n            : t('timeline.error.load-document-changes-title')}\n        </TextWithTone>\n        <TextWithTone size={1} tone=\"critical\">\n          {versionError\n            ? t('timeline.error.load-document-changes-version-description')\n            : t('timeline.error.load-document-changes-description')}\n        </TextWithTone>\n      </Stack>\n    </Flex>\n  )\n}\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  Flex,\n  type Placement,\n  PortalProvider,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useToast,\n} from '@sanity/ui'\nimport {useCallback, useMemo, useState} from 'react'\nimport {type Chunk, useTimelineSelector, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Popover} from '../../../../ui-components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {Timeline} from './timeline'\nimport {TimelineError} from './TimelineError'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING} from './timelineI18n'\n\ninterface TimelineMenuProps {\n  chunk: Chunk | null\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport const TIMELINE_MENU_PORTAL = 'timeline-menu'\n\nexport function TimelineMenu({chunk, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange, timelineError, ready, timelineStore} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popoverRef, setPopoverRef] = useState<HTMLElement | null>(null)\n\n  const toast = useToast()\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n\n  const {t} = useTranslation('studio')\n\n  const handleOpen = useCallback(() => {\n    setOpen(true)\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (open && (event.key === 'Escape' || event.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(open && handleClose, () => [button, popoverRef])\n\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForRev(revChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const selectSince = useCallback(\n    (sinceChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForSince(sinceChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading) {\n      timelineStore?.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  const content = useMemo(() => {\n    if (timelineError) return <TimelineError />\n\n    if (mode === 'rev') {\n      return (\n        <Timeline\n          chunks={chunks}\n          hasMoreChunks={hasMoreChunks}\n          lastChunk={realRevChunk}\n          onLoadMore={handleLoadMore}\n          onSelect={selectRev}\n        />\n      )\n    }\n\n    const filteredChunks = realRevChunk\n      ? chunks.filter((c) => c.index < realRevChunk.index)\n      : chunks\n    return (\n      <Timeline\n        chunks={filteredChunks}\n        hasMoreChunks={hasMoreChunks}\n        lastChunk={sinceTime}\n        onLoadMore={handleLoadMore}\n        onSelect={selectSince}\n      />\n    )\n  }, [\n    chunks,\n    handleLoadMore,\n    hasMoreChunks,\n    mode,\n    realRevChunk,\n    selectRev,\n    selectSince,\n    sinceTime,\n    timelineError,\n  ])\n\n  const formatParams = {\n    timestamp: {dateStyle: 'medium', timeStyle: 'short'},\n  }\n\n  const revLabel = chunk\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[chunk.type], {\n        context: 'timestamp',\n        timestamp: new Date(chunk?.endTimestamp),\n        formatParams,\n      })\n    : t('timeline.latest-revision')\n\n  const sinceLabel = chunk\n    ? t('timeline.since', {\n        timestamp: new Date(chunk?.endTimestamp),\n        formatParams,\n      })\n    : t('timeline.since-version-missing')\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n\n  return (\n    <PortalProvider __unstable_elements={{[TIMELINE_MENU_PORTAL]: popoverRef}}>\n      <Root\n        data-testid=\"timeline-menu\"\n        constrainSize\n        content={open && content}\n        data-ui=\"versionMenu\"\n        open={open}\n        placement={placement}\n        matchReferenceWidth\n        portal\n        ref={setPopoverRef}\n      >\n        <Flex width={'fill'}>\n          <Button\n            data-testid={open ? 'timeline-menu-close-button' : 'timeline-menu-open-button'}\n            disabled={!ready}\n            mode=\"ghost\"\n            onClick={open ? handleClose : handleOpen}\n            ref={setButton}\n            selected={open}\n            width=\"fill\"\n            tooltipProps={null}\n            justify={'space-between'}\n            style={{\n              maxWidth: '100%',\n            }}\n            iconRight={ChevronDownIcon}\n            text={ready ? buttonLabel : t('timeline.loading-history')}\n          />\n        </Flex>\n      </Root>\n    </PortalProvider>\n  )\n}\n","import {motion} from 'framer-motion'\nimport {type ComponentProps} from 'react'\nimport {keyframes, styled} from 'styled-components'\n\nconst StyledMotionPath = styled(motion.path)`\n  transform-origin: center;\n`\n\ntype MotionCircleProps = Omit<ComponentProps<typeof motion.circle>, 'd'>\ntype MotionPathProps = Omit<ComponentProps<typeof motion.path>, 'd' | 'ref'>\n\nconst Circle = (props: MotionCircleProps) => (\n  <motion.circle fill=\"none\" r=\"8\" cx=\"12.5\" cy=\"12.5\" strokeWidth=\"1.2\" {...props} />\n)\nconst Arrows = (props: MotionPathProps) => (\n  <StyledMotionPath\n    fill=\"none\"\n    d=\"M14 17.5619L11.5 20.5L14.5 23.0619M11 7.43811L13.5 4.50001L10.5 1.93811\"\n    {...props}\n  />\n)\nconst Checkmark = (props: MotionPathProps) => (\n  <motion.path d=\"M9.5 12.1316L11.7414 14.5L16 10\" {...props} />\n)\n\nconst rotateAnimation = keyframes`\n  0% {\n    transform: rotate(0);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`\nconst RotateGroup = styled.g`\n  transform-origin: center;\n\n  &[data-rotate] {\n    animation: ${rotateAnimation} 1s ease-in-out infinite;\n  }\n`\n\nconst root = {\n  syncing: {\n    scale: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    scale: [1, 0.8, 1.2, 0.9, 1.1, 0.95, 1.05, 0.99, 1],\n    transition: {\n      duration: 0.5,\n      delay: 0.2,\n    },\n  },\n  changes: {transition: {duration: 0}},\n}\n\nconst circle = {\n  syncing: {\n    strokeDasharray: '0, 0, 23, 3, 23, 3',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    strokeDasharray: '0, 0, 23, 0, 23, 0',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    strokeDasharray: '0, 60, 23, 0, 23, 0',\n    strokeDashoffset: 0,\n    opacity: 0,\n    transition: {\n      duration: 0.5,\n    },\n  },\n}\n\nconst arrows = {\n  syncing: {\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    opacity: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    opacity: 0,\n  },\n}\n\nconst checkmark = {\n  syncing: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  saved: {\n    pathLength: 1,\n    transition: {\n      delay: 0.4,\n      duration: 0.3,\n    },\n  },\n  changes: {\n    pathLength: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n}\n\ninterface AnimatedStatusIconProps {\n  status?: 'changes' | 'saved' | 'syncing'\n}\n\nexport function AnimatedStatusIcon(props: AnimatedStatusIconProps) {\n  const {status} = props\n\n  if (!status) {\n    return null\n  }\n\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 25 25\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.2\"\n      data-sanity-icon=\"animated-status-icon\"\n    >\n      <motion.g variants={root} initial={status} animate={status}>\n        <RotateGroup data-rotate={status === 'changes' ? undefined : ''}>\n          <Arrows variants={arrows} initial={status} animate={status} />\n          <Circle variants={circle} initial={status} animate={status} />\n        </RotateGroup>\n        <Checkmark variants={checkmark} initial={status} animate={status} />\n      </motion.g>\n    </svg>\n  )\n}\n","import {type ButtonTone, Flex, Text} from '@sanity/ui'\nimport {TextWithTone, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {AnimatedStatusIcon} from './AnimatedStatusIcon'\n\ntype StatusType = 'saved' | 'syncing'\ninterface ReviewChangesButtonProps {\n  status?: StatusType\n}\n\nconst STATUS_DICTIONARY: Record<StatusType, {i18nKey: string; tone: ButtonTone}> = {\n  saved: {\n    i18nKey: 'status-bar.document-status-pulse.status.saved.text',\n    tone: 'positive',\n  },\n  syncing: {\n    i18nKey: 'status-bar.document-status-pulse.status.syncing.text',\n    tone: 'default',\n  },\n}\n\nexport const DocumentStatusPulse = (props: ReviewChangesButtonProps) => {\n  const {status} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (status !== 'saved' && status !== 'syncing') {\n    return null\n  }\n\n  const currentStatus = STATUS_DICTIONARY[status]\n\n  return (\n    <Flex align=\"center\" gap={2} data-testid=\"pane-footer-document-status-pulse\">\n      <TextWithTone size={1} tone={currentStatus.tone}>\n        <AnimatedStatusIcon status={status} />\n      </TextWithTone>\n\n      <Text muted size={1}>\n        {t(currentStatus.i18nKey)}\n      </Text>\n    </Flex>\n  )\n}\n","import {\n  Box,\n  // eslint-disable-next-line no-restricted-imports\n  Button,\n  Flex,\n  Skeleton,\n  Text,\n} from '@sanity/ui'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {useEffect, useLayoutEffect, useMemo, useState} from 'react'\nimport {\n  AvatarSkeleton,\n  isPublishedPerspective,\n  TIMELINE_ITEM_I18N_KEY_MAPPING,\n  useEvents,\n  usePerspective,\n  UserAvatar,\n  useRelativeTime,\n  useSource,\n  useSyncState,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\n\nimport {HISTORY_INSPECTOR_NAME} from '../constants'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING as TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY} from '../timeline'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentStatusPulse} from './DocumentStatusPulse'\n\nconst RELATIVE_TIME_OPTIONS = {\n  minimal: true,\n  useTemporalPhrase: true,\n} as const\n\nconst MotionButton = motion.create(Button)\nconst MotionBox = motion.create(Box)\n\nconst ButtonSkeleton = () => {\n  return (\n    <Flex align=\"center\" gap={3} paddingLeft={1} paddingRight={2} paddingY={2}>\n      <div style={{margin: -5}}>\n        <AvatarSkeleton $size={0} animated />\n      </div>\n      <Skeleton animated style={{width: '80px', height: '15px'}} radius={2} />\n    </Flex>\n  )\n}\n\nconst DocumentStatusButton = ({\n  author,\n  translationKey,\n  timestamp = '',\n}: {\n  author: string\n  translationKey: string\n  timestamp?: string\n}) => {\n  const {onHistoryOpen, inspector, onHistoryClose} = useDocumentPane()\n  const {t} = useTranslation()\n  const relativeTime = useRelativeTime(timestamp, RELATIVE_TIME_OPTIONS)\n\n  return (\n    <MotionButton\n      data-testid=\"pane-footer-document-status\"\n      animate={{opacity: 1}}\n      initial={{opacity: 0}}\n      exit={{opacity: 0}}\n      mode=\"bleed\"\n      onClick={inspector?.name === HISTORY_INSPECTOR_NAME ? onHistoryClose : onHistoryOpen}\n      padding={2}\n      muted\n    >\n      <Flex align=\"center\" flex=\"none\" gap={3}>\n        {author && (\n          <div style={{margin: -5}}>\n            <UserAvatar user={author} size={0} />\n          </div>\n        )}\n        <Text muted size={1}>\n          {t(translationKey)} {relativeTime}\n        </Text>\n      </Flex>\n    </MotionButton>\n  )\n}\n\nconst FallbackStatus = () => {\n  const {editState} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n\n  const status = useMemo(() => {\n    if (isPublishedPerspective(selectedPerspective) && editState?.published?._updatedAt) {\n      return {\n        translationKey: TIMELINE_ITEM_I18N_KEY_MAPPING.createDocumentVersion,\n        timestamp: editState.published._updatedAt,\n      }\n    }\n    if (editState?.version?._updatedAt) {\n      return {\n        translationKey:\n          editState?.version?._updatedAt === editState?.version?._createdAt\n            ? TIMELINE_ITEM_I18N_KEY_MAPPING.createDocumentVersion\n            : TIMELINE_ITEM_I18N_KEY_MAPPING.editDocumentVersion,\n        timestamp: editState.version._updatedAt,\n      }\n    }\n    if (editState?.draft?._updatedAt) {\n      return {\n        translationKey:\n          editState?.draft?._updatedAt === editState?.draft?._createdAt\n            ? TIMELINE_ITEM_I18N_KEY_MAPPING.createDocumentVersion\n            : TIMELINE_ITEM_I18N_KEY_MAPPING.editDocumentVersion,\n        timestamp: editState.draft._updatedAt,\n      }\n    }\n    return null\n  }, [\n    selectedPerspective,\n    editState?.published?._updatedAt,\n    editState?.version?._updatedAt,\n    editState?.version?._createdAt,\n    editState?.draft?._updatedAt,\n    editState?.draft?._createdAt,\n  ])\n  if (!status) {\n    return null\n  }\n  return (\n    <DocumentStatusButton\n      author=\"\"\n      translationKey={status.translationKey}\n      timestamp={status.timestamp}\n    />\n  )\n}\n\nconst EventsStatus = () => {\n  const {events, loading} = useEvents()\n  const event = events?.[0]\n\n  if (!event && loading) {\n    return <ButtonSkeleton />\n  }\n  if (!event) {\n    return <FallbackStatus />\n  }\n\n  return (\n    <DocumentStatusButton\n      author={event.author}\n      translationKey={TIMELINE_ITEM_I18N_KEY_MAPPING[event.type]}\n      timestamp={event.timestamp}\n    />\n  )\n}\n\nconst TimelineStatus = () => {\n  const {timelineStore} = useDocumentPane()\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const event = chunks?.[0]\n\n  if (!event && loading) {\n    return <ButtonSkeleton />\n  }\n  if (!event) {\n    return <FallbackStatus />\n  }\n\n  const author = Array.from(event.authors)[0]\n  return (\n    <DocumentStatusButton\n      author={author}\n      translationKey={TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY[event.type]}\n      timestamp={event.endTimestamp}\n    />\n  )\n}\n\nconst SYNCING_TIMEOUT = 1000\nconst SAVED_TIMEOUT = 3000\n\nexport function DocumentStatusLine() {\n  const {documentId, documentType, editState, value} = useDocumentPane()\n  const [status, setStatus] = useState<'saved' | 'syncing' | null>(null)\n  const source = useSource()\n  const eventsEnabled = source.beta?.eventsAPI?.documents\n\n  const syncState = useSyncState(documentId, documentType, editState?.release)\n\n  const lastUpdated = value?._updatedAt\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    // Schedule an update to set the status to 'saved' when status changed to 'syncing.\n    // We use `syncState.isSyncing` here to avoid the status being set to 'saved' when the document is syncing.\n    if (status === 'syncing' && !syncState.isSyncing) {\n      const timerId = setTimeout(() => setStatus('saved'), SYNCING_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n    // Schedule an update to clear the status when status changed to 'saved'\n    if (status === 'saved') {\n      const timerId = setTimeout(() => setStatus(null), SAVED_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n  }, [status, lastUpdated, syncState.isSyncing])\n\n  // Clear the status when documentId changes to make sure we don't show the wrong status when opening a new document\n  useLayoutEffect(() => {\n    setStatus(null)\n  }, [documentId])\n\n  // Set status to 'syncing' when lastUpdated changes and we go from not syncing to syncing\n  useLayoutEffect(() => {\n    if (syncState.isSyncing) {\n      setStatus('syncing')\n    }\n  }, [syncState.isSyncing, lastUpdated])\n\n  return (\n    <AnimatePresence>\n      {status ? (\n        <MotionBox\n          paddingLeft={2}\n          animate={{opacity: 1}}\n          initial={{opacity: 0}}\n          exit={{opacity: 0}}\n        >\n          <DocumentStatusPulse status={status || undefined} />\n        </MotionBox>\n      ) : (\n        <>{eventsEnabled ? <EventsStatus /> : <TimelineStatus />}</>\n      )}\n    </AnimatePresence>\n  )\n}\n","import {RestoreIcon} from '@sanity/icons'\nimport {Box, Flex, Text} from '@sanity/ui'\nimport {format} from 'date-fns'\nimport {Translate, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {useDocumentPane} from '../useDocumentPane'\n\nexport const StatusText = styled(Text)`\n  color: var(--card-muted-fg-color);\n\n  em {\n    color: var(--card-fg-color);\n    font-weight: 500;\n    font-style: normal;\n  }\n`\n\nexport function RevisionStatusLine(): React.JSX.Element {\n  const {displayed} = useDocumentPane()\n  const {t} = useTranslation()\n  const date = displayed?._updatedAt || displayed?._createdAt\n\n  const message = {\n    name: 'revision',\n    text: date ? (\n      <Translate\n        t={t}\n        i18nKey=\"document-status.revision-from\"\n        values={{\n          date: format(new Date(date), `MMM d, yyyy '@' pp`),\n        }}\n      />\n    ) : null,\n    tone: 'caution',\n  }\n\n  return (\n    <>\n      <Flex flex={1} gap={3} padding={2}>\n        <Box flex=\"none\">\n          <Text size={1}>\n            <RestoreIcon />\n          </Text>\n        </Box>\n        <Box flex={1}>\n          <StatusText size={1} textOverflow=\"ellipsis\">\n            {message.text}\n          </StatusText>\n        </Box>\n      </Flex>\n    </>\n  )\n}\n","import {useLayoutEffect} from 'react'\nimport {resizeObserver} from 'sanity'\n\nexport function useResizeObserver({\n  element,\n  onResize,\n}: {\n  element?: HTMLDivElement | null\n  onResize: (event: ResizeObserverEntry) => void\n}): void {\n  useLayoutEffect(() => {\n    if (element) {\n      resizeObserver.observe(element, onResize)\n    }\n\n    return () => {\n      if (element) {\n        resizeObserver.unobserve(element)\n      }\n    }\n  }, [element, onResize])\n}\n","import {Card, Flex} from '@sanity/ui'\nimport {motion} from 'framer-motion'\nimport {type Ref, useCallback, useMemo, useState} from 'react'\nimport {\n  type CreateLinkMetadata,\n  isPublishedPerspective,\n  isReleaseDocument,\n  isSanityCreateLinked,\n  usePerspective,\n  useSanityCreateConfig,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../components'\nimport {SpacerButton} from '../../../components/spacerButton'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {EMPTY_PARAMS} from '../constants'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {useDocumentTitle} from '../useDocumentTitle'\nimport {DocumentBadges} from './DocumentBadges'\nimport {DocumentStatusBarActions, HistoryStatusBarActions} from './DocumentStatusBarActions'\nimport {DocumentStatusLine} from './DocumentStatusLine'\nimport {RevisionStatusLine} from './RevisionStatusLine'\nimport {useResizeObserver} from './useResizeObserver'\n\nexport interface DocumentStatusBarProps {\n  actionsBoxRef?: Ref<HTMLDivElement>\n  createLinkMetadata?: CreateLinkMetadata\n}\n\nconst CONTAINER_BREAKPOINT = 480 // px\n\nconst AnimatedCard = motion.create(Card)\n\nexport function DocumentStatusBar(props: DocumentStatusBarProps) {\n  const {actionsBoxRef, createLinkMetadata} = props\n  const {editState, onChange: onDocumentChange} = useDocumentPane()\n  const {params = EMPTY_PARAMS} = usePaneRouter()\n  const {selectedPerspective} = usePerspective()\n  const {title} = useDocumentTitle()\n\n  const CreateLinkedActions = useSanityCreateConfig().components?.documentLinkedActions\n\n  const showingRevision = Boolean(params.rev)\n  const [collapsed, setCollapsed] = useState<boolean | null>(null)\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n\n  const handleResize = useCallback((event: ResizeObserverEntry) => {\n    setCollapsed(event.contentRect.width < CONTAINER_BREAKPOINT)\n  }, [])\n\n  useResizeObserver({element: rootElement, onResize: handleResize})\n\n  const shouldRender = useMemo(() => {\n    const isReady = Boolean(editState?.ready && typeof collapsed === 'boolean')\n    if (selectedPerspective) {\n      if (isPublishedPerspective(selectedPerspective)) {\n        return isReady && Boolean(editState?.published)\n      }\n      if (isReleaseDocument(selectedPerspective)) {\n        return isReady && Boolean(editState?.version)\n      }\n    }\n    return isReady\n  }, [collapsed, editState?.published, editState?.ready, editState?.version, selectedPerspective])\n\n  let actions: React.JSX.Element | null = null\n  if (createLinkMetadata && isSanityCreateLinked(createLinkMetadata) && CreateLinkedActions) {\n    actions = (\n      <CreateLinkedActions\n        metadata={createLinkMetadata}\n        panelPortalElementId={DOCUMENT_PANEL_PORTAL_ELEMENT}\n        onDocumentChange={onDocumentChange}\n        documentTitle={title}\n      />\n    )\n  } else if (showingRevision) {\n    actions = <HistoryStatusBarActions />\n  } else {\n    actions = <DocumentStatusBarActions />\n  }\n\n  return (\n    <AnimatedCard\n      key={showingRevision ? 'revision' : 'published'}\n      initial={{opacity: 0.2}}\n      animate={{opacity: 1, transition: {duration: 0.3}}}\n      tone={showingRevision ? 'caution' : undefined}\n      radius={3}\n      ref={setRootElement}\n      sizing=\"border\"\n      padding={2}\n    >\n      {shouldRender && (\n        <Flex\n          align=\"stretch\"\n          gap={1}\n          justify=\"space-between\"\n          paddingLeft={showingRevision ? 0 : 1}\n          paddingRight={showingRevision ? 0 : 1}\n        >\n          <Flex align=\"center\" flex={1} gap={collapsed ? 2 : 3} wrap=\"wrap\" paddingRight={3}>\n            <Flex align=\"center\">\n              {showingRevision ? <RevisionStatusLine /> : <DocumentStatusLine />}\n              <SpacerButton />\n            </Flex>\n            <DocumentBadges />\n          </Flex>\n\n          <Flex\n            align=\"flex-start\"\n            justify=\"flex-end\"\n            ref={actionsBoxRef}\n            style={{flexShrink: 0, marginLeft: 'auto'}}\n          >\n            <SpacerButton />\n            {actions}\n          </Flex>\n        </Flex>\n      )}\n    </AnimatedCard>\n  )\n}\n","import {isHotkey} from 'is-hotkey-esm'\nimport {\n  type ElementType,\n  type HTMLProps,\n  memo,\n  type Ref,\n  useCallback,\n  useMemo,\n  useState,\n} from 'react'\nimport {type DocumentActionDescription, type DocumentActionProps, LegacyLayerProvider} from 'sanity'\n\nimport {RenderActionCollectionState} from '../../../components'\nimport {ActionStateDialog} from '../statusBar'\nimport {useDocumentPane} from '../useDocumentPane'\n\nexport interface KeyboardShortcutResponderProps {\n  actionsBoxElement: HTMLElement | null\n  activeIndex: number\n  as?: ElementType\n  currentMinWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  onActionStart: (index: number) => void\n  rootRef: Ref<HTMLDivElement>\n  states: DocumentActionDescription[]\n}\n\nconst KeyboardShortcutResponder = memo(function KeyboardShortcutResponder(\n  props: KeyboardShortcutResponderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height'>,\n) {\n  const {\n    actionsBoxElement,\n    activeIndex,\n    as: As = 'div',\n    children,\n    id,\n    onActionStart,\n    onKeyDown,\n    rootRef,\n    states,\n    ...rest\n  } = props\n\n  const activeAction = states[activeIndex]\n\n  const handleKeyDown = useCallback(\n    (event: any) => {\n      const matchingStates = states.filter(\n        (state) => state.shortcut && isHotkey(state.shortcut, event),\n      )\n\n      const matchingState = matchingStates[0]\n\n      if (matchingStates.length > 1) {\n        // eslint-disable-next-line no-console\n        console.warn(\n          `Keyboard shortcut conflict: More than one document action matches the shortcut \"${matchingState.shortcut}\"`,\n        )\n      }\n\n      if (matchingState && !matchingState.disabled && matchingState.onHandle) {\n        event.preventDefault()\n        matchingState.onHandle()\n        onActionStart(states.indexOf(matchingState))\n        return\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event)\n      }\n    },\n    [onActionStart, onKeyDown, states],\n  )\n\n  return (\n    <As id={id} onKeyDown={handleKeyDown} tabIndex={-1} {...rest} ref={rootRef}>\n      {children}\n      {activeAction && activeAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={activeAction.dialog} referenceElement={actionsBoxElement} />\n        </LegacyLayerProvider>\n      )}\n    </As>\n  )\n})\n\nexport interface DocumentActionShortcutsProps {\n  actionsBoxElement: HTMLElement | null\n  as?: ElementType\n  currentMinWidth?: number\n  debug?: boolean\n  flex: number\n  id: string\n  minWidth: number\n  rootRef: Ref<HTMLDivElement>\n}\n\nexport const DocumentActionShortcuts = memo(\n  (props: DocumentActionShortcutsProps & Omit<HTMLProps<HTMLDivElement>, 'as'>) => {\n    const {actionsBoxElement, as = 'div', children, ...rest} = props\n    const {actions, editState, isInitialValueLoading, revisionId} = useDocumentPane()\n    const [activeIndex, setActiveIndex] = useState(-1)\n\n    const onActionStart = useCallback((idx: number) => {\n      setActiveIndex(idx)\n    }, [])\n\n    const actionProps: DocumentActionProps | null = useMemo(\n      () =>\n        editState && {\n          ...editState,\n\n          // @todo: what to call here?\n          onComplete: () => undefined,\n\n          revision: revisionId || undefined,\n          initialValueResolved: !isInitialValueLoading,\n        },\n      [editState, isInitialValueLoading, revisionId],\n    )\n\n    const renderDocumentActionShortcuts = useCallback<\n      (props: {states: DocumentActionDescription[]}) => React.ReactNode\n    >(\n      ({states}) => (\n        <KeyboardShortcutResponder\n          {...rest}\n          activeIndex={activeIndex}\n          actionsBoxElement={actionsBoxElement}\n          as={as}\n          onActionStart={onActionStart}\n          states={states}\n        >\n          {children}\n        </KeyboardShortcutResponder>\n      ),\n      [actionsBoxElement, activeIndex, as, children, onActionStart, rest],\n    )\n\n    if (!actionProps || !actions) return null\n\n    return (\n      <RenderActionCollectionState actionProps={actionProps} actions={actions}>\n        {renderDocumentActionShortcuts}\n      </RenderActionCollectionState>\n    )\n  },\n)\n\nDocumentActionShortcuts.displayName = 'Memo(DocumentActionShortcuts)'\n","import {EarthAmericasIcon, JsonIcon, LinkIcon, TransferIcon} from '@sanity/icons'\nimport {type DocumentInspector, type DocumentInspectorMenuItem, type TFunction} from 'sanity'\n\nimport {type DocumentIdStack} from '../../hooks/useDocumentIdStack'\nimport {type PaneMenuItem, type StructureToolFeatures} from '../../types'\nimport {INSPECT_ACTION_PREFIX} from './constants'\n\ninterface GetMenuItemsParams {\n  currentInspector?: DocumentInspector\n  features: StructureToolFeatures\n  hasValue: boolean\n  inspectors: DocumentInspector[]\n  previewUrl?: string | null\n  documentIdStack?: DocumentIdStack\n  inspectorMenuItems: DocumentInspectorMenuItem[]\n  t: TFunction\n}\n\nfunction getInspectorItems({\n  currentInspector,\n  hasValue,\n  inspectors,\n  inspectorMenuItems,\n}: GetMenuItemsParams): PaneMenuItem[] {\n  return inspectors\n    .map((inspector, index) => {\n      const menuItem = inspectorMenuItems[index]\n\n      if (!menuItem || menuItem.hidden) return null\n\n      return {\n        action: `${INSPECT_ACTION_PREFIX}${inspector.name}`,\n        group: menuItem.showAsAction ? undefined : 'inspectors',\n        icon: menuItem.icon,\n        disabled: !hasValue,\n        selected: currentInspector?.name === inspector.name,\n        shortcut: menuItem.hotkeys?.join('+'),\n        showAsAction: menuItem.showAsAction,\n        title: menuItem.title,\n        tone: menuItem.tone,\n      }\n    })\n    .filter(Boolean) as PaneMenuItem[]\n}\n\nfunction getInspectItem({hasValue, t}: GetMenuItemsParams): PaneMenuItem {\n  return {\n    action: 'inspect',\n    group: 'inspectors',\n    title: t('document-inspector.menu-item.title'),\n    icon: JsonIcon,\n    disabled: !hasValue,\n    shortcut: 'Ctrl+Alt+I',\n  }\n}\n\nfunction getCompareVersionsItem({documentIdStack, t}: GetMenuItemsParams): PaneMenuItem | null {\n  const disabled = typeof documentIdStack?.previousId === 'undefined' && {\n    reason: t('compare-versions.menu-item.disabled-reason'),\n  }\n\n  return {\n    action: 'compareVersions',\n    group: 'inspectors',\n    title: t('compare-versions.menu-item.title'),\n    icon: TransferIcon,\n    disabled,\n  }\n}\n\nexport function getProductionPreviewItem({previewUrl, t}: GetMenuItemsParams): PaneMenuItem | null {\n  if (!previewUrl) return null\n\n  return {\n    action: 'production-preview',\n    group: 'links',\n    title: t('production-preview.menu-item.title'),\n    icon: EarthAmericasIcon,\n    shortcut: 'Ctrl+Alt+O',\n  }\n}\n\nexport function getMenuItems(params: GetMenuItemsParams): PaneMenuItem[] {\n  const inspectorItems = getInspectorItems(params)\n  const items = [\n    // Get production preview item\n    getProductionPreviewItem(params),\n    getCompareVersionsItem(params),\n  ].filter(Boolean) as PaneMenuItem[]\n\n  return [\n    // Always present document menu item to copy current url to clipboard\n    {\n      action: 'copy-document-url',\n      showAsAction: true,\n      title: params.t('action.copy-document-url.label'),\n      icon: LinkIcon,\n    },\n    ...inspectorItems,\n\n    // TODO: convert to inspector or document view?\n    getInspectItem(params),\n\n    ...items,\n  ]\n}\n","import {Card, Code, Stack, Text} from '@sanity/ui'\nimport {isDev, Translate, useTranslation} from 'sanity'\n\nimport {ErrorPane} from '../../error'\n\ninterface DocumentLayoutErrorProps {\n  currentMinWidth?: number\n  documentType?: string\n  minWidth?: number\n  paneKey: string\n  value?: Record<string, unknown>\n}\n\nexport function DocumentLayoutError(props: DocumentLayoutErrorProps) {\n  const {documentType, value, currentMinWidth, paneKey, minWidth} = props\n  const {t} = useTranslation()\n\n  return (\n    <ErrorPane\n      currentMinWidth={currentMinWidth}\n      flex={2.5}\n      minWidth={minWidth}\n      paneKey={paneKey}\n      title={\n        <Translate\n          t={t}\n          i18nKey=\"panes.document-pane.document-unknown-type.title\"\n          values={{documentType}}\n        />\n      }\n      tone=\"caution\"\n    >\n      <Stack space={4}>\n        {documentType && (\n          <Text as=\"p\">\n            <Translate\n              t={t}\n              i18nKey=\"panes.document-pane.document-unknown-type.text\"\n              values={{documentType}}\n            />\n          </Text>\n        )}\n\n        {!documentType && (\n          <Text as=\"p\">{t('panes.document-pane.document-unknown-type.without-schema.text')}</Text>\n        )}\n\n        {isDev && value && (\n          /* eslint-disable i18next/no-literal-string */\n          <>\n            <Text as=\"p\">Here is the JSON representation of the document:</Text>\n\n            <Card padding={3} overflow=\"auto\" radius={2} shadow={1} tone=\"inherit\">\n              <Code language=\"json\" size={[1, 1, 2]}>\n                {JSON.stringify(value, null, 2)}\n              </Code>\n            </Card>\n          </>\n          /* eslint-enable i18next/no-literal-string */\n        )}\n      </Stack>\n    </ErrorPane>\n  )\n}\n","import {DialogProvider, type DialogProviderProps, PortalProvider} from '@sanity/ui'\nimport {type Dispatch, type SetStateAction, useMemo} from 'react'\nimport {getSanityCreateLinkMetadata, useZIndex} from 'sanity'\n\nimport {TooltipDelayGroupProvider} from '../../../../ui-components/tooltipDelayGroupProvider/TooltipDelayGroupProvider'\nimport {PaneFooter} from '../../../components'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {DocumentStatusBar} from '../statusBar'\nimport {useDocumentPane} from '../useDocumentPane'\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrower screens (first two media breakpoints).\n  'fixed',\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nexport function DocumentLayoutFooter({\n  documentPanelPortalElement,\n  setFooterElement,\n  setActionsBoxElement,\n}: {\n  documentPanelPortalElement: HTMLElement | null\n  setFooterElement: Dispatch<SetStateAction<HTMLDivElement | null>>\n  setActionsBoxElement: Dispatch<SetStateAction<HTMLDivElement | null>>\n}) {\n  const zOffsets = useZIndex()\n\n  const {value} = useDocumentPane()\n  const portalElements = useMemo(\n    () => ({[DOCUMENT_PANEL_PORTAL_ELEMENT]: documentPanelPortalElement}),\n    [documentPanelPortalElement],\n  )\n\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n  return (\n    // These providers are added because we want the dialogs in `DocumentStatusBar` to be scoped to the document pane\n    // The portal element comes from `DocumentPanel`.\n    <PortalProvider __unstable_elements={portalElements}>\n      <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.portal}>\n        <PaneFooter ref={setFooterElement} padding={1}>\n          <TooltipDelayGroupProvider>\n            <DocumentStatusBar\n              actionsBoxRef={setActionsBoxElement}\n              createLinkMetadata={createLinkMetadata}\n            />\n          </TooltipDelayGroupProvider>\n        </PaneFooter>\n      </DialogProvider>\n    </PortalProvider>\n  )\n}\n","import {DialogProvider, type DialogProviderProps, Flex, useElementRect} from '@sanity/ui'\nimport {isHotkey} from 'is-hotkey-esm'\nimport {useCallback, useMemo, useState} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport {\n  ChangeConnectorRoot,\n  type DocumentFieldActionNode,\n  type DocumentInspectorMenuItem,\n  FieldActionsProvider,\n  FieldActionsResolver,\n  GetFormValueProvider,\n  type Path,\n  useGlobalCopyPasteElementHandler,\n  useZIndex,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Pane, usePaneLayout, usePaneRouter} from '../../../components'\nimport {useDocumentIdStack} from '../../../hooks/useDocumentIdStack'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {\n  DOCUMENT_INSPECTOR_MIN_WIDTH,\n  DOCUMENT_PANEL_INITIAL_MIN_WIDTH,\n  DOCUMENT_PANEL_MIN_WIDTH,\n} from '../constants'\nimport {DocumentInspectorMenuItemsResolver} from '../DocumentInspectorMenuItemsResolver'\nimport {DocumentOperationResults} from '../DocumentOperationResults'\nimport {DocumentPanel} from '../documentPanel'\nimport {DocumentPanelHeader} from '../documentPanel/header'\nimport {DocumentActionShortcuts} from '../keyboardShortcuts'\nimport {getMenuItems} from '../menuItems'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentLayoutError} from './DocumentLayoutError'\nimport {DocumentLayoutFooter} from './DocumentLayoutFooter'\n\nconst EMPTY_ARRAY: [] = []\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrower screens (first two media breakpoints).\n  'fixed',\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nconst StyledChangeConnectorRoot = styled(ChangeConnectorRoot)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  min-height: 0;\n  min-width: 0;\n`\n\nexport function DocumentLayout() {\n  const {\n    changesOpen,\n    displayed,\n    documentId,\n    documentType,\n    editState,\n    fieldActions,\n    focusPath,\n    inspectOpen,\n    inspector,\n    inspectors,\n    onFocus,\n    onHistoryOpen,\n    onMenuAction,\n    onPathOpen,\n    paneKey,\n    schemaType,\n    value,\n    isInitialValueLoading,\n    ready,\n    previewUrl,\n  } = useDocumentPane()\n  const {params: paneParams} = usePaneRouter()\n  const {features} = useStructureTool()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  const zOffsets = useZIndex()\n\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const [footerElement, setFooterElement] = useState<HTMLDivElement | null>(null)\n  const [headerElement, setHeaderElement] = useState<HTMLDivElement | null>(null)\n\n  const [actionsBoxElement, setActionsBoxElement] = useState<HTMLDivElement | null>(null)\n  const [documentPanelPortalElement, setDocumentPanelPortalElement] = useState<HTMLElement | null>(\n    null,\n  )\n\n  useGlobalCopyPasteElementHandler({\n    element: rootElement,\n    focusPath,\n    value,\n  })\n\n  const [inspectorMenuItems, setInspectorMenuItems] = useState<DocumentInspectorMenuItem[]>([])\n  const [rootFieldActionNodes, setRootFieldActionNodes] = useState<DocumentFieldActionNode[]>([])\n\n  const footerRect = useElementRect(footerElement)\n  const headerRect = useElementRect(headerElement)\n  const footerHeight = footerRect?.height\n  const headerHeight = headerRect?.height\n  const currentMinWidth =\n    DOCUMENT_PANEL_INITIAL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n  const minWidth = DOCUMENT_PANEL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n\n  const currentInspector = useMemo(\n    () => inspectors?.find((i) => i.name === inspector?.name),\n    [inspectors, inspector?.name],\n  )\n\n  const documentIdStack = useDocumentIdStack({displayed, documentId, editState})\n\n  const hasValue = Boolean(value)\n\n  const menuItems = useMemo(\n    () =>\n      getMenuItems({\n        currentInspector,\n        features,\n        hasValue,\n        inspectorMenuItems,\n        inspectors,\n        previewUrl,\n        documentIdStack,\n        t,\n      }),\n    [\n      currentInspector,\n      documentIdStack,\n      features,\n      hasValue,\n      inspectorMenuItems,\n      inspectors,\n      previewUrl,\n      t,\n    ],\n  )\n\n  const handleKeyUp = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      for (const item of menuItems) {\n        if (item.shortcut) {\n          if (isHotkey(item.shortcut, event)) {\n            event.preventDefault()\n            event.stopPropagation()\n            onMenuAction(item)\n            return\n          }\n        }\n      }\n    },\n    [onMenuAction, menuItems],\n  )\n\n  const onConnectorSetFocus = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onPathOpen, onFocus],\n  )\n\n  if (!schemaType) {\n    return (\n      <DocumentLayoutError\n        currentMinWidth={currentMinWidth}\n        documentType={documentType}\n        minWidth={minWidth}\n        paneKey={paneKey}\n        value={value}\n      />\n    )\n  }\n\n  return (\n    <GetFormValueProvider value={value}>\n      {inspectors.length > 0 && (\n        <DocumentInspectorMenuItemsResolver\n          documentId={documentId}\n          documentType={documentType}\n          inspectors={inspectors}\n          onMenuItems={setInspectorMenuItems}\n        />\n      )}\n\n      {fieldActions.length > 0 && schemaType && (\n        <FieldActionsResolver\n          actions={fieldActions}\n          documentId={documentId}\n          documentType={documentType}\n          onActions={setRootFieldActionNodes}\n          path={EMPTY_ARRAY}\n          schemaType={schemaType}\n        />\n      )}\n\n      <FieldActionsProvider actions={rootFieldActionNodes} path={EMPTY_ARRAY}>\n        <DocumentActionShortcuts\n          actionsBoxElement={actionsBoxElement}\n          as={Pane}\n          currentMinWidth={currentMinWidth}\n          data-testid=\"document-pane\"\n          flex={2.5}\n          id={paneKey}\n          minWidth={minWidth}\n          onKeyUp={handleKeyUp}\n          rootRef={setRootElement}\n        >\n          <DocumentPanelHeader ref={setHeaderElement} menuItems={menuItems} />\n          <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.paneDialog}>\n            <Flex direction=\"column\" flex={1} height={layoutCollapsed ? undefined : 'fill'}>\n              <StyledChangeConnectorRoot\n                data-testid=\"change-connector-root\"\n                isReviewChangesOpen={changesOpen && paneParams?.changesInspectorTab === 'review'}\n                onOpenReviewChanges={onHistoryOpen}\n                onSetFocus={onConnectorSetFocus}\n              >\n                <DocumentPanel\n                  footerHeight={footerHeight || null}\n                  headerHeight={headerHeight || null}\n                  isInspectOpen={inspectOpen}\n                  rootElement={rootElement}\n                  setDocumentPanelPortalElement={setDocumentPanelPortalElement}\n                  footer={\n                    <DocumentLayoutFooter\n                      documentPanelPortalElement={documentPanelPortalElement}\n                      setFooterElement={setFooterElement}\n                      setActionsBoxElement={setActionsBoxElement}\n                    />\n                  }\n                />\n              </StyledChangeConnectorRoot>\n            </Flex>\n          </DialogProvider>\n          <DocumentOperationResults />\n        </DocumentActionShortcuts>\n      </FieldActionsProvider>\n    </GetFormValueProvider>\n  )\n}\n","import {type ComponentType} from 'react'\nimport {type DocumentLayoutProps, useMiddlewareComponents} from 'sanity'\n\nimport {DocumentLayout} from './DocumentLayout'\nimport {pickDocumentLayoutComponent} from './pickDocumentLayoutComponent'\n\n/**\n * A hook that returns the document layout composed\n * by the Components API (`document.components.layout`).\n */\nexport function useDocumentLayoutComponent(): ComponentType<\n  Omit<DocumentLayoutProps, 'renderDefault'>\n> {\n  return useMiddlewareComponents({\n    pick: pickDocumentLayoutComponent,\n    defaultComponent: DocumentLayout,\n  })\n}\n","import {defineEvent} from '@sanity/telemetry'\n\n/**\n * @internal\n */\nexport const DocumentURLCopied = defineEvent({\n  name: 'DocumentURLCopied',\n  version: 1,\n  description: 'User copied document URL to clipboard',\n})\n","import {type Template} from 'sanity'\n\ninterface InitialValueOptions {\n  documentType: string\n  panePayload?: unknown\n  templateName?: string\n  templateParams?: Record<string, unknown>\n  urlTemplate?: string\n}\n\n/**\n * @internal\n */\nexport function getInitialValueTemplateOpts(\n  templates: Template[],\n  opts: InitialValueOptions,\n): {templateName: string; templateParams: Record<string, unknown>} {\n  const payload = opts.panePayload || {}\n  const structureNodeTemplate = opts.templateName\n\n  if (opts.urlTemplate && structureNodeTemplate && structureNodeTemplate !== opts.urlTemplate) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `Conflicting templates: URL says \"${opts.urlTemplate}\", structure node says \"${structureNodeTemplate}\". Using \"${structureNodeTemplate}\".`,\n    )\n  }\n\n  const template = structureNodeTemplate || opts.urlTemplate\n  const typeTemplates = templates.filter((t) => t.schemaType === opts.documentType)\n\n  const templateParams = {\n    ...opts.templateParams,\n    ...(typeof payload === 'object' ? payload || {} : {}),\n  }\n\n  let templateName = template\n\n  // If we have not specified a specific template, and we only have a single\n  // template available for a schema type, use it\n  if (!template && typeTemplates.length === 1) {\n    templateName = typeTemplates[0].id\n  }\n\n  return {templateName: templateName!, templateParams}\n}\n","import {useMemo} from 'react'\nimport {useInitialValue, useTemplates, useUnique} from 'sanity'\n\nimport {type PaneRouterContextValue, usePaneRouter} from '../../components'\nimport {type DocumentPaneNode} from '../../types'\nimport {getInitialValueTemplateOpts} from './getInitialValueTemplateOpts'\n\nexport const useDocumentPaneInitialValue = ({\n  paneOptions,\n  documentType,\n  documentId,\n  params,\n}: {\n  paneOptions: DocumentPaneNode['options']\n  documentType: string\n  documentId: string\n  params: NonNullable<PaneRouterContextValue['params']>\n}) => {\n  const templates = useTemplates()\n  const paneRouter = usePaneRouter()\n  const panePayload = useUnique(paneRouter.payload)\n\n  const {templateName, templateParams} = useMemo(\n    () =>\n      getInitialValueTemplateOpts(templates, {\n        documentType,\n        templateName: paneOptions.template,\n        templateParams: paneOptions.templateParameters,\n        panePayload,\n        urlTemplate: params.template,\n      }),\n    [documentType, paneOptions, params.template, panePayload, templates],\n  )\n\n  const initialValueRaw = useInitialValue({\n    documentId,\n    documentType,\n    templateName,\n    templateParams,\n    version: params.version,\n  })\n\n  const initialValue = useUnique(initialValueRaw)\n  return initialValue\n}\n","import {omit} from 'lodash'\nimport {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {type DocumentInspector, useSource} from 'sanity'\n\nimport {type PaneRouterContextValue} from '../../components'\nimport {type PaneMenuItem} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\nimport {HISTORY_INSPECTOR_NAME, INSPECT_ACTION_PREFIX} from './constants'\n\nexport function useDocumentPaneInspector({\n  documentId,\n  documentType,\n  params,\n  setParams,\n}: {\n  params: NonNullable<PaneRouterContextValue['params']>\n  documentId: string\n  documentType: string\n  setParams: (params: Record<string, string | undefined>) => void\n}) {\n  const {features} = useStructureTool()\n  const source = useSource()\n  const inspectorsResolver = source.document.inspectors\n\n  const inspectors: DocumentInspector[] = useMemo(\n    () => inspectorsResolver({documentId, documentType}),\n    [documentId, documentType, inspectorsResolver],\n  )\n\n  const [inspectorName, setInspectorName] = useState<string | null>(() => params.inspect || null)\n\n  // Handle inspector name changes from URL\n  const inspectParamRef = useRef<string | undefined>(params.inspect)\n  useEffect(() => {\n    if (inspectParamRef.current !== params.inspect) {\n      inspectParamRef.current = params.inspect\n      setInspectorName(params.inspect || null)\n    }\n  }, [params.inspect])\n\n  const currentInspector = useMemo(\n    () => inspectors?.find((i) => i.name === inspectorName),\n    [inspectors, inspectorName],\n  )\n  const historyInspector = useMemo(\n    () => inspectors.find((i) => i.name === HISTORY_INSPECTOR_NAME),\n    [inspectors],\n  )\n\n  const changesOpen = currentInspector?.name === HISTORY_INSPECTOR_NAME\n\n  const closeInspector = useCallback(\n    (closeInspectorName?: string) => {\n      const inspector = closeInspectorName && inspectors.find((i) => i.name === closeInspectorName)\n\n      if (closeInspectorName && !inspector) {\n        console.warn(`No inspector named \"${closeInspectorName}\"`)\n        return\n      }\n\n      if (!currentInspector) {\n        return\n      }\n\n      if (inspector) {\n        const result = inspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setParams({...result.params, inspect: undefined})\n\n        return\n      }\n\n      if (currentInspector) {\n        const result = currentInspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setParams({...result.params, inspect: undefined})\n      }\n    },\n    [currentInspector, inspectors, params, setParams],\n  )\n\n  const openInspector = useCallback(\n    (nextInspectorName: string, paneParams?: Record<string, string>) => {\n      const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n      if (!nextInspector) {\n        console.warn(`No inspector named \"${nextInspectorName}\"`)\n        return\n      }\n\n      // if the inspector is already open, only update params\n      if (currentInspector?.name === nextInspector.name) {\n        setParams({...params, ...paneParams, inspect: nextInspector.name})\n        return\n      }\n\n      let currentParams = params\n\n      if (currentInspector) {\n        const closeResult = nextInspector.onClose?.({params: currentParams}) ?? {\n          params: currentParams,\n        }\n\n        currentParams = closeResult.params\n      }\n\n      const result = nextInspector.onOpen?.({params: currentParams}) ?? {params: currentParams}\n\n      setInspectorName(nextInspector.name)\n      inspectParamRef.current = nextInspector.name\n\n      setParams({...result.params, ...paneParams, inspect: nextInspector.name})\n    },\n    [currentInspector, inspectors, params, setParams],\n  )\n  const handleHistoryClose = useCallback(() => {\n    if (historyInspector) {\n      closeInspector(historyInspector.name)\n    }\n  }, [closeInspector, historyInspector])\n\n  const handleHistoryOpen = useCallback(() => {\n    if (!features.reviewChanges) {\n      return\n    }\n\n    if (historyInspector) {\n      openInspector(historyInspector.name, {changesInspectorTab: 'review'})\n    }\n  }, [features.reviewChanges, openInspector, historyInspector])\n\n  const inspectOpen = params.inspect === 'on'\n\n  const toggleLegacyInspect = useCallback(\n    (toggle = !inspectOpen) => {\n      if (toggle) {\n        setParams({...params, inspect: 'on'})\n      } else {\n        setParams(omit(params, 'inspect'))\n      }\n    },\n    [inspectOpen, params, setParams],\n  )\n\n  const handleLegacyInspectClose = useCallback(\n    () => toggleLegacyInspect(false),\n    [toggleLegacyInspect],\n  )\n\n  const handleInspectorAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (item.action === 'inspect') {\n        toggleLegacyInspect(true)\n        return true\n      }\n\n      if (typeof item.action !== 'string') return false\n      const nextInspectorName = item.action.slice(INSPECT_ACTION_PREFIX.length)\n      const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n      if (nextInspector) {\n        if (nextInspector.name === inspectorName) {\n          closeInspector(nextInspector.name)\n        } else {\n          openInspector(nextInspector.name)\n        }\n        return true\n      }\n      return false\n    },\n    [closeInspector, inspectorName, inspectors, openInspector, toggleLegacyInspect],\n  )\n\n  return {\n    changesOpen,\n    currentInspector,\n    inspectors,\n    closeInspector,\n    openInspector,\n    handleHistoryClose,\n    handleHistoryOpen,\n    handleInspectorAction,\n    // TODO: Deprecate this legacy inspect toggle it's used to render the <InspectDialog /> component\n    handleLegacyInspectClose,\n    inspectOpen,\n  }\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useEffect, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {BehaviorSubject, from, of} from 'rxjs'\nimport {catchError, debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators'\nimport {isRecord, useSource} from 'sanity'\n\nconst isSanityDocument = (value: unknown): value is SanityDocument =>\n  isRecord(value) && typeof value._id === 'string' && typeof value._type === 'string'\n\nexport function usePreviewUrl(value: Partial<SanityDocument> | undefined): string | undefined {\n  const {resolveProductionUrl} = useSource().document\n  const subject = useMemo(\n    () => new BehaviorSubject<Partial<SanityDocument> | undefined>(undefined),\n    [],\n  )\n\n  useEffect(() => {\n    subject.next(value)\n  }, [subject, value])\n\n  const resolvedUrlObservable = useMemo(() => {\n    return subject.asObservable().pipe(\n      // this so that the preview URL isn't fetched on every keystroke\n      distinctUntilChanged(),\n      debounceTime(500),\n      switchMap((document) =>\n        isSanityDocument(document) ? from(resolveProductionUrl({document})) : of(undefined),\n      ),\n      distinctUntilChanged(),\n      catchError((err) => {\n        const message =\n          isRecord(err) && typeof err.message === 'string' ? err.message : 'Unknown error'\n        throw new Error(`An error was thrown while trying to get your preview url: ${message}`)\n      }),\n    )\n  }, [resolveProductionUrl, subject])\n\n  return useObservable(resolvedUrlObservable)\n}\n","/* eslint-disable camelcase */\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {type ObjectSchemaType, type SanityDocument, type SanityDocumentLike} from '@sanity/types'\nimport {useToast} from '@sanity/ui'\nimport {fromString as pathFromString, resolveKeyedPath} from '@sanity/util/paths'\nimport {memo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type DocumentActionsContext,\n  type DocumentActionsVersionType,\n  type DocumentFieldAction,\n  type EditStateFor,\n  EMPTY_ARRAY,\n  getPublishedId,\n  isVersionId,\n  type PartialContext,\n  useCopyPaste,\n  useDocumentForm,\n  usePerspective,\n  useSchema,\n  useSource,\n  useTranslation,\n  useUnique,\n} from 'sanity'\nimport {DocumentPaneContext} from 'sanity/_singletons'\n\nimport {usePaneRouter} from '../../components'\nimport {useDiffViewRouter} from '../../diffView/hooks/useDiffViewRouter'\nimport {useDocumentIdStack} from '../../hooks/useDocumentIdStack'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type PaneMenuItem} from '../../types'\nimport {DocumentURLCopied} from './__telemetry__'\nimport {DEFAULT_MENU_ITEM_GROUPS, EMPTY_PARAMS, INSPECT_ACTION_PREFIX} from './constants'\nimport {type DocumentPaneContextValue} from './DocumentPaneContext'\nimport {\n  type DocumentPaneProviderProps as DocumentPaneProviderWrapperProps,\n  type HistoryStoreProps,\n} from './types'\nimport {useDocumentPaneInitialValue} from './useDocumentPaneInitialValue'\nimport {useDocumentPaneInspector} from './useDocumentPaneInspector'\nimport {usePreviewUrl} from './usePreviewUrl'\n\ninterface DocumentPaneProviderProps extends DocumentPaneProviderWrapperProps {\n  historyStore: HistoryStoreProps\n}\n\n/**\n * @internal\n */\n// eslint-disable-next-line complexity, max-statements\nexport const DocumentPaneProvider = memo((props: DocumentPaneProviderProps) => {\n  const {children, index, pane, paneKey, onFocusPath, forcedVersion, historyStore} = props\n  const {\n    store: timelineStore,\n    error: timelineError,\n    ready: timelineReady,\n    revisionDocument,\n    onOlderRevision,\n    sinceDocument,\n    isPristine,\n    revisionId,\n    lastNonDeletedRevId,\n  } = historyStore\n\n  const schema = useSchema()\n  const {setDocumentMeta} = useCopyPaste()\n  const {\n    document: {\n      actions: documentActions,\n      badges: documentBadges,\n      unstable_fieldActions: fieldActionsResolver,\n      unstable_languageFilter: languageFilterResolver,\n    },\n  } = useSource()\n  const telemetry = useTelemetry()\n  const paneRouter = usePaneRouter()\n  const setPaneParams = paneRouter.setParams\n  const {push: pushToast} = useToast()\n  const {\n    options,\n    menuItemGroups = DEFAULT_MENU_ITEM_GROUPS,\n    title = null,\n    views: viewsProp = [],\n  } = pane\n  const paneOptions = useUnique(options)\n  const documentIdRaw = paneOptions.id\n  const documentId = getPublishedId(documentIdRaw)\n  const documentType = options.type\n  const params = useUnique(paneRouter.params) || EMPTY_PARAMS\n\n  const perspective = usePerspective()\n\n  const {selectedReleaseId, selectedPerspectiveName} = useMemo(() => {\n    // TODO: COREL - Remove this after updating sanity-assist to use <PerspectiveProvider>\n    if (forcedVersion) {\n      return forcedVersion\n    }\n    return {\n      selectedPerspectiveName: perspective.selectedPerspectiveName,\n      selectedReleaseId: perspective.selectedReleaseId,\n    }\n  }, [forcedVersion, perspective.selectedPerspectiveName, perspective.selectedReleaseId])\n\n  const diffViewRouter = useDiffViewRouter()\n\n  const initialValue = useDocumentPaneInitialValue({\n    paneOptions,\n    documentId,\n    documentType,\n    params,\n  })\n\n  const isInitialValueLoading = initialValue.loading\n  const {\n    changesOpen,\n    currentInspector,\n    inspectors,\n    closeInspector,\n    openInspector,\n    handleHistoryClose,\n    handleHistoryOpen,\n    handleInspectorAction,\n    inspectOpen,\n    handleLegacyInspectClose,\n  } = useDocumentPaneInspector({documentId, documentType, params, setParams: setPaneParams})\n\n  const [isDeleting, setIsDeleting] = useState(false)\n\n  /**\n   * Determine if the current document is deleted.\n   *\n   * When the timeline is available – we check for the absence of an editable document pair\n   * (both draft + published versions) as well as a non 'pristine' timeline (i.e. a timeline that consists\n   * of at least one chunk).\n   *\n   * In the _very rare_ case where the timeline cannot be loaded – we skip this check and always assume\n   * the document is NOT deleted. Since we can't accurately determine document deleted status without history,\n   * skipping this check means that in these cases, users will at least be able to create new documents\n   * without them being incorrectly marked as deleted.\n   */\n  const getIsDeleted = useCallback(\n    (editState: EditStateFor) => {\n      if (!timelineReady) return false\n      return (\n        Boolean(!editState?.draft && !editState?.published && !editState?.version) && !isPristine\n      )\n    },\n    [timelineReady, isPristine],\n  )\n\n  const getComparisonValue = useCallback(\n    (editState: EditStateFor) => {\n      return changesOpen ? sinceDocument : editState?.published || null\n    },\n    [changesOpen, sinceDocument],\n  )\n\n  const schemaType = schema.get(documentType) as ObjectSchemaType | undefined\n\n  const getIsReadOnly = useCallback(\n    (editState: EditStateFor): boolean => {\n      const isDeleted = getIsDeleted(editState)\n      const seeingHistoryDocument = Boolean(params.rev)\n      return seeingHistoryDocument || isDeleting || isDeleted\n    },\n    [getIsDeleted, isDeleting, params.rev],\n  )\n\n  const getDisplayed = useCallback(\n    (value: SanityDocumentLike) => {\n      if (onOlderRevision) {\n        return revisionDocument || {_id: value._id, _type: value._type}\n      }\n      return value\n    },\n    [onOlderRevision, revisionDocument],\n  )\n\n  const {\n    editState,\n    connectionState,\n    focusPath,\n    onChange,\n    validation,\n    ready: formReady,\n    value,\n    formState,\n    permissions,\n    onPathOpen,\n    isPermissionsLoading,\n    formStateRef,\n    onProgrammaticFocus,\n\n    collapsedFieldSets,\n    collapsedPaths,\n    onBlur,\n    onFocus,\n    onSetActiveFieldGroup,\n    onSetCollapsedPath,\n    onSetCollapsedFieldSet,\n    openPath,\n  } = useDocumentForm({\n    documentType,\n    documentId,\n    initialValue: initialValue,\n    comparisonValue: getComparisonValue,\n    releaseId: selectedReleaseId,\n    selectedPerspectiveName,\n    initialFocusPath: params.path ? pathFromString(params.path) : EMPTY_ARRAY,\n    readOnly: getIsReadOnly,\n    onFocusPath,\n    getFormDocumentValue: getDisplayed,\n  })\n\n  const getDocumentVersionType = useCallback(() => {\n    let version: DocumentActionsVersionType\n    switch (true) {\n      case Boolean(params.rev):\n        version = 'revision'\n        break\n      case selectedReleaseId && isVersionId(value._id):\n        version = 'version'\n        break\n      case selectedPerspectiveName === 'published':\n        version = 'published'\n        break\n      default:\n        version = 'draft'\n    }\n\n    return version\n  }, [selectedPerspectiveName, selectedReleaseId, params, value._id])\n\n  const actionsPerspective = useMemo(() => getDocumentVersionType(), [getDocumentVersionType])\n\n  const documentActionsProps: PartialContext<DocumentActionsContext> = useMemo(\n    () => ({\n      schemaType: documentType,\n      documentId,\n      versionType: actionsPerspective,\n      ...(selectedReleaseId && {versionName: selectedReleaseId}),\n    }),\n    [documentType, documentId, actionsPerspective, selectedReleaseId],\n  )\n\n  // Resolve document actions\n  const actions = useMemo(\n    () => documentActions(documentActionsProps),\n    [documentActions, documentActionsProps],\n  )\n\n  // Resolve document badges\n  const badges = useMemo(\n    () => documentBadges({schemaType: documentType, documentId}),\n    [documentBadges, documentId, documentType],\n  )\n\n  // Resolve document language filter\n  const languageFilter = useMemo(\n    () => languageFilterResolver({schemaType: documentType, documentId}),\n    [documentId, documentType, languageFilterResolver],\n  )\n\n  const views = useUnique(viewsProp)\n\n  const activeViewId = params.view || (views[0] && views[0].id) || null\n\n  // TODO: this may cause a lot of churn. May be a good idea to prevent these\n  // requests unless the menu is open somehow\n  const previewUrl = usePreviewUrl(value)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const fieldActions: DocumentFieldAction[] = useMemo(\n    () => (schemaType ? fieldActionsResolver({documentId, documentType, schemaType}) : []),\n    [documentId, documentType, fieldActionsResolver, schemaType],\n  )\n\n  /**\n   * Note that in addition to connection and edit state, we also wait for a valid document timeline\n   * range to be loaded. This means if we're loading an older revision, the full transaction range must\n   * be loaded in full prior to the document being displayed.\n   *\n   * Previously, visiting studio URLs with timeline params would display the 'current' document and then\n   * 'snap' in the older revision, which was disorienting and could happen mid-edit.\n   *\n   * In the event that the timeline cannot be loaded due to TimelineController errors or blocked requests,\n   * we skip this readiness check to ensure that users aren't locked out of editing. Trying to select\n   * a timeline revision in this instance will display an error localized to the popover itself.\n   */\n  const ready = formReady && (!params.rev || timelineReady || !!timelineError)\n\n  const displayed: Partial<SanityDocument> | undefined = useMemo(\n    () => getDisplayed(value),\n    [getDisplayed, value],\n  )\n\n  const {previousId} = useDocumentIdStack({displayed, documentId, editState})\n\n  const setTimelineRange = useCallback(\n    (newSince: string, newRev: string | null) => {\n      setPaneParams({\n        ...params,\n        since: newSince,\n        rev: newRev || undefined,\n      })\n    },\n    [params, setPaneParams],\n  )\n\n  const handlePaneClose = useCallback(() => paneRouter.closeCurrent(), [paneRouter])\n\n  const handlePaneSplit = useCallback(() => paneRouter.duplicateCurrent(), [paneRouter])\n\n  const handleMenuAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (item.action === 'production-preview' && previewUrl) {\n        window.open(previewUrl)\n        return true\n      }\n\n      if (item.action === 'copy-document-url' && navigator) {\n        telemetry.log(DocumentURLCopied)\n        // Chose to copy the user's current URL instead of\n        // the document's edit intent link because\n        // of bugs when resolving a document that has\n        // multiple access paths within Structure\n        navigator.clipboard.writeText(window.location.toString())\n        pushToast({\n          id: 'copy-document-url',\n          status: 'info',\n          title: t('panes.document-operation-results.operation-success_copy-url'),\n        })\n        return true\n      }\n\n      if (item.action === 'reviewChanges') {\n        handleHistoryOpen()\n        return true\n      }\n\n      if (\n        item.action === 'inspect' ||\n        (typeof item.action === 'string' && item.action.startsWith(INSPECT_ACTION_PREFIX))\n      ) {\n        handleInspectorAction(item)\n      }\n\n      if (item.action === 'compareVersions' && typeof previousId !== 'undefined') {\n        diffViewRouter.navigateDiffView({\n          mode: 'version',\n          previousDocument: {\n            type: documentType,\n            id: previousId,\n          },\n          nextDocument: {\n            type: documentType,\n            id: value._id,\n          },\n        })\n        return true\n      }\n\n      return false\n    },\n    [\n      previewUrl,\n      previousId,\n      telemetry,\n      pushToast,\n      t,\n      handleHistoryOpen,\n      handleInspectorAction,\n      diffViewRouter,\n      documentType,\n      value._id,\n    ],\n  )\n\n  useEffect(() => {\n    setDocumentMeta({\n      documentId,\n      documentType,\n      schemaType: schemaType!,\n      onChange,\n    })\n  }, [documentId, documentType, schemaType, onChange, setDocumentMeta])\n\n  const compareValue = useMemo(() => getComparisonValue(editState), [editState, getComparisonValue])\n  const isDeleted = useMemo(() => getIsDeleted(editState), [editState, getIsDeleted])\n  const documentPane: DocumentPaneContextValue = useMemo(\n    () =>\n      ({\n        actions,\n        activeViewId,\n        badges,\n        changesOpen,\n        closeInspector,\n        collapsedFieldSets,\n        collapsedPaths,\n        compareValue,\n        connectionState,\n        displayed,\n        documentId,\n        documentIdRaw,\n        documentType,\n        editState,\n        fieldActions,\n        focusPath,\n        inspector: currentInspector || null,\n        inspectors,\n        onBlur,\n        onChange,\n        onFocus,\n        onPathOpen,\n        onHistoryClose: handleHistoryClose,\n        onHistoryOpen: handleHistoryOpen,\n        onInspectClose: handleLegacyInspectClose,\n        onMenuAction: handleMenuAction,\n        onPaneClose: handlePaneClose,\n        onPaneSplit: handlePaneSplit,\n        onSetActiveFieldGroup,\n        onSetCollapsedPath,\n        onSetCollapsedFieldSet,\n        openInspector,\n        openPath,\n        index,\n        inspectOpen,\n        validation,\n        menuItemGroups: menuItemGroups || [],\n        paneKey,\n        previewUrl,\n        ready,\n        schemaType: schemaType!,\n        isPermissionsLoading,\n        isInitialValueLoading,\n        permissions,\n        setTimelineRange,\n        setIsDeleting,\n        isDeleting,\n        isDeleted,\n        timelineError,\n        timelineStore,\n        title,\n        value,\n        selectedReleaseId,\n        views,\n        formState,\n        unstable_languageFilter: languageFilter,\n        revisionId,\n        lastNonDeletedRevId,\n      }) satisfies DocumentPaneContextValue,\n    [\n      actions,\n      activeViewId,\n      badges,\n      changesOpen,\n      closeInspector,\n      collapsedFieldSets,\n      collapsedPaths,\n      compareValue,\n      connectionState,\n      displayed,\n      documentId,\n      documentIdRaw,\n      documentType,\n      editState,\n      fieldActions,\n      focusPath,\n      currentInspector,\n      inspectors,\n      onBlur,\n      onChange,\n      onFocus,\n      onPathOpen,\n      handleHistoryClose,\n      handleHistoryOpen,\n      handleLegacyInspectClose,\n      handleMenuAction,\n      handlePaneClose,\n      handlePaneSplit,\n      onSetActiveFieldGroup,\n      onSetCollapsedPath,\n      onSetCollapsedFieldSet,\n      openInspector,\n      openPath,\n      index,\n      inspectOpen,\n      validation,\n      menuItemGroups,\n      paneKey,\n      previewUrl,\n      ready,\n      schemaType,\n      isPermissionsLoading,\n      isInitialValueLoading,\n      permissions,\n      setTimelineRange,\n      isDeleting,\n      isDeleted,\n      timelineError,\n      timelineStore,\n      title,\n      value,\n      selectedReleaseId,\n      views,\n      formState,\n      languageFilter,\n      revisionId,\n      lastNonDeletedRevId,\n    ],\n  )\n\n  // Reset `focusPath` when `documentId` or `params.path` changes\n  useEffect(() => {\n    if (ready && params.path) {\n      const {path, ...restParams} = params\n      const pathFromUrl = resolveKeyedPath(formStateRef.current?.value, pathFromString(path))\n      onProgrammaticFocus(pathFromUrl)\n\n      // remove the `path`-param from url after we have consumed it as the initial focus path\n      paneRouter.setParams(restParams)\n    }\n\n    return undefined\n  }, [formStateRef, onProgrammaticFocus, paneRouter, params, ready])\n\n  return (\n    <DocumentPaneContext.Provider value={documentPane}>{children}</DocumentPaneContext.Provider>\n  )\n})\n\nDocumentPaneProvider.displayName = 'Memo(DocumentPaneProvider)'\n","import {type ObjectSchemaType} from '@sanity/types'\nimport {useMemo} from 'react'\nimport {\n  EMPTY_ARRAY,\n  EventsProvider,\n  getDraftId,\n  getPublishedId,\n  getReleaseIdFromReleaseDocumentId,\n  getVersionId,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  PerspectiveProvider,\n  useArchivedReleases,\n  useEditState,\n  useEventsStore,\n  usePerspective,\n  useSchema,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\nimport {usePaneOptions} from './DocumentPane'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\nexport const DocumentEventsPane = (props: DocumentPaneProviderProps) => {\n  const {params = EMPTY_PARAMS} = usePaneRouter()\n  const options = usePaneOptions(props.pane.options, params)\n  const schema = useSchema()\n  const documentType = options.type\n  const schemaType = schema.get(options.type) as ObjectSchemaType | undefined\n  const liveEdit = Boolean(schemaType?.liveEdit)\n\n  const {selectedPerspectiveName, selectedReleaseId, selectedPerspective} = usePerspective()\n  const {data: archivedReleases} = useArchivedReleases()\n  const editState = useEditState(\n    getPublishedId(options.id),\n    documentType,\n    'default',\n    selectedReleaseId,\n  )\n\n  const showingPublishedOnDraft = liveEdit && selectedPerspective === 'drafts' && !editState?.draft\n  const {rev, since} = params\n  const historyVersion = params.historyVersion\n\n  const documentId = useMemo(() => {\n    if (showingPublishedOnDraft) {\n      return getPublishedId(options.id)\n    }\n    if (\n      historyVersion &&\n      archivedReleases.some(\n        (release) => getReleaseIdFromReleaseDocumentId(release._id) === historyVersion,\n      )\n    ) {\n      // Check if we have a release that matches with this historyVersion\n      return getVersionId(options.id, historyVersion)\n    }\n    if (typeof selectedPerspectiveName === 'undefined') {\n      return getDraftId(options.id)\n    }\n    if (selectedPerspectiveName === 'published') {\n      return getPublishedId(options.id)\n    }\n    if (selectedReleaseId) {\n      return getVersionId(options.id, selectedPerspectiveName)\n    }\n    return options.id\n  }, [\n    archivedReleases,\n    historyVersion,\n    selectedPerspectiveName,\n    options.id,\n    showingPublishedOnDraft,\n    selectedReleaseId,\n  ])\n\n  const eventsStore = useEventsStore({documentId, documentType: options.type, rev, since})\n\n  const historyStoreProps = useMemo(\n    () => ({\n      error: eventsStore.error,\n      revisionId: eventsStore.revision?.revisionId || null,\n      onOlderRevision: Boolean(\n        rev && eventsStore.revision?.document && eventsStore.revision?.revisionId,\n      ),\n      revisionDocument: eventsStore.revision?.document || null,\n      sinceDocument: eventsStore.sinceRevision?.document || null,\n      ready: !eventsStore.loading,\n      isPristine: Boolean(eventsStore.events.length === 0),\n      lastNonDeletedRevId:\n        eventsStore.events.find(\n          (e) => !isDeleteDocumentGroupEvent(e) && !isDeleteDocumentVersionEvent(e),\n        )?.id || null,\n    }),\n    [eventsStore, rev],\n  )\n\n  const value = useMemo(() => eventsStore, [eventsStore])\n\n  return (\n    <EventsProvider value={value}>\n      {historyVersion ? (\n        <PerspectiveProvider\n          selectedPerspectiveName={historyVersion}\n          excludedPerspectives={EMPTY_ARRAY}\n        >\n          <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n        </PerspectiveProvider>\n      ) : (\n        <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n      )}\n    </EventsProvider>\n  )\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useMemo, useState} from 'react'\nimport {getPublishedId, useTimelineSelector, useTimelineStore} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\nimport {usePaneOptions} from './DocumentPane'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\nexport const DocumentPaneWithLegacyTimelineStore = (props: DocumentPaneProviderProps) => {\n  const {pane} = props\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n\n  const params = paneRouter.params || EMPTY_PARAMS\n\n  const [timelineError, setTimelineError] = useState<Error | null>(null)\n\n  const store = useTimelineStore({\n    documentId: getPublishedId(options.id),\n    documentType: options.type,\n    onError: setTimelineError,\n    rev: params.rev,\n    since: params.since,\n  })\n\n  const onOlderRevision = useTimelineSelector(store, (state) => state.onOlderRevision)\n  const revTime = useTimelineSelector(store, (state) => state.revTime)\n  const sinceAttributes = useTimelineSelector(store, (state) => state.sinceAttributes)\n  const timelineDisplayed = useTimelineSelector(store, (state) => state.timelineDisplayed)\n  const timelineReady = useTimelineSelector(store, (state) => state.timelineReady)\n  const isPristine = useTimelineSelector(store, (state) => state.isPristine)\n  const lastNonDeletedRevId = useTimelineSelector(store, (state) => state.lastNonDeletedRevId)\n\n  const historyStoreProps = useMemo(\n    () => ({\n      store,\n      error: timelineError,\n      revisionId: revTime?.id || null,\n      onOlderRevision: onOlderRevision,\n      revisionDocument: timelineDisplayed as SanityDocument | null,\n      sinceDocument: sinceAttributes as SanityDocument | null,\n      ready: timelineReady,\n      isPristine: Boolean(isPristine),\n      lastNonDeletedRevId,\n    }),\n    [\n      store,\n      timelineError,\n      revTime?.id,\n      onOlderRevision,\n      timelineDisplayed,\n      sinceAttributes,\n      timelineReady,\n      isPristine,\n      lastNonDeletedRevId,\n    ],\n  )\n  return <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n}\n","import {memo} from 'react'\nimport {useSource} from 'sanity'\n\nimport {DocumentEventsPane} from './DocumentEventsPane'\nimport {DocumentPaneWithLegacyTimelineStore} from './DocumentPaneLegacyTimeline'\nimport {type DocumentPaneProviderProps} from './types'\n\n/**\n * @internal\n */\nexport const DocumentPaneProviderWrapper = memo((props: DocumentPaneProviderProps) => {\n  const source = useSource()\n  if (source.beta?.eventsAPI?.documents) {\n    return <DocumentEventsPane {...props} />\n  }\n  return <DocumentPaneWithLegacyTimelineStore {...props} />\n})\nDocumentPaneProviderWrapper.displayName = 'Memo(DocumentPaneProviderWrapper)'\n","import {useEffect, useRef} from 'react'\nimport {usePerspective} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\n\n/**\n * This hooks takes care of resetting the history related params when the perspective changes.\n * It needs to be placed in a stable component, like the `DocumentPane`, which won't be unmounted when the perspective changes.\n */\nexport function useResetHistoryParams() {\n  const {params = EMPTY_PARAMS, setParams} = usePaneRouter()\n\n  const {selectedPerspectiveName} = usePerspective()\n  const isMounted = useRef(false)\n\n  const updateHistoryParams = useEffectEvent((_perspective?: string) => {\n    // Check if any of the history related params are set, and reset them, don't unnecessarily update the params\n    const PARAMS_TO_UPDATE = ['since', 'historyVersion', 'rev', 'preserveRev']\n    const shouldUpdateParams = PARAMS_TO_UPDATE.some((param) => params[param])\n    if (!shouldUpdateParams) return\n\n    setParams({\n      ...params,\n      // Reset the history related params when the perspective changes, as they don't make sense\n      // in the context of the new perspective - preserveRev is used when setting draft revision.\n      rev: params.preserveRev === 'true' ? params.rev : undefined,\n      preserveRev: undefined,\n      since: undefined,\n      historyVersion: undefined,\n    })\n  })\n  useEffect(() => {\n    // Skip the first run to avoid resetting the params on initial load\n    if (isMounted.current) {\n      updateHistoryParams(selectedPerspectiveName)\n    }\n  }, [selectedPerspectiveName])\n\n  useEffect(() => {\n    isMounted.current = true\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n}\n","import {type Path} from '@sanity/types'\nimport {Stack, Text} from '@sanity/ui'\nimport {fromString as pathFromString} from '@sanity/util/paths'\nimport {memo, useMemo} from 'react'\nimport {\n  CopyPasteProvider,\n  ReferenceInputOptionsProvider,\n  SourceProvider,\n  Translate,\n  useDocumentType,\n  usePerspective,\n  useSource,\n  useTemplatePermissions,\n  useTemplates,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {DiffViewDocumentLayout} from '../../diffView/plugin/DiffViewDocumentLayout'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type DocumentPaneNode} from '../../types'\nimport {ErrorPane} from '../error'\nimport {LoadingPane} from '../loading'\nimport {CommentsWrapper} from './comments'\nimport {useDocumentLayoutComponent} from './document-layout'\nimport {DocumentPaneProviderWrapper} from './DocumentPaneProviderWrapper'\nimport {type DocumentPaneProviderProps} from './types'\nimport {useResetHistoryParams} from './useResetHistoryParams'\n\ntype DocumentPaneOptions = DocumentPaneNode['options']\n\n/**\n * @internal\n */\nexport const DocumentPane = memo(function DocumentPane(props: DocumentPaneProviderProps) {\n  const {name: parentSourceName} = useSource()\n\n  return (\n    <SourceProvider name={props.pane.source || parentSourceName}>\n      <CopyPasteProvider>\n        <DocumentPaneInner {...props} />\n      </CopyPasteProvider>\n    </SourceProvider>\n  )\n})\n\nfunction DocumentPaneInner(props: DocumentPaneProviderProps) {\n  const {pane, paneKey} = props\n  const {resolveNewDocumentOptions} = useSource().document\n  const {selectedPerspectiveName} = usePerspective()\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n  const {documentType, isLoaded: isDocumentLoaded} = useDocumentType(options.id, options.type)\n  useResetHistoryParams()\n  const DocumentLayout = useDocumentLayoutComponent()\n\n  // The templates that should be creatable from inside this document pane.\n  // For example, from the \"Create new\" menu in reference inputs.\n  const templateItems = useMemo(() => {\n    return resolveNewDocumentOptions({\n      type: 'document',\n      documentId: options.id,\n      schemaType: options.type,\n    })\n  }, [options.id, options.type, resolveNewDocumentOptions])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n  const isLoaded = isDocumentLoaded && !isTemplatePermissionsLoading\n\n  const providerProps = useMemo(() => {\n    return isLoaded && documentType && options.type !== documentType\n      ? mergeDocumentType(props, options, documentType)\n      : props\n  }, [props, documentType, isLoaded, options])\n\n  const {ReferenceChildLink, handleEditReference, groupIndex, routerPanesState} = paneRouter\n  const childParams = routerPanesState[groupIndex + 1]?.[0].params || {}\n  const routerPanesStateLength = routerPanesState.length\n  const {parentRefPath} = childParams\n\n  const activePath: {path: Path; state: 'selected' | 'pressed' | 'none'} = useMemo(() => {\n    return parentRefPath\n      ? {\n          path: pathFromString(parentRefPath),\n          state:\n            // eslint-disable-next-line no-nested-ternary\n            groupIndex >= routerPanesStateLength - 1\n              ? 'none'\n              : groupIndex >= routerPanesStateLength - 2\n                ? 'selected'\n                : 'pressed',\n        }\n      : {path: [], state: 'none'}\n  }, [parentRefPath, groupIndex, routerPanesStateLength])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (options.type === '*' && !isLoaded) {\n    return (\n      <LoadingPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={t('panes.document-pane.document-not-found.loading')}\n      />\n    )\n  }\n\n  if (!documentType) {\n    return (\n      <ErrorPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={t('panes.document-pane.document-not-found.title')}\n      >\n        <Stack space={4}>\n          <Text as=\"p\">\n            <Translate\n              t={t}\n              i18nKey=\"panes.document-pane.document-not-found.text\"\n              values={{id: options.id}}\n              components={{Code: ({children}) => <code>{children}</code>}}\n            />\n          </Text>\n        </Stack>\n      </ErrorPane>\n    )\n  }\n\n  return (\n    <DocumentPaneProviderWrapper\n      // this needs to be here to avoid formState from being re-used across (incompatible) document types\n      // see https://github.com/sanity-io/sanity/discussions/3794 for a description of the problem\n      key={`${documentType}-${options.id}-${selectedPerspectiveName || ''}`}\n      {...providerProps}\n    >\n      {/* NOTE: this is a temporary location for this provider until we */}\n      {/* stabilize the reference input options formally in the form builder */}\n      {/* eslint-disable-next-line react/jsx-pascal-case */}\n      <ReferenceInputOptionsProvider\n        EditReferenceLinkComponent={ReferenceChildLink}\n        onEditReference={handleEditReference}\n        initialValueTemplateItems={templatePermissions}\n        activePath={activePath}\n      >\n        <DiffViewDocumentLayout documentId={options.id} documentType={options.type}>\n          <CommentsWrapper documentId={options.id} documentType={options.type}>\n            <DocumentLayout documentId={options.id} documentType={options.type} />\n          </CommentsWrapper>\n        </DiffViewDocumentLayout>\n      </ReferenceInputOptionsProvider>\n    </DocumentPaneProviderWrapper>\n  )\n}\n\n/**\n * @internal\n */\nexport function usePaneOptions(\n  options: DocumentPaneOptions,\n  params: Record<string, string | undefined> = {},\n): DocumentPaneOptions {\n  const templates = useTemplates()\n\n  return useMemo(() => {\n    // The document type is provided, so return\n    if (options.type && options.type !== '*') {\n      return options\n    }\n\n    // Attempt to derive document type from the template configuration\n    const templateName = options.template || params.template\n    const template = templateName ? templates.find((t) => t.id === templateName) : undefined\n    const documentType = template?.schemaType\n\n    // No document type was found in a template\n    if (!documentType) {\n      return options\n    }\n\n    // The template provided the document type, so modify the pane’s `options` property\n    return {...options, type: documentType}\n  }, [options, params.template, templates])\n}\n\nfunction mergeDocumentType(\n  props: DocumentPaneProviderProps,\n  options: DocumentPaneOptions,\n  documentType: string,\n): DocumentPaneProviderProps {\n  return {\n    ...props,\n    pane: {\n      ...props.pane,\n      options: {...options, type: documentType},\n    },\n  }\n}\n","import {type SortOrder} from './types'\n\nexport const PARTIAL_PAGE_LIMIT = 100\nexport const FULL_LIST_LIMIT = 2000\nexport const DEFAULT_ORDERING: SortOrder = {by: [{field: '_updatedAt', direction: 'desc'}]}\nexport const EMPTY_RECORD: Record<string, unknown> = {}\n\nexport const ENABLE_LRU_MEMO = true\n","import {type SanityDocument} from '@sanity/types'\nimport {Box, Container, Flex, Heading, Stack, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  CommandList,\n  type CommandListRenderItemCallback,\n  ErrorActions,\n  type GeneralPreviewLayoutKey,\n  getPublishedId,\n  LoadingBlock,\n  SanityDefaultPreview,\n  Translate,\n  useSchema,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Delay, PaneContent, PaneItem, usePane, usePaneLayout} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {FULL_LIST_LIMIT} from './constants'\nimport {type DocumentListPaneItem, type LoadingVariant} from './types'\n\nconst RootBox = styled(Box)<{$opacity?: number}>`\n  position: relative;\n  opacity: ${(props) => props.$opacity || 1};\n  transition: opacity 0.4s;\n`\n\nconst CommandListBox = styled(Box)`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n`\n\ninterface DocumentListPaneContentProps {\n  childItemId?: string\n  error: {message: string} | null\n  filterIsSimpleTypeConstraint: boolean\n  hasMaxItems?: boolean\n  hasSearchQuery: boolean\n  isActive?: boolean\n  isLazyLoading: boolean\n  isLoading: boolean\n  items: DocumentListPaneItem[]\n  layout?: GeneralPreviewLayoutKey\n  loadingVariant?: LoadingVariant\n  onEndReached: () => void\n  onRetry?: () => void\n  paneTitle: string\n  searchInputElement: HTMLInputElement | null\n  showIcons: boolean\n}\n\nconst SKELETON_ITEMS = [...Array(30).keys()]\n\nfunction LoadingView(props: {layout?: GeneralPreviewLayoutKey}) {\n  const {layout} = props\n\n  return (\n    <Stack paddingX={3} paddingY={2} paddingTop={0} space={1}>\n      {SKELETON_ITEMS.map((num) => (\n        <SanityDefaultPreview isPlaceholder layout={layout} key={num} />\n      ))}\n    </Stack>\n  )\n}\n\nexport function DocumentListPaneContent(props: DocumentListPaneContentProps) {\n  const {\n    childItemId,\n    error,\n    filterIsSimpleTypeConstraint,\n    hasMaxItems,\n    hasSearchQuery,\n    isActive,\n    isLazyLoading,\n    isLoading,\n    items,\n    layout,\n    loadingVariant,\n    onEndReached,\n    onRetry,\n    paneTitle,\n    searchInputElement,\n    showIcons,\n  } = props\n\n  const schema = useSchema()\n\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed, index} = usePane()\n  const [shouldRender, setShouldRender] = useState(!collapsed)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleEndReached = useCallback(() => {\n    if (shouldRender) {\n      onEndReached()\n    }\n  }, [onEndReached, shouldRender])\n\n  useEffect(() => {\n    if (collapsed) return undefined\n\n    const timer = setTimeout(() => {\n      setShouldRender(true)\n    }, 0)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [collapsed, items])\n\n  const renderItem = useCallback<CommandListRenderItemCallback<SanityDocument>>(\n    (item, {activeIndex}) => {\n      const publishedId = getPublishedId(item._id)\n      const isSelected = childItemId === publishedId\n      const pressed = !isActive && isSelected\n      const selected = isActive && isSelected\n      const isLastItem = activeIndex === items.length - 1\n      const showSpinner = isLastItem && isLazyLoading\n      const showMaxItemsMessage = isLastItem && hasMaxItems\n\n      return (\n        <>\n          <PaneItem\n            icon={showIcons === false ? false : undefined}\n            id={publishedId}\n            layout={layout}\n            marginBottom={1}\n            pressed={pressed}\n            schemaType={schema.get(item._type)}\n            selected={selected}\n            value={item}\n          />\n\n          {showSpinner && <LoadingBlock />}\n\n          {showMaxItemsMessage && (\n            <Box marginY={1} paddingX={3} paddingY={4}>\n              <Text align=\"center\" muted size={1}>\n                {t('panes.document-list-pane.max-items.text', {limit: FULL_LIST_LIMIT})}\n              </Text>\n            </Box>\n          )}\n        </>\n      )\n    },\n    [childItemId, isActive, items.length, layout, schema, showIcons, hasMaxItems, isLazyLoading, t],\n  )\n\n  const noDocumentsContent = useMemo(() => {\n    if (hasSearchQuery) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Box paddingX={4} paddingY={5}>\n              <Text align=\"center\" muted>\n                {t('panes.document-list-pane.no-documents.text')}\n              </Text>\n            </Box>\n          </Container>\n        </Flex>\n      )\n    }\n\n    return (\n      <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n        <Container width={1}>\n          <Box paddingX={4} paddingY={5}>\n            <Text align=\"center\" muted>\n              {filterIsSimpleTypeConstraint\n                ? t('panes.document-list-pane.no-documents-of-type.text')\n                : t('panes.document-list-pane.no-matching-documents.text')}\n            </Text>\n          </Box>\n        </Container>\n      </Flex>\n    )\n  }, [filterIsSimpleTypeConstraint, hasSearchQuery, t])\n\n  const mainContent = useMemo(() => {\n    if (!shouldRender) {\n      return null\n    }\n\n    if (error) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Stack paddingX={4} paddingY={5} space={4}>\n              <Heading as=\"h3\">{t('panes.document-list-pane.error.title')}</Heading>\n              <Text as=\"p\">\n                <Translate\n                  t={t}\n                  i18nKey=\"panes.document-list-pane.error.text\"\n                  values={{error: error.message}}\n                  components={{Code: ({children}) => <code>{children}</code>}}\n                />\n              </Text>\n              <ErrorActions error={error} eventId={null} onRetry={onRetry} />\n            </Stack>\n          </Container>\n        </Flex>\n      )\n    }\n\n    if (!isLoading && items.length === 0) {\n      return noDocumentsContent\n    }\n\n    if (loadingVariant === 'initial' && isLoading) {\n      return (\n        <Delay ms={300}>\n          <LoadingView layout={layout} />\n        </Delay>\n      )\n    }\n\n    if (loadingVariant === 'spinner' && isLoading) {\n      return null\n    }\n\n    // prevents bug when panes won't render if first rendered while collapsed\n    const key = `${index}-${collapsed}`\n\n    return (\n      <RootBox overflow=\"hidden\" height=\"fill\" $opacity={loadingVariant === 'subtle' ? 0.8 : 1}>\n        <CommandListBox>\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={paneTitle}\n            canReceiveFocus\n            inputElement={searchInputElement}\n            itemHeight={51}\n            items={items}\n            key={key}\n            onEndReached={handleEndReached}\n            onlyShowSelectionWhenActive\n            overscan={10}\n            paddingBottom={1}\n            paddingX={3}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </CommandListBox>\n      </RootBox>\n    )\n  }, [\n    collapsed,\n    error,\n    handleEndReached,\n    index,\n    isLoading,\n    items,\n    layout,\n    loadingVariant,\n    noDocumentsContent,\n    onRetry,\n    paneTitle,\n    renderItem,\n    searchInputElement,\n    shouldRender,\n    t,\n  ])\n\n  return (\n    <PaneContent\n      data-testid=\"document-list-pane\"\n      overflow={layoutCollapsed || loadingVariant === 'initial' ? 'hidden' : 'auto'}\n    >\n      {mainContent}\n    </PaneContent>\n  )\n}\n","import {\n  isIndexSegment,\n  isKeySegment,\n  isReferenceSchemaType,\n  type ObjectField,\n  type ObjectFieldType,\n  type ObjectSchemaType,\n  type SanityDocumentLike,\n  type SchemaType,\n} from '@sanity/types'\nimport * as PathUtils from '@sanity/util/paths'\nimport {type ExprNode, parse} from 'groq-js'\nimport {collate, getPublishedId} from 'sanity'\n\nimport {type DocumentListPaneItem, type SortOrder} from './types'\n\nexport function getDocumentKey(value: DocumentListPaneItem, index: number): string {\n  return value._id ? getPublishedId(value._id) : `item-${index}`\n}\n\nexport function removePublishedWithDrafts(documents: SanityDocumentLike[]): DocumentListPaneItem[] {\n  return collate(documents).map((entry) => {\n    const doc = entry.draft || entry.published || entry.versions[0]\n    const hasDraft = Boolean(entry.draft)\n\n    return {\n      ...doc,\n      hasPublished: !!entry.published,\n      hasDraft,\n    }\n  }) as any\n}\n\nexport function applyOrderingFunctions(order: SortOrder, schemaType: ObjectSchemaType): SortOrder {\n  const orderBy = order.by.map((by) => {\n    // Skip those that already have a mapper\n    if (by.mapWith) {\n      return by\n    }\n\n    const fieldType = tryResolveSchemaTypeForPath(schemaType, by.field)\n    if (!fieldType) {\n      return by\n    }\n\n    // Note: order matters here, since the jsonType of a date field is `string`,\n    // but we want to apply `datetime()`, not `lower()`\n    if (fieldExtendsType(fieldType, 'datetime')) {\n      return {...by, mapWith: 'dateTime'}\n    }\n\n    if (fieldType.jsonType === 'string') {\n      return {...by, mapWith: 'lower'}\n    }\n\n    return by\n  })\n\n  return orderBy.every((item, index) => item === order.by[index]) ? order : {...order, by: orderBy}\n}\n\nfunction tryResolveSchemaTypeForPath(baseType: SchemaType, path: string): SchemaType | undefined {\n  const pathSegments = PathUtils.fromString(path)\n\n  let current: SchemaType | undefined = baseType\n  for (const segment of pathSegments) {\n    if (!current) {\n      return undefined\n    }\n\n    if (typeof segment === 'string') {\n      current = getFieldTypeByName(current, segment)\n      continue\n    }\n\n    const isArrayAccessor = isKeySegment(segment) || isIndexSegment(segment)\n    if (!isArrayAccessor || current.jsonType !== 'array') {\n      return undefined\n    }\n\n    const [memberType, otherType] = current.of || []\n    if (otherType || !memberType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    if (!isReferenceSchemaType(memberType)) {\n      current = memberType\n      continue\n    }\n\n    const [refType, otherRefType] = memberType.to || []\n    if (otherRefType || !refType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    current = refType\n  }\n\n  return current\n}\n\nfunction getFieldTypeByName(type: SchemaType, fieldName: string): SchemaType | undefined {\n  if (!('fields' in type)) {\n    return undefined\n  }\n\n  const fieldType = type.fields.find((field) => field.name === fieldName)\n  return fieldType ? fieldType.type : undefined\n}\n\nexport function fieldExtendsType(field: ObjectField | ObjectFieldType, ofType: string): boolean {\n  let current: SchemaType | undefined = field.type\n  while (current) {\n    if (current.name === ofType) {\n      return true\n    }\n\n    if (!current.type && current.jsonType === ofType) {\n      return true\n    }\n\n    current = current.type\n  }\n\n  return false\n}\n\n/**\n * Recursively extract static `_type`s from GROQ filter expressions. If the\n * types can't be statically determined then it will return `null`.\n */\n// eslint-disable-next-line complexity\nfunction findTypes(node: ExprNode): Set<string> | null {\n  switch (node.type) {\n    case 'OpCall': {\n      const {left, right} = node\n\n      switch (node.op) {\n        // e.g. `a == b`\n        case '==': {\n          // e.g. `_type == 'value'`\n          if (left.type === 'AccessAttribute' && left.name === '_type' && !left.base) {\n            if (right.type !== 'Value' || typeof right.value !== 'string') return null\n            return new Set([right.value])\n          }\n\n          // e.g. `'value' == _type`\n          if (right.type === 'AccessAttribute' && right.name === '_type' && !right.base) {\n            if (left.type !== 'Value' || typeof left.value !== 'string') return null\n            return new Set([left.value])\n          }\n\n          // otherwise, we can't determine the types statically\n          return null\n        }\n\n        // e.g. `a in b`\n        case 'in': {\n          // if `_type` is not on the left hand side of `in` then it can't be determined\n          if (left.type !== 'AccessAttribute' || left.name !== '_type' || left.base) return null\n          // if the right hand side is not an array then the types can't be determined\n          if (right.type !== 'Array') return null\n\n          const types = new Set<string>()\n          // iterate through all the types\n          for (const element of right.elements) {\n            // if we find a splat, then early return, we can't determine the types\n            if (element.isSplat) return null\n            // if the array element is not just a simple value, then early return\n            if (element.value.type !== 'Value') return null\n            // if the array element value is not a string, then early return\n            if (typeof element.value.value !== 'string') return null\n            // otherwise add the element value to the set of types\n            types.add(element.value.value)\n          }\n\n          // if there were any elements in the types set, return it\n          if (types.size) return types\n          // otherwise, the set of types cannot be determined\n          return null\n        }\n\n        default: {\n          return null\n        }\n      }\n    }\n\n    // groups can just be unwrapped, the AST preserves the order\n    case 'Group': {\n      return findTypes(node.base)\n    }\n\n    // e.g. `_type == 'a' || _type == 'b'`\n    // with Or nodes, if we can't determine the types for either the left or\n    // right hand side then we can't determine the types for any\n    // e.g. `_type == 'a' || isActive`\n    // — can't determine types because `isActive` could be true on another types\n    case 'Or': {\n      const left = findTypes(node.left)\n      if (!left) return null\n\n      const right = findTypes(node.right)\n      if (!right) return null\n\n      return new Set([...left, ...right])\n    }\n\n    // e.g. `_type == 'a' && isActive`\n    // with And nodes, we can determine the types as long as we can determine\n    // the types for one side. We can't determine the types if both are `null`.\n    case 'And': {\n      const left = findTypes(node.left)\n      const right = findTypes(node.right)\n\n      if (!left && !right) return null\n      return new Set([...(left || []), ...(right || [])])\n    }\n\n    default: {\n      return null\n    }\n  }\n}\n\nexport function findStaticTypesInFilter(\n  filter: string,\n  params: Record<string, unknown> = {},\n): string[] | null {\n  try {\n    const types = findTypes(parse(filter, {params}))\n    if (!types) return null\n\n    return Array.from(types).sort()\n  } catch {\n    // if we couldn't parse the filter, just return `null`\n    return null\n  }\n}\n","import {type ClientPerspective, type SanityClient} from '@sanity/client'\nimport {\n  asyncScheduler,\n  defer,\n  map,\n  merge,\n  mergeMap,\n  type Observable,\n  of,\n  partition,\n  share,\n  take,\n  throttleTime,\n  throwError,\n  timer,\n} from 'rxjs'\nimport {exhaustMapWithTrailing} from 'rxjs-exhaustmap-with-trailing'\nimport {\n  createSearch,\n  createSWR,\n  getSearchableTypes,\n  type SanityDocumentLike,\n  type Schema,\n  type SearchOptions,\n  type SearchStrategy,\n} from 'sanity'\n\nimport {getExtendedProjection} from '../../structureBuilder/util/getExtendedProjection'\nimport {type SortOrder} from './types'\n\ninterface ListenQueryOptions {\n  client: SanityClient\n  filter: string\n  limit: number\n  params: Record<string, unknown>\n  schema: Schema\n  searchQuery: string\n  sort: SortOrder\n  perspective?: ClientPerspective\n  staticTypeNames?: string[] | null\n  maxFieldDepth?: number\n  searchStrategy?: SearchStrategy\n}\n\nexport interface SearchQueryResult {\n  fromCache: boolean\n  documents: SanityDocumentLike[]\n}\n\nconst swr = createSWR<SanityDocumentLike[]>({maxSize: 100})\n\nexport function listenSearchQuery(options: ListenQueryOptions): Observable<SearchQueryResult> {\n  const {\n    client,\n    schema,\n    sort,\n    perspective,\n    limit,\n    params,\n    filter,\n    searchQuery,\n    staticTypeNames,\n    maxFieldDepth,\n    searchStrategy,\n  } = options\n  const sortBy = sort.by\n  const extendedProjection = sort?.extendedProjection\n\n  // Listen for changes with the given filter and params, and whenever a change occurs, we want to\n  // re-fetch the documents that match the search query (see below).\n  // We use a separate listener since the search query is too large to use in a listen query.\n  const events$ = defer(() => {\n    return client.listen(`*[${filter}]`, params, {\n      events: ['welcome', 'mutation', 'reconnect'],\n      includeAllVersions: true,\n      includeResult: false,\n      visibility: 'query',\n      tag: 'listen-search-query',\n    })\n  }).pipe(\n    mergeMap((ev, i) => {\n      const isFirst = i === 0\n      if (isFirst && ev.type !== 'welcome') {\n        // If the first event is not welcome, it is most likely a reconnect and\n        // if it's not a reconnect something is very wrong and we should throw.\n        return throwError(\n          () =>\n            new Error(\n              ev.type === 'reconnect'\n                ? 'Could not establish EventSource connection'\n                : `Received unexpected type of first event \"${ev.type}\"`,\n            ),\n        )\n      }\n      return of(ev)\n    }),\n    share(),\n  )\n\n  const [welcome$, mutationAndReconnect$] = partition(events$, (ev) => ev.type === 'welcome')\n\n  const swrKey = JSON.stringify({\n    filter,\n    limit,\n    params,\n    searchQuery,\n    perspective,\n    sort,\n    staticTypeNames,\n  })\n\n  return merge(\n    welcome$.pipe(take(1)),\n    mutationAndReconnect$.pipe(throttleTime(1000, asyncScheduler, {leading: true, trailing: true})),\n  ).pipe(\n    exhaustMapWithTrailing((event) => {\n      // Get the types names to use for searching.\n      // If we have a static list of types, we can skip fetching the types and use the static list.\n      const typeNames$ = staticTypeNames\n        ? of(staticTypeNames)\n        : client.observable.fetch(`array::unique(*[${filter}][]._type)`, params)\n\n      // Use the type names to create a search query and fetch the documents that match the query.\n      return typeNames$.pipe(\n        mergeMap((typeNames: string[]) => {\n          const types = getSearchableTypes(schema, staticTypeNames || []).filter((type) => {\n            if (typeNames.includes(type.name)) {\n              // make a call to getExtendedProjection in strict mode to verify that all fields are\n              // known. This method will throw an exception if there are any unknown fields specified\n              // in the sort by list\n              getExtendedProjection(type, sort.by, true)\n              return true\n            }\n            return false\n          })\n\n          const search = createSearch(types, client, {\n            filter,\n            params,\n            strategy: searchStrategy,\n            maxDepth: maxFieldDepth,\n          })\n\n          const doFetch = () => {\n            const searchTerms = {\n              query: searchQuery || '',\n              types,\n            }\n\n            const searchOptions: SearchOptions = {\n              __unstable_extendedProjection: extendedProjection,\n              comments: [`findability-source: ${searchQuery ? 'list-query' : 'list'}`],\n              limit,\n              skipSortByScore: true,\n              sort: sortBy,\n              perspective,\n            }\n\n            return search(searchTerms, searchOptions).pipe(\n              map((result) =>\n                // eslint-disable-next-line max-nested-callbacks\n                result.hits.map(({hit}) => hit),\n              ),\n            )\n          }\n\n          if (event.type === 'mutation' && event.visibility !== 'query') {\n            // Even though the listener request specifies visibility=query, the events are not guaranteed to be delivered with visibility=query\n            // If the event we are responding to arrives with visibility != query, we add a little delay to allow for the updated document to be available for queries\n            // See https://www.sanity.io/docs/listening#visibility-c4786e55c3ff\n            return timer(1200).pipe(mergeMap(doFetch))\n          }\n          return doFetch()\n        }),\n      )\n    }),\n    swr(swrKey),\n    map(({fromCache, value}) => ({fromCache, documents: value})),\n  )\n}\n","import {type ClientPerspective} from '@sanity/client'\nimport {observableCallback} from 'observable-callback'\nimport {useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {concat, fromEvent, merge, of} from 'rxjs'\nimport {\n  catchError,\n  filter,\n  map,\n  mergeMap,\n  scan,\n  share,\n  shareReplay,\n  take,\n  takeUntil,\n  withLatestFrom,\n} from 'rxjs/operators'\nimport {\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  useClient,\n  useSchema,\n  useSearchMaxFieldDepth,\n  useWorkspace,\n} from 'sanity'\n\nimport {DEFAULT_ORDERING, FULL_LIST_LIMIT, PARTIAL_PAGE_LIMIT} from './constants'\nimport {findStaticTypesInFilter, removePublishedWithDrafts} from './helpers'\nimport {listenSearchQuery} from './listenSearchQuery'\nimport {type DocumentListPaneItem, type SortOrder} from './types'\n\ninterface UseDocumentListOpts {\n  apiVersion?: string\n  filter: string\n  perspective?: ClientPerspective\n  params: Record<string, unknown>\n  searchQuery: string | null\n  sortOrder?: SortOrder\n}\n\ninterface DocumentListState {\n  error: {message: string} | null\n  isLoadingFullList: boolean\n  isLoading: boolean\n  fromCache?: boolean\n  items: DocumentListPaneItem[]\n}\n\nconst INITIAL_QUERY_STATE: DocumentListState = {\n  error: null,\n  isLoading: true,\n  isLoadingFullList: false,\n  fromCache: false,\n  items: [],\n}\n\ninterface UseDocumentListHookValue extends DocumentListState {\n  onRetry: () => void\n  onLoadFullList: () => void\n}\n\n/**\n * @internal\n */\nexport function useDocumentList(opts: UseDocumentListOpts): UseDocumentListHookValue {\n  const {\n    filter: searchFilter,\n    params: paramsProp,\n    sortOrder,\n    searchQuery,\n    perspective,\n    apiVersion,\n  } = opts\n  const client = useClient({\n    ...DEFAULT_STUDIO_CLIENT_OPTIONS,\n    apiVersion: apiVersion || DEFAULT_STUDIO_CLIENT_OPTIONS.apiVersion,\n  })\n  const {strategy: searchStrategy} = useWorkspace().search\n  const schema = useSchema()\n  const maxFieldDepth = useSearchMaxFieldDepth()\n\n  // Get the type name from the filter, if it is a simple type filter.\n  const typeNameFromFilter = useMemo(\n    () => findStaticTypesInFilter(searchFilter, paramsProp),\n    [searchFilter, paramsProp],\n  )\n\n  const [[onRetry$, onRetry]] = useState(() => observableCallback())\n  const [[onFetchFullList$, onLoadFullList]] = useState(() => observableCallback())\n\n  const queryResults$ = useMemo(() => {\n    const listenSearchQueryArgs = {\n      client,\n      filter: searchFilter,\n      limit: PARTIAL_PAGE_LIMIT,\n      params: paramsProp,\n      schema,\n      perspective,\n      searchQuery: searchQuery || '',\n      sort: sortOrder || DEFAULT_ORDERING,\n      staticTypeNames: typeNameFromFilter,\n      maxFieldDepth,\n      searchStrategy,\n    }\n\n    const partialList$ = listenSearchQuery(listenSearchQueryArgs).pipe(\n      shareReplay({refCount: true, bufferSize: 1}),\n    )\n\n    // we want to fetch the full list if the last result of the partial list is at the limit\n    const fullList$ = onFetchFullList$.pipe(\n      withLatestFrom(partialList$),\n      filter(([, result]) => result?.documents.length === PARTIAL_PAGE_LIMIT),\n      // we want to set up the full list listener only once\n      take(1),\n      mergeMap(() =>\n        concat(\n          of({type: 'loadFullList' as const}),\n          listenSearchQuery({...listenSearchQueryArgs, limit: FULL_LIST_LIMIT}).pipe(\n            map((result) => ({type: 'result' as const, result})),\n          ),\n        ),\n      ),\n      share(),\n    )\n\n    // The combined search results from both partial page and full list\n    return merge(\n      partialList$.pipe(\n        map((result) => ({\n          type: 'result' as const,\n          result,\n        })),\n        // when the full list listener kicks off, we want to stop the partial list listener\n        takeUntil(fullList$),\n      ),\n      fullList$,\n    ).pipe(\n      catchError((err: unknown, caught$) => {\n        return concat(\n          of({type: 'error' as const, error: safeError(err)}),\n          merge(fromEvent(window, 'online'), onRetry$).pipe(\n            take(1),\n            mergeMap(() => caught$),\n          ),\n        )\n      }),\n      scan((prev, event) => {\n        if (event.type === 'error') {\n          return {\n            ...prev,\n            error: event.error,\n          }\n        }\n        if (event.type === 'result') {\n          return {\n            ...prev,\n            error: null,\n            fromCache: event.result.fromCache,\n            isLoading: false,\n            items: removePublishedWithDrafts(event.result.documents),\n            isLoadingFullList: false,\n          }\n        }\n        if (event.type === 'loadFullList') {\n          return {\n            ...prev,\n            error: null,\n            isLoadingFullList: true,\n          }\n        }\n        throw new Error('Unexpected')\n      }, INITIAL_QUERY_STATE),\n    )\n  }, [\n    client,\n    searchFilter,\n    paramsProp,\n    schema,\n    perspective,\n    searchQuery,\n    sortOrder,\n    typeNameFromFilter,\n    maxFieldDepth,\n    searchStrategy,\n    onFetchFullList$,\n    onRetry$,\n  ])\n\n  const {error, items, isLoading, fromCache, isLoadingFullList} = useObservable(\n    queryResults$,\n    INITIAL_QUERY_STATE,\n  )\n\n  return {\n    error,\n    onRetry,\n    isLoading,\n    items,\n    fromCache,\n    onLoadFullList,\n    isLoadingFullList,\n  }\n}\n\n// todo: candidate for re-use\nconst nonErrorThrownWarning = `[WARNING: This was thrown as a non-error. Only Error instances should be thrown]`\nfunction safeError(thrown: unknown): Error {\n  if (thrown instanceof Error) {\n    return thrown\n  }\n  if (typeof thrown === 'object' && thrown !== null) {\n    if ('message' in thrown && typeof thrown.message === 'string') {\n      return new Error(`${thrown.message} ${nonErrorThrownWarning}`)\n    }\n    return new Error(`${String(thrown)} ${nonErrorThrownWarning}`)\n  }\n  return new Error(`${String(thrown)} ${nonErrorThrownWarning}`)\n}\n","import {SearchIcon, SpinnerIcon} from '@sanity/icons'\nimport {Box, TextInput} from '@sanity/ui'\nimport {memo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useObservableEvent} from 'react-rx'\nimport {debounce, map, type Observable, of, tap, timer} from 'rxjs'\nimport {\n  type GeneralPreviewLayoutKey,\n  useActiveReleases,\n  useI18nText,\n  usePerspective,\n  useSchema,\n  useTranslation,\n  useUnique,\n} from 'sanity'\nimport {keyframes, styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {EMPTY_RECORD, FULL_LIST_LIMIT} from './constants'\nimport {DocumentListPaneContent} from './DocumentListPaneContent'\nimport {applyOrderingFunctions, findStaticTypesInFilter} from './helpers'\nimport {useShallowUnique} from './PaneContainer'\nimport {type LoadingVariant, type SortOrder} from './types'\nimport {useDocumentList} from './useDocumentList'\n\n/**\n * @internal\n */\nexport type DocumentListPaneProps = BaseStructureToolPaneProps<'documentList'> & {\n  sortOrder?: SortOrder\n  layout?: Exclude<GeneralPreviewLayoutKey, 'sheetList'>\n}\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 0.1;\n  }\n  100% {\n    opacity: 0.4;\n  }\n`\n\nconst AnimatedSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 500ms linear infinite;\n`\n\nconst SubtleSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 1500ms linear infinite;\n  opacity: 0.4;\n`\n\nconst DelayedSubtleSpinnerIcon = styled(SpinnerIcon)`\n  animation:\n    ${rotate} 1500ms linear infinite,\n    ${fadeIn} 1000ms linear;\n  opacity: 0.4;\n`\n\n/**\n * @internal\n */\n\nexport const DocumentListPane = memo(function DocumentListPane(props: DocumentListPaneProps) {\n  const {childItemId, isActive, pane, paneKey, sortOrder: sortOrderRaw, layout} = props\n  const schema = useSchema()\n  const releases = useActiveReleases()\n  const {perspectiveStack} = usePerspective()\n  const {displayOptions, options} = pane\n  const {apiVersion, filter} = options\n  const params = useShallowUnique(options.params || EMPTY_RECORD)\n  const typeName = useMemo(() => {\n    const staticTypes = findStaticTypesInFilter(filter, params)\n    if (staticTypes?.length === 1) return staticTypes[0]\n    return null\n  }, [filter, params])\n\n  const showIcons = displayOptions?.showIcons !== false\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {title} = useI18nText(pane)\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [searchInputValue, setSearchInputValue] = useState<string>('')\n  const [searchInputElement, setSearchInputElement] = useState<HTMLInputElement | null>(null)\n\n  const sortWithOrderingFn =\n    typeName && sortOrderRaw\n      ? applyOrderingFunctions(sortOrderRaw, schema.get(typeName) as any)\n      : sortOrderRaw\n\n  const sortOrder = useUnique(sortWithOrderingFn)\n\n  const {\n    error,\n    isLoadingFullList,\n    isLoading: documentListIsLoading,\n    items,\n    fromCache,\n    onLoadFullList,\n    onRetry,\n  } = useDocumentList({\n    apiVersion,\n    filter,\n    perspective: perspectiveStack,\n    params,\n    searchQuery: searchQuery?.trim(),\n    sortOrder,\n  })\n\n  const isLoading = documentListIsLoading || releases.loading\n\n  const handleQueryChange = useObservableEvent(\n    (event$: Observable<React.ChangeEvent<HTMLInputElement>>) => {\n      return event$.pipe(\n        map((event) => event.target.value),\n        tap(setSearchInputValue),\n        debounce((value) => (value === '' ? of('') : timer(300))),\n        tap(setSearchQuery),\n      )\n    },\n  )\n\n  const handleClearSearch = useCallback(() => {\n    setSearchQuery('')\n    setSearchInputValue('')\n  }, [])\n\n  const handleSearchKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Escape') {\n        handleClearSearch()\n      }\n    },\n    [handleClearSearch],\n  )\n\n  const [enableSearchSpinner, setEnableSearchSpinner] = useState<string | void>()\n\n  useEffect(() => {\n    if (!enableSearchSpinner && !isLoading) {\n      setEnableSearchSpinner(paneKey)\n    }\n  }, [enableSearchSpinner, isLoading, paneKey])\n\n  useEffect(() => {\n    // Clear search field and disable search spinner\n    // when switching between panes (i.e. when paneKey changes).\n    handleClearSearch()\n    setEnableSearchSpinner()\n  }, [paneKey, handleClearSearch])\n\n  const loadingVariant: LoadingVariant = useMemo(() => {\n    if (isLoading && enableSearchSpinner === paneKey) {\n      return 'spinner'\n    }\n    if (fromCache) {\n      return 'subtle'\n    }\n\n    return 'initial'\n  }, [enableSearchSpinner, fromCache, isLoading, paneKey])\n\n  const textInputIcon = useMemo(() => {\n    if (loadingVariant === 'spinner') {\n      return AnimatedSpinnerIcon\n    }\n    if (searchInputValue && loadingVariant === 'subtle') {\n      return SubtleSpinnerIcon\n    }\n    return SearchIcon\n  }, [loadingVariant, searchInputValue])\n\n  return (\n    <>\n      <Box paddingX={3} paddingBottom={3}>\n        <TextInput\n          aria-label={t('panes.document-list-pane.search-input.aria-label')}\n          autoComplete=\"off\"\n          border={false}\n          clearButton={Boolean(searchQuery)}\n          disabled={Boolean(error)}\n          fontSize={[2, 2, 1]}\n          icon={textInputIcon}\n          iconRight={\n            loadingVariant === 'subtle' && !searchInputValue ? DelayedSubtleSpinnerIcon : null\n          }\n          onChange={handleQueryChange}\n          onClear={handleClearSearch}\n          onKeyDown={handleSearchKeyDown}\n          padding={2}\n          placeholder={t('panes.document-list-pane.search-input.placeholder')}\n          radius={2}\n          ref={setSearchInputElement}\n          spellCheck={false}\n          value={searchInputValue}\n        />\n      </Box>\n      <DocumentListPaneContent\n        childItemId={childItemId}\n        error={error}\n        filterIsSimpleTypeConstraint={!!typeName}\n        hasMaxItems={items.length === FULL_LIST_LIMIT}\n        hasSearchQuery={Boolean(searchQuery)}\n        isActive={isActive}\n        isLazyLoading={isLoadingFullList}\n        isLoading={isLoading}\n        items={items}\n        key={paneKey}\n        layout={layout}\n        loadingVariant={loadingVariant}\n        onEndReached={onLoadFullList}\n        onRetry={onRetry}\n        paneTitle={title}\n        searchInputElement={searchInputElement}\n        showIcons={showIcons}\n      />\n    </>\n  )\n})\n","import {ArrowLeftIcon} from '@sanity/icons'\nimport {memo, type ReactNode, useMemo} from 'react'\nimport {type GeneralPreviewLayoutKey, type InitialValueTemplateItem} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../ui-components'\nimport {\n  BackLink,\n  PaneHeader as StructurePaneHeader,\n  PaneHeaderActions,\n  usePane,\n} from '../../components'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\nimport {type SortOrder} from './types'\n\ninterface PaneHeaderProps {\n  contentAfter?: ReactNode\n  index: number\n  initialValueTemplates?: InitialValueTemplateItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  menuItems?: PaneMenuItem[]\n  setLayout: (layout: GeneralPreviewLayoutKey) => void\n  setSortOrder: (sortOrder: SortOrder) => void\n  title: string\n}\n\nexport const PaneHeader = memo(\n  ({\n    contentAfter,\n    index,\n    initialValueTemplates = [],\n    menuItemGroups = [],\n    menuItems = [],\n    setLayout,\n    setSortOrder,\n    title,\n  }: PaneHeaderProps) => {\n    const {features} = useStructureTool()\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    const actionHandlers = useMemo((): Record<string, StructureToolPaneActionHandler> => {\n      return {\n        setLayout: ({layout: value}: {layout: GeneralPreviewLayoutKey}) => {\n          setLayout(value)\n        },\n        setSortOrder: (sort: SortOrder) => {\n          setSortOrder(sort)\n        },\n      }\n    }, [setLayout, setSortOrder])\n\n    return (\n      <TooltipDelayGroupProvider>\n        <StructurePaneHeader\n          actions={\n            <PaneHeaderActions\n              initialValueTemplateItems={initialValueTemplates}\n              actionHandlers={actionHandlers}\n              menuItemGroups={menuItemGroups}\n              menuItems={menuItems}\n            />\n          }\n          backButton={\n            features.backButton &&\n            index > 0 && (\n              <Button\n                as={BackLink}\n                data-as=\"a\"\n                icon={ArrowLeftIcon}\n                mode=\"bleed\"\n                tooltipProps={{content: 'Back'}}\n              />\n            )\n          }\n          contentAfter={contentAfter}\n          tabIndex={tabIndex}\n          title={title}\n        />\n      </TooltipDelayGroupProvider>\n    )\n  },\n)\n\nPaneHeader.displayName = 'Memo(PaneHeader)'\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {type SanityDocument} from '@sanity/client'\nimport {Checkbox} from '@sanity/ui'\nimport {type CellContext} from '@tanstack/react-table'\nimport {type MouseEvent, useCallback} from 'react'\n\nexport function DocumentSheetListSelect(props: CellContext<SanityDocument, unknown>) {\n  const {row, table} = props\n\n  const {selectedAnchor, setSelectedAnchor} = table.options.meta || {}\n\n  const handleOnClick = useCallback(\n    (e: MouseEvent<HTMLInputElement>) => {\n      if (e.shiftKey && selectedAnchor !== null && selectedAnchor !== undefined) {\n        const shiftClickIndex = row.index\n        const lowerIndex = shiftClickIndex < selectedAnchor ? shiftClickIndex : selectedAnchor\n        const upperIndex = shiftClickIndex < selectedAnchor ? selectedAnchor : shiftClickIndex\n\n        const additionalSelectedRows = table\n          .getRowModel()\n          .flatRows.slice(lowerIndex, upperIndex + 1)\n          .map(({id}) => id)\n\n        const currentSelectedRows = table.getSelectedRowModel().rows.map(({id}) => id)\n        table.setRowSelection(() =>\n          [...additionalSelectedRows, ...currentSelectedRows].reduce(\n            (nextSelectedRows, rowId) => ({...nextSelectedRows, [rowId]: true}),\n            {},\n          ),\n        )\n      } else if (setSelectedAnchor) {\n        const isRowCurrentlySelected = row.getIsSelected()\n        if (isRowCurrentlySelected) {\n          // about to unselect so invalidate current anchor\n          setSelectedAnchor(null)\n        } else {\n          // override anchor with new selection index\n          setSelectedAnchor(row.index)\n        }\n\n        row.toggleSelected()\n      }\n    },\n    [selectedAnchor, row, setSelectedAnchor, table],\n  )\n\n  return (\n    <Checkbox\n      style={{paddingLeft: 4}}\n      checked={props.row.getIsSelected()}\n      disabled={!props.row.getCanSelect()}\n      // onChange doesn't have shiftKey in event, but want to control this checkbox\n      // need to define noop onChange to suppress the warning\n      // eslint-disable-next-line react/jsx-no-bind\n      onChange={() => null}\n      onClick={handleOnClick}\n    />\n  )\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {type Table} from '@tanstack/react-table'\nimport {type ReactNode, useCallback, useContext, useEffect, useMemo, useState} from 'react'\nimport {DocumentSheetListContext} from 'sanity/_singletons'\n\ninterface DocumentSheetListProviderProps {\n  children?: ReactNode\n  table: Table<SanityDocument>\n}\n\ntype SelectedCellDetails = {\n  colId: string\n  rowIndex: number\n  state: 'focused' | 'selected'\n} | null\n\n/** @internal */\nexport interface DocumentSheetListContextValue {\n  focusAnchorCell: () => void\n  resetFocusSelection: () => void\n  setSelectedAnchorCell: (colId: string, rowIndex: number) => void\n  getStateByCellId: (\n    colId: string,\n    rowIndex: number,\n  ) => 'focused' | 'selectedAnchor' | 'selectedRange' | null\n  submitFocusedCell: () => void\n}\n\n/** @internal */\nexport const useDocumentSheetListContext = (): DocumentSheetListContextValue => {\n  const context = useContext(DocumentSheetListContext)\n\n  if (context === undefined) {\n    throw new Error('useDocumentSheetListContext must be used within an DocumentSheetListProvider')\n  }\n  return context\n}\n\n/** @internal */\nexport function DocumentSheetListProvider({\n  children,\n  table,\n}: DocumentSheetListProviderProps): ReactNode {\n  const [selectedAnchorCellDetails, setSelectedAnchorCellDetails] =\n    useState<SelectedCellDetails>(null)\n  const [selectedRangeCellIndexes, setSelectedRangeCellIndexes] = useState<number[]>([])\n\n  const clearAndSetFocusSelection = useCallback(\n    (nextAnchorDetails: SelectedCellDetails = null) => {\n      if (\n        selectedAnchorCellDetails?.state === 'focused' &&\n        document.activeElement instanceof HTMLElement\n      ) {\n        document.activeElement.blur()\n      }\n\n      setSelectedAnchorCellDetails(nextAnchorDetails)\n      setSelectedRangeCellIndexes([])\n    },\n    [selectedAnchorCellDetails],\n  )\n\n  const resetFocusSelection = useCallback(\n    () => clearAndSetFocusSelection(),\n    [clearAndSetFocusSelection],\n  )\n\n  const changeSelectionColumn = useCallback(\n    (direction: 'left' | 'right') => {\n      if (!selectedAnchorCellDetails) return\n\n      const visibleColumns = table.getVisibleLeafColumns()\n      const columnIndexAfterMove =\n        visibleColumns.findIndex((col) => col.id === selectedAnchorCellDetails.colId) +\n        (direction === 'left' ? -1 : 1)\n\n      if (columnIndexAfterMove < 0 || columnIndexAfterMove >= visibleColumns.length) return\n\n      clearAndSetFocusSelection({\n        colId: visibleColumns[columnIndexAfterMove].id,\n        rowIndex: selectedAnchorCellDetails.rowIndex,\n        state: 'selected',\n      })\n    },\n    [clearAndSetFocusSelection, selectedAnchorCellDetails, table],\n  )\n\n  const changeSelectionRange = useCallback(\n    (direction: 'up' | 'down') => {\n      if (!selectedAnchorCellDetails) return\n\n      setSelectedRangeCellIndexes((previousSelection) => {\n        const {rowIndex: anchorIndex} = selectedAnchorCellDetails\n        const getNextIndex = (startingIndex: number) =>\n          startingIndex + (direction === 'down' ? 1 : -1)\n        // if no cells are selected, select the cell in the direction\n        if (!previousSelection.length) {\n          const firstSelectedIndex = getNextIndex(anchorIndex)\n          if (firstSelectedIndex < 0) return []\n          return [firstSelectedIndex]\n        }\n        const lastIndexSelected = previousSelection[previousSelection.length - 1]\n        const nextIndex = getNextIndex(lastIndexSelected)\n\n        // if the cell in the direction is out of bounds, return the previous selection\n        if (nextIndex < 0) return previousSelection\n\n        // if the cell in the direction is the same as the focused cell, deselect all cells\n        if (nextIndex === anchorIndex) return []\n\n        // if the cell in the direction is already selected, deselect the last selected cell\n        if (previousSelection.includes(nextIndex)) {\n          return previousSelection.slice(0, -1)\n        }\n\n        return [...previousSelection, nextIndex]\n      })\n    },\n    [selectedAnchorCellDetails],\n  )\n\n  const setSelectedAnchorCell = useCallback(\n    (colId: string, rowIndex: number) => {\n      clearAndSetFocusSelection({colId, rowIndex, state: 'selected'})\n    },\n    [clearAndSetFocusSelection],\n  )\n\n  const handleEscapePress = useCallback(() => {\n    if (!selectedAnchorCellDetails) return\n    if (selectedRangeCellIndexes.length) {\n      // only clear selected range if it exists\n      setSelectedRangeCellIndexes([])\n    } else {\n      const nextAnchorCellDetails: SelectedCellDetails =\n        selectedAnchorCellDetails.state === 'selected'\n          ? null\n          : {\n              ...selectedAnchorCellDetails,\n              state: 'selected',\n            }\n      clearAndSetFocusSelection(nextAnchorCellDetails)\n    }\n  }, [clearAndSetFocusSelection, selectedAnchorCellDetails, selectedRangeCellIndexes.length])\n\n  const handleUpDownKey = useCallback(\n    (isShiftKey: boolean, key: string) => {\n      if (!selectedAnchorCellDetails) return\n\n      const direction = key === 'ArrowDown' ? 'down' : 'up'\n      const offset = direction === 'down' ? 1 : -1\n\n      if (isShiftKey) {\n        changeSelectionRange(direction)\n      } else {\n        const newSelectedCellRowIndex = selectedAnchorCellDetails.rowIndex + offset\n        if (newSelectedCellRowIndex < 0) return\n\n        setSelectedAnchorCell(selectedAnchorCellDetails.colId, newSelectedCellRowIndex)\n      }\n    },\n    [changeSelectionRange, selectedAnchorCellDetails, setSelectedAnchorCell],\n  )\n\n  const handleAnchorKeydown = useCallback(\n    (event: KeyboardEvent) => {\n      if (!selectedAnchorCellDetails) return\n\n      const {key, shiftKey} = event\n\n      switch (key) {\n        case 'Shift':\n          break // shift allow should do nothing\n\n        case 'Escape':\n          handleEscapePress()\n          break\n\n        case 'ArrowDown':\n        case 'ArrowUp':\n          event.preventDefault()\n          handleUpDownKey(shiftKey, key)\n          break\n\n        case 'ArrowLeft':\n        case 'ArrowRight':\n          // when cell is focused, arrows should have default behavior\n          // only prevent default when cell is selected\n          if (selectedAnchorCellDetails.state === 'selected') {\n            event.preventDefault()\n            changeSelectionColumn(key === 'ArrowLeft' ? 'left' : 'right')\n          }\n          break\n\n        default:\n          break\n      }\n    },\n    [selectedAnchorCellDetails, handleEscapePress, handleUpDownKey, changeSelectionColumn],\n  )\n\n  const handleAnchorClick = useCallback(\n    (event: MouseEvent) => {\n      if (!selectedAnchorCellDetails) return\n      const isClickInAnchorCell = document\n        .getElementById(\n          `cell-${selectedAnchorCellDetails.colId}-${selectedAnchorCellDetails.rowIndex}`,\n        )\n        ?.contains(event.target as Node)\n\n      if (!isClickInAnchorCell) resetFocusSelection()\n    },\n    [resetFocusSelection, selectedAnchorCellDetails],\n  )\n\n  useEffect(() => {\n    if (selectedAnchorCellDetails) {\n      document.addEventListener('keydown', handleAnchorKeydown)\n      document.addEventListener('click', handleAnchorClick)\n    }\n\n    return () => {\n      if (selectedAnchorCellDetails) {\n        document.removeEventListener('keydown', handleAnchorKeydown)\n        document.removeEventListener('click', handleAnchorClick)\n      }\n    }\n  }, [handleAnchorClick, handleAnchorKeydown, selectedAnchorCellDetails])\n\n  const focusAnchorCell = useCallback(\n    () =>\n      setSelectedAnchorCellDetails((anchorCellDetails) => {\n        if (!anchorCellDetails) return null\n\n        return {...anchorCellDetails, state: 'focused'}\n      }),\n    [],\n  )\n\n  const getStateByCellId = useCallback(\n    (colId: string, rowIndex: number) => {\n      if (selectedAnchorCellDetails?.colId !== colId) return null\n\n      if (selectedAnchorCellDetails.rowIndex === rowIndex)\n        return selectedAnchorCellDetails.state === 'focused' ? 'focused' : 'selectedAnchor'\n\n      if (selectedRangeCellIndexes.includes(rowIndex)) return 'selectedRange'\n\n      return null\n    },\n    [selectedAnchorCellDetails, selectedRangeCellIndexes],\n  )\n\n  const submitFocusedCell = useCallback(() => {\n    if (!selectedAnchorCellDetails) return\n\n    clearAndSetFocusSelection({\n      colId: selectedAnchorCellDetails.colId,\n      rowIndex: selectedAnchorCellDetails.rowIndex + 1,\n      state: 'selected',\n    })\n  }, [clearAndSetFocusSelection, selectedAnchorCellDetails])\n\n  const value = useMemo<DocumentSheetListContextValue>(\n    () => ({\n      focusAnchorCell,\n      resetFocusSelection,\n      setSelectedAnchorCell,\n      getStateByCellId,\n      submitFocusedCell,\n    }),\n    [\n      focusAnchorCell,\n      resetFocusSelection,\n      setSelectedAnchorCell,\n      getStateByCellId,\n      submitFocusedCell,\n    ],\n  )\n\n  return (\n    <DocumentSheetListContext.Provider value={value}>{children}</DocumentSheetListContext.Provider>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\n/* eslint-disable i18next/no-literal-string */\nimport {type ObjectFieldType} from '@sanity/types'\nimport {Select, TextInput} from '@sanity/ui'\nimport {type Cell, type CellContext, flexRender} from '@tanstack/react-table'\nimport {type MouseEventHandler, useCallback, useEffect, useRef, useState} from 'react'\nimport {type SanityDocument} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {useDocumentSheetListContext} from './DocumentSheetListProvider'\n\nconst DataCell = styled.td<{width: number}>`\n  display: flex;\n  overflow: hidden;\n  box-sizing: border-box;\n  width: ${({width}) => width}px;\n  border-top: 1px solid var(--card-border-color);\n  background-color: var(--card-bg-color);\n`\n\nconst PinnedDataCell = styled(DataCell)`\n  position: sticky;\n  z-index: 2;\n`\n\ninterface SheetListCellInnerProps extends CellContext<SanityDocument, unknown> {\n  fieldType: ObjectFieldType\n}\n\ntype CellInputElement = HTMLInputElement | HTMLSelectElement\ntype InputRef = CellInputElement | null\n\n/** @internal */\nexport function SheetListCellInner(props: SheetListCellInnerProps) {\n  const {getValue, column, row, fieldType} = props\n  const cellId = `cell-${column.id}-${row.index}`\n  const [renderValue, setRenderValue] = useState<string>(getValue() as string)\n  const [isDirty, setIsDirty] = useState(false)\n  const inputRef = useRef<InputRef>(null)\n  const {\n    focusAnchorCell,\n    resetFocusSelection,\n    setSelectedAnchorCell,\n    getStateByCellId,\n    submitFocusedCell,\n  } = useDocumentSheetListContext()\n  const cellState = getStateByCellId(column.id, row.index)\n\n  const handleOnFocus = useCallback(() => {\n    // reselect in cases where focus achieved without initial mousedown\n    setSelectedAnchorCell(column.id, row.index)\n    focusAnchorCell()\n  }, [column.id, focusAnchorCell, row.index, setSelectedAnchorCell])\n  const {patchDocument} = props.table.options.meta || {}\n\n  const handleProgrammaticFocus = () => {\n    inputRef.current?.focus()\n    if (inputRef.current instanceof HTMLInputElement) {\n      inputRef.current.select()\n    }\n  }\n\n  const handleOnMouseDown: MouseEventHandler<CellInputElement> = (event) => {\n    if (event.detail === 2) {\n      handleProgrammaticFocus()\n    } else {\n      event.preventDefault()\n      setSelectedAnchorCell(column.id, row.index)\n    }\n  }\n\n  const handleOnEnterDown = useCallback(\n    (event: KeyboardEvent) => {\n      const {key} = event\n      if (key === 'Enter') {\n        if (cellState === 'selectedAnchor') handleProgrammaticFocus()\n        if (cellState === 'focused') submitFocusedCell()\n      }\n    },\n    [cellState, submitFocusedCell],\n  )\n\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsDirty(true)\n    setRenderValue(event.target.value)\n  }\n\n  const handleOnBlur = () => {\n    if (isDirty) {\n      patchDocument?.(row.id, column.id, renderValue)\n      setIsDirty(false)\n    }\n    resetFocusSelection()\n  }\n\n  const handlePaste = useCallback(\n    (event: ClipboardEvent) => {\n      const clipboardData = event.clipboardData?.getData('Text')\n\n      if (typeof clipboardData === 'string' || typeof clipboardData === 'number') {\n        setRenderValue(clipboardData)\n        // patch immediately when pasting\n        patchDocument?.(row.id, column.id, clipboardData)\n      }\n    },\n    [column.id, patchDocument, row.id],\n  )\n\n  const handleCopy = useCallback(() => {\n    navigator.clipboard.writeText(renderValue.toString())\n  }, [renderValue])\n\n  useEffect(() => {\n    if (cellState === 'selectedAnchor' || cellState === 'focused')\n      // only listen for enter key when cell is focused or anchor\n      document.addEventListener('keydown', handleOnEnterDown)\n    if (cellState === 'selectedAnchor' || cellState === 'selectedRange')\n      // if cell is selected, paste events should be handled\n      document.addEventListener('paste', handlePaste)\n\n    if (cellState === 'selectedAnchor')\n      // only allow copying when cell is selected anchor\n      document.addEventListener('copy', handleCopy)\n\n    return () => {\n      if (cellState === 'selectedAnchor' || cellState === 'focused')\n        document.removeEventListener('keydown', handleOnEnterDown)\n      if (cellState === 'selectedAnchor' || cellState === 'selectedRange')\n        document.removeEventListener('paste', handlePaste)\n      if (cellState === 'selectedAnchor') document.removeEventListener('copy', handleCopy)\n    }\n  }, [\n    cellId,\n    cellState,\n    column.id,\n    getStateByCellId,\n    handleCopy,\n    handleOnEnterDown,\n    handlePaste,\n    row.index,\n  ])\n\n  const getBorderStyle = () => {\n    if (cellState === 'focused') return '2px solid blue'\n    if (cellState === 'selectedRange') return '1px solid green'\n    if (cellState === 'selectedAnchor') return '1px solid blue'\n\n    return '1px solid transparent'\n  }\n\n  const inputProps = {\n    'onFocus': handleOnFocus,\n    'onBlur': handleOnBlur,\n    'onMouseDown': handleOnMouseDown,\n    'aria-selected': !!cellState,\n    'data-testid': cellId,\n    'id': cellId,\n    'ref': (ref: InputRef) => {\n      inputRef.current = ref\n    },\n  }\n\n  if (fieldType.name === 'boolean') {\n    return (\n      <Select\n        {...inputProps}\n        onChange={() => null}\n        radius={0}\n        style={{\n          boxShadow: 'none',\n          border: getBorderStyle(),\n          padding: 0,\n        }}\n        value={JSON.stringify(renderValue)}\n      >\n        <option value=\"True\">True</option>\n        <option value=\"False\">False</option>\n      </Select>\n    )\n  }\n\n  return (\n    <TextInput\n      {...inputProps}\n      size={0}\n      radius={0}\n      border={false}\n      style={{\n        border: getBorderStyle(),\n        padding: '22px 16px',\n      }}\n      value={\n        typeof renderValue === 'string' || typeof renderValue === 'number'\n          ? renderValue\n          : JSON.stringify(renderValue)\n      }\n      onChange={handleOnChange}\n    />\n  )\n}\n\n/** @internal */\nexport function SheetListCell(cell: Cell<SanityDocument, unknown>) {\n  const isPinned = cell.column.getIsPinned()\n  const Cell = isPinned ? PinnedDataCell : DataCell\n  const borderWidth = isPinned && cell.column.getIsLastColumn('left') ? 2 : 1\n\n  return (\n    <Cell\n      key={cell.row.original._id + cell.id}\n      style={{\n        left: cell.column.getStart('left') ?? undefined,\n        borderRight: `${borderWidth}px solid var(--card-border-color)`,\n      }}\n      width={cell.column.getSize()}\n    >\n      {flexRender(cell.column.columnDef.cell, cell.getContext?.())}\n    </Cell>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {isObjectSchemaType, type ObjectSchemaType} from '@sanity/types'\nimport {Box, Checkbox, Flex, Text} from '@sanity/ui'\nimport {\n  type AccessorKeyColumnDef,\n  createColumnHelper,\n  type GroupColumnDef,\n  type VisibilityState,\n} from '@tanstack/react-table'\nimport {useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  type DocumentPreviewStore,\n  DocumentStatusIndicator,\n  getPreviewStateObservable,\n  type SanityDocument,\n  type SchemaType,\n  useDocumentPreviewStore,\n  useDocumentVersionInfo,\n} from 'sanity'\n\nimport {DocumentSheetListSelect} from './DocumentSheetListSelect'\nimport {SheetListCellInner} from './SheetListCell'\n\nexport const VISIBLE_COLUMN_LIMIT = 5\n\nconst PreviewCell = (props: {\n  documentPreviewStore: DocumentPreviewStore\n  schemaType: SchemaType\n  row: {\n    original: SanityDocument\n  }\n}) => {\n  const {documentPreviewStore, row, schemaType} = props\n  const previewStateObservable = useMemo(\n    () => getPreviewStateObservable(documentPreviewStore, schemaType, row.original._id),\n    [documentPreviewStore, row.original._id, schemaType],\n  )\n\n  const versionsInfo = useDocumentVersionInfo(row.original._id)\n\n  const {snapshot, isLoading} = useObservable(previewStateObservable, {\n    snapshot: null,\n    isLoading: true,\n  })\n  if (isLoading) {\n    return (\n      <Text size={1} muted>\n        Loading...\n      </Text>\n    )\n  }\n  const displayValue = (snapshot?.title ?? 'Untitled') as string\n\n  return (\n    <Flex align=\"center\" gap={3}>\n      <DocumentStatusIndicator\n        draft={versionsInfo.draft}\n        published={versionsInfo.published}\n        versions={undefined}\n      />\n      <Text size={1}>{displayValue}</Text>\n    </Flex>\n  )\n}\n\nconst columnHelper = createColumnHelper<SanityDocument>()\nconst SUPPORTED_FIELDS = ['string', 'number', 'boolean']\n\ntype Columns = (\n  | AccessorKeyColumnDef<SanityDocument, unknown>\n  | GroupColumnDef<SanityDocument, unknown>\n)[]\n\nconst getColsFromSchemaType = (schemaType: ObjectSchemaType, parentalField?: string): Columns => {\n  return schemaType.fields.reduce<Columns>((tableColumns: Columns, field) => {\n    const {type, name} = field\n    if (SUPPORTED_FIELDS.includes(type.name)) {\n      const nextCol = columnHelper.accessor(\n        // accessor must use dot notation for internal tanstack method of reading cell data\n        parentalField ? `${parentalField}.${field.name}` : field.name,\n        {\n          id: parentalField ? `${parentalField}_${field.name}` : field.name,\n          header: field.type.title,\n          enableHiding: true,\n          cell: (info) => <SheetListCellInner {...info} fieldType={type} />,\n        },\n      )\n\n      return [...tableColumns, nextCol]\n    }\n\n    // if first layer nested object\n    if (type.name === 'object' && isObjectSchemaType(type) && !parentalField) {\n      return [\n        ...tableColumns,\n        columnHelper.group({header: name, columns: getColsFromSchemaType(type, field.name)}),\n      ]\n    }\n\n    return tableColumns\n  }, [])\n}\n\n// Type guard function to check if a column is of type GroupColumnDef\nfunction isAccessorKeyColumnDef(\n  column: Columns[number],\n): column is AccessorKeyColumnDef<SanityDocument, unknown> {\n  return 'accessorKey' in column\n}\nfunction isGroupColumnDef(\n  column: AccessorKeyColumnDef<SanityDocument, unknown> | GroupColumnDef<SanityDocument, unknown>,\n): column is GroupColumnDef<SanityDocument, unknown> {\n  return 'columns' in column\n}\n\nconst flatColumns = (cols: Columns): AccessorKeyColumnDef<SanityDocument, unknown>[] => {\n  return cols.flatMap((col) => {\n    if (isAccessorKeyColumnDef(col)) {\n      return col\n    }\n    if (isGroupColumnDef(col)) {\n      return col.columns ? flatColumns(col.columns) : []\n    }\n    return []\n  })\n}\n\nexport function useDocumentSheetColumns(documentSchemaType?: ObjectSchemaType) {\n  const documentPreviewStore = useDocumentPreviewStore()\n\n  const columns: Columns = useMemo(() => {\n    if (!documentSchemaType) {\n      return []\n    }\n    return [\n      columnHelper.display({\n        id: 'selected',\n        enableHiding: false,\n        header: (info) => (\n          <Box>\n            <Checkbox\n              style={{paddingLeft: 4}}\n              indeterminate={info.table.getIsSomeRowsSelected()}\n              onChange={info.table.getToggleAllPageRowsSelectedHandler()}\n            />\n            {/* eslint-disable-next-line i18next/no-literal-string */}\n            {info.table.getSelectedRowModel().rows.length} selected\n          </Box>\n        ),\n        cell: DocumentSheetListSelect,\n      }),\n      columnHelper.accessor('Preview', {\n        enableHiding: false,\n        id: 'Preview',\n        cell: (info) => {\n          return (\n            <PreviewCell\n              {...info}\n              documentPreviewStore={documentPreviewStore}\n              schemaType={documentSchemaType}\n            />\n          )\n        },\n      }),\n      ...getColsFromSchemaType(documentSchemaType),\n    ]\n  }, [documentPreviewStore, documentSchemaType])\n\n  const [initialColumnsVisibility]: [VisibilityState, number] = useMemo(\n    () =>\n      flatColumns(columns).reduce<[VisibilityState, number]>(\n        ([accCols, countAllowedVisible], column) => {\n          if (!column.id) throw new Error('Column must have an id')\n          const visibilityKey = column.id\n\n          // this column is always visible\n          if (!column.enableHiding) {\n            return [{...accCols, [visibilityKey]: true}, countAllowedVisible]\n          }\n\n          // have already reached column visibility limit, hide column by default\n          if (countAllowedVisible === VISIBLE_COLUMN_LIMIT) {\n            return [{...accCols, [visibilityKey]: false}, countAllowedVisible]\n          }\n\n          return [{...accCols, [visibilityKey]: true}, countAllowedVisible + 1]\n        },\n        [{}, 0],\n      ),\n    [columns],\n  )\n\n  return {columns, initialColumnsVisibility}\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {Box, Checkbox, Flex, Menu, Stack, Text} from '@sanity/ui'\nimport {type Column, type Table} from '@tanstack/react-table'\nimport {useCallback} from 'react'\nimport {type SanityDocument, useTranslation} from 'sanity'\n\nimport {Button, MenuButton} from '../../../../ui-components'\nimport {VISIBLE_COLUMN_LIMIT} from './useDocumentSheetColumns'\n\ntype ColumnsControlProps = {\n  table: Table<SanityDocument>\n}\n\nexport function ColumnsControl({table}: ColumnsControlProps) {\n  const {t} = useTranslation()\n  const isVisibleLimitReached =\n    table.getVisibleLeafColumns().filter((col) => col.getCanHide()).length >= VISIBLE_COLUMN_LIMIT\n\n  const setInitialColumns = useCallback(() => {\n    table.resetColumnVisibility()\n  }, [table])\n\n  const handleColumnOnChange = (column: Column<SanityDocument, unknown>) => () => {\n    column.toggleVisibility()\n  }\n\n  const getColumnVisibilityDisabled = (column: Column<SanityDocument, unknown>) => {\n    const isColumnVisible = column.getIsVisible()\n    const isSingleColumnVisible =\n      table.getVisibleLeafColumns().filter((col) => col.getCanHide()).length === 1\n\n    return (isVisibleLimitReached && !isColumnVisible) || (isSingleColumnVisible && isColumnVisible)\n  }\n\n  return (\n    <MenuButton\n      button={<Button mode=\"bleed\" text={t('sheet-list.edit-columns')} />}\n      id=\"columns-control\"\n      menu={\n        <Menu padding={3} paddingTop={4} style={{width: 240}}>\n          <Flex direction=\"column\" height=\"fill\" gap={3}>\n            <Text weight=\"semibold\" size={1}>\n              {t('sheet-list.select-fields')}\n            </Text>\n            <Flex style={{flex: '1 1 auto', maxHeight: 320, overflowY: 'scroll'}}>\n              <Stack>\n                {table\n                  .getAllLeafColumns()\n                  .filter((column) => column.getCanHide())\n                  .map((column) => (\n                    <Flex key={column.id} marginY={2} align=\"center\">\n                      <Checkbox\n                        readOnly={getColumnVisibilityDisabled(column)}\n                        checked={column.getIsVisible()}\n                        onChange={handleColumnOnChange(column)}\n                        id={`col-visibility-${column.id}`}\n                        style={{display: 'block'}}\n                      />\n                      <Box flex={1} paddingLeft={3}>\n                        <Text size={1}>\n                          <label htmlFor={`col-visibility-${column.id}`}>\n                            {column.columnDef.header?.toString()}\n                          </label>\n                        </Text>\n                      </Box>\n                    </Flex>\n                  ))}\n              </Stack>\n            </Flex>\n            <Button\n              width=\"fill\"\n              mode=\"ghost\"\n              text={t('sheet-list.reset-columns')}\n              onClick={setInitialColumns}\n            />\n          </Flex>\n        </Menu>\n      }\n      placement=\"bottom\"\n      popover={{portal: true}}\n    />\n  )\n}\n","import {Flex} from '@sanity/ui'\nimport {Filters, SearchHeader, useSearchState} from 'sanity'\nimport {styled} from 'styled-components'\n\nconst SearchContainer = styled(Flex)`\n  flex-shrink: 0;\n`\n\nexport function DocumentSheetListFilter() {\n  const {\n    state: {filtersVisible},\n  } = useSearchState()\n\n  return (\n    <SearchContainer>\n      <SearchHeader />\n      {filtersVisible && <Filters showTypeFilter={false} />}\n    </SearchContainer>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {CloseIcon, EllipsisHorizontalIcon} from '@sanity/icons'\nimport {type SanityDocument} from '@sanity/types'\nimport {Box, Flex, Menu, Text} from '@sanity/ui'\nimport {flexRender, type Header as HeaderType, type HeaderGroup} from '@tanstack/react-table'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, MenuButton, MenuItem, Tooltip} from '../../../../ui-components'\n\nconst Header = styled.th<{width: number}>`\n  margin: 16px;\n  z-index: 1;\n  padding: 22px 0px;\n  border-top: 1px solid var(--card-border-color);\n  background-color: var(--card-badge-default-bg-color);\n  box-sizing: border-box;\n  text-align: left;\n  width: ${({width}) => width}px;\n  max-width: ${({width}) => width}px;\n`\n\nconst PinnedHeader = styled(Header)`\n  position: sticky;\n  z-index: 2;\n`\n\nconst HoverMenu = styled.div`\n  visibility: hidden;\n\n  ${Header}:hover & {\n    visibility: visible;\n  }\n`\n\ntype DocumentSheetListHeaderProps = {\n  header: HeaderType<SanityDocument, unknown>\n  headerGroup: HeaderGroup<SanityDocument>\n}\n\nexport function DocumentSheetListHeader(props: DocumentSheetListHeaderProps) {\n  const {header, headerGroup} = props\n  const {t} = useTranslation()\n\n  const isPinned = header.column.getIsPinned()\n\n  const headerTitle =\n    headerGroup.depth > 0 && !header.column.parent ? null : (\n      <Text size={1} weight=\"semibold\" textOverflow=\"ellipsis\">\n        {flexRender(header.column.columnDef.header, header.getContext())}\n      </Text>\n    )\n\n  const HeaderTag = isPinned ? PinnedHeader : Header\n\n  const canShowHeaderMenu =\n    header.column.getCanHide() &&\n    (headerGroup.depth === 0 ? !header.column.columns.length : header.column.parent)\n\n  const borderWidth = isPinned && header.column.getIsLastColumn('left') ? 2 : 1\n\n  return (\n    <HeaderTag\n      style={{\n        left: header.column.getStart('left') ?? undefined,\n        borderRight: `${borderWidth}px solid var(--card-border-color)`,\n      }}\n      key={header.id}\n      data-testid={`header-${header.id}`}\n      width={header.getSize()}\n    >\n      <Flex justify=\"space-between\" marginX={2} align=\"baseline\">\n        <Tooltip delay={500} content={headerTitle}>\n          <Box style={{boxSizing: 'border-box'}} marginLeft={3} marginRight={3}>\n            {headerTitle}\n          </Box>\n        </Tooltip>\n        {canShowHeaderMenu && (\n          <HoverMenu>\n            <MenuButton\n              button={\n                <Button\n                  tooltipProps={{content: 'Open field menu'}}\n                  mode=\"bleed\"\n                  icon={EllipsisHorizontalIcon}\n                  data-testid=\"field-menu-button\"\n                />\n              }\n              id=\"field menu\"\n              popover={{placement: 'bottom-end'}}\n              menu={\n                <Menu>\n                  <MenuItem\n                    text={t('sheet-list.hide-field')}\n                    icon={CloseIcon}\n                    onClick={() => header.column.toggleVisibility()}\n                  />\n                </Menu>\n              }\n            />\n          </HoverMenu>\n        )}\n      </Flex>\n    </HeaderTag>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\n/* eslint-disable i18next/no-literal-string */\n/* eslint-disable @sanity/i18n/no-attribute-string-literals */\n/* eslint-disable react/jsx-no-bind */\nimport {\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  DoubleChevronLeftIcon,\n  DoubleChevronRightIcon,\n} from '@sanity/icons'\nimport {Flex, Text} from '@sanity/ui'\nimport {type Table} from '@tanstack/react-table'\nimport {type SanityDocument} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../../ui-components'\n\nexport function DocumentSheetListPaginator({table}: {table: Table<SanityDocument>}) {\n  return (\n    <TooltipDelayGroupProvider>\n      <Flex gap={3} align={'center'}>\n        <Button\n          onClick={() => table.setPageIndex(0)}\n          disabled={!table.getCanPreviousPage()}\n          icon={DoubleChevronLeftIcon}\n          tooltipProps={{\n            content: 'Go to first page',\n          }}\n        />\n        <Button\n          onClick={() => table.previousPage()}\n          disabled={!table.getCanPreviousPage()}\n          icon={ChevronLeftIcon}\n          tooltipProps={{\n            content: 'Go to previous page',\n          }}\n        />\n        <Text style={{whiteSpace: 'nowrap'}}>\n          {table.getState().pagination.pageIndex + 1} of {table.getPageCount()}\n        </Text>\n\n        <Button\n          onClick={() => table.nextPage()}\n          disabled={!table.getCanNextPage()}\n          icon={ChevronRightIcon}\n          tooltipProps={{\n            content: 'Go to next page',\n          }}\n        />\n        <Button\n          onClick={() => table.setPageIndex(table.getPageCount() - 1)}\n          disabled={!table.getCanNextPage()}\n          icon={DoubleChevronRightIcon}\n          tooltipProps={{\n            content: 'Go to last page',\n          }}\n        />\n        <select\n          value={table.getState().pagination.pageSize}\n          onChange={(e) => {\n            table.setPageSize(Number(e.target.value))\n          }}\n        >\n          {[25, 50, 100].map((pageSize) => (\n            <option key={pageSize} value={pageSize}>\n              {pageSize}\n            </option>\n          ))}\n        </select>\n      </Flex>\n    </TooltipDelayGroupProvider>\n  )\n}\n","import {type ListenEvent, type ListenOptions} from '@sanity/client'\nimport {useCallback, useEffect, useMemo, useReducer, useState} from 'react'\nimport {catchError, of} from 'rxjs'\nimport {DEFAULT_STUDIO_CLIENT_OPTIONS, getDraftId, type SanityDocument, useClient} from 'sanity'\n\ninterface DocumentDeletedAction {\n  id: string\n  type: 'DOCUMENT_DELETED'\n}\n\ninterface DocumentUpdatedAction {\n  payload: SanityDocument\n  type: 'DOCUMENT_UPDATED'\n}\n\ninterface DocumentsSetAction {\n  documents: SanityDocument[]\n  type: 'DOCUMENTS_SET'\n}\n\ninterface DocumentReceivedAction {\n  payload: SanityDocument\n  type: 'DOCUMENT_RECEIVED'\n}\n\nexport type DocumentsReducerAction =\n  | DocumentDeletedAction\n  | DocumentUpdatedAction\n  | DocumentsSetAction\n  | DocumentReceivedAction\n\nexport interface DocumentsReducerState {\n  documents: Record<string, SanityDocument>\n}\n\nfunction createDocumentsSet(documents: SanityDocument[]) {\n  const documentsById = documents.reduce((acc, doc) => ({...acc, [doc._id]: doc}), {})\n  return documentsById\n}\n\nfunction documentsReducer(\n  state: DocumentsReducerState,\n  action: DocumentsReducerAction,\n): DocumentsReducerState {\n  switch (action.type) {\n    case 'DOCUMENTS_SET': {\n      // Create an object with the documents id as key\n      const documents = createDocumentsSet(action.documents)\n\n      return {\n        ...state,\n        documents: documents,\n      }\n    }\n\n    case 'DOCUMENT_RECEIVED': {\n      const nextDocumentResult = action.payload as SanityDocument\n\n      return {\n        ...state,\n        documents: {\n          ...state.documents,\n          [nextDocumentResult._id]: nextDocumentResult,\n        },\n      }\n    }\n\n    case 'DOCUMENT_DELETED': {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const {[action.id]: _, ...restDocuments} = state.documents\n\n      return {\n        ...state,\n        documents: restDocuments,\n      }\n    }\n\n    case 'DOCUMENT_UPDATED': {\n      const updatedDocument = action.payload\n      const id = updatedDocument._id as string\n      const document = state.documents[id]\n\n      const nextDocument = {\n        // Add existing document data\n        ...document,\n        // Add incoming document data\n        ...updatedDocument,\n      } satisfies SanityDocument\n\n      return {\n        ...state,\n        documents: {\n          ...state.documents,\n          [id]: nextDocument,\n        },\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nconst LISTEN_OPTIONS: ListenOptions = {\n  events: ['welcome', 'mutation', 'reconnect'],\n  includeResult: true,\n  visibility: 'query',\n  includeAllVersions: true,\n  tag: 'document-sheet-list-store',\n}\n\n/**\n * TODO:\n * [] Lazy load more documents, reduce initial fetch.\n * [] Add support for sorting and filtering.\n * []  Make a projection of the query according to the schema. e.g. get only the primitive fields and the _id to reduce the data payload.\n */\nexport function useDocumentSheetListStore({\n  filter,\n  params,\n  apiVersion,\n}: {\n  filter: string\n  params?: Record<string, unknown>\n  apiVersion?: string\n}) {\n  const QUERY = `*[${filter}][0...2000]`\n  const client = useClient({\n    ...DEFAULT_STUDIO_CLIENT_OPTIONS,\n    apiVersion: apiVersion || DEFAULT_STUDIO_CLIENT_OPTIONS.apiVersion,\n  })\n  const [state, dispatch] = useReducer(documentsReducer, {\n    documents: {},\n  })\n  const [isLoading, setIsLoading] = useState<boolean>(client !== null)\n  const [error, setError] = useState<Error | null>(null)\n\n  const initialFetch = useCallback(async () => {\n    if (!client) {\n      setIsLoading(false)\n      return\n    }\n    try {\n      const res = await client.fetch(QUERY, params)\n      dispatch({type: 'DOCUMENTS_SET', documents: res})\n      setIsLoading(false)\n    } catch (err) {\n      setError(err)\n    }\n  }, [client, params, QUERY])\n\n  const handleListenerEvent = useCallback(\n    async (event: ListenEvent<Record<string, SanityDocument>>) => {\n      // Fetch all documents on initial connection\n      if (event.type === 'welcome') {\n        setIsLoading(true)\n        await initialFetch()\n        setIsLoading(false)\n      }\n\n      // The reconnect event means that we are trying to reconnect to the realtime listener.\n      // In this case we set loading to true to indicate that we're trying to\n      // reconnect. Once a connection has been established, the welcome event\n      // will be received and we'll fetch all documents again (above).\n      if (event.type === 'reconnect') {\n        setIsLoading(true)\n      }\n\n      // Handle mutations (create, update, delete) from the realtime listener\n      // and update the documents store accordingly\n      if (event.type === 'mutation') {\n        if (event.transition === 'appear') {\n          const nextDocument = event.result as SanityDocument | undefined\n\n          if (nextDocument) {\n            dispatch({\n              type: 'DOCUMENT_RECEIVED',\n              payload: nextDocument,\n            })\n          }\n        }\n\n        if (event.transition === 'disappear') {\n          dispatch({type: 'DOCUMENT_DELETED', id: event.documentId})\n        }\n\n        if (event.transition === 'update') {\n          const updatedDocument = event.result as SanityDocument | undefined\n\n          if (updatedDocument) {\n            dispatch({\n              type: 'DOCUMENT_UPDATED',\n              payload: updatedDocument,\n            })\n          }\n        }\n      }\n    },\n    [initialFetch],\n  )\n\n  const listener$ = useMemo(() => {\n    if (!client) return of()\n\n    const events$ = client.observable.listen(QUERY, params, LISTEN_OPTIONS).pipe(\n      catchError((err) => {\n        setError(err)\n        return of(err)\n      }),\n    )\n\n    return events$\n  }, [client, params, QUERY])\n\n  useEffect(() => {\n    const sub = listener$.subscribe(handleListenerEvent)\n\n    return () => {\n      sub?.unsubscribe()\n    }\n  }, [handleListenerEvent, listener$])\n\n  // Contemplate that we could have drafts and live documents here, merge them.\n  const dataAsArray = useMemo(() => {\n    // Joins the drafts and the live documents\n    const uniques = Object.keys(state.documents).reduce(\n      (acc: {[key: string]: SanityDocument}, key) => {\n        const document = state.documents[key]\n        const isDraft = document._id === getDraftId(document._id)\n        const id = isDraft ? document._id : getDraftId(document._id)\n        // If we already have the document, and this document is not the draft one, it means\n        // the draft hast already been added to the list, so we skip it.\n        if (acc[id] && !isDraft) {\n          return acc\n        }\n        acc[id] = document\n        return acc\n      },\n      {},\n    )\n    return Object.values(uniques)\n  }, [state.documents])\n\n  return {\n    data: dataAsArray,\n    isLoading,\n    error,\n  }\n}\n","import {useMemo} from 'react'\nimport {getPublishedId, useSearchState} from 'sanity'\n\nimport {useDocumentSheetListStore} from './useDocumentSheetListStore'\n\ninterface DocumentSheetListOptions {\n  /** The schemaType.name  */\n  typeName: string\n}\n\nexport function useDocumentSheetList({typeName}: DocumentSheetListOptions) {\n  const {state} = useSearchState()\n\n  const items = useMemo(() => {\n    const map = new Map()\n    state.result.hits.forEach((h) => map.set(getPublishedId(h.hit._id), h.hit))\n    return map\n  }, [state.result.hits])\n\n  // The store is listening to all the documents that match with the _type filter.\n  const {data, isLoading} = useDocumentSheetListStore({\n    filter: `_type == \"${typeName}\"`,\n  })\n\n  // Only return the documents that match with the serverSide filter items.\n  const documents = useMemo(() => {\n    return data.filter((doc) => items.has(getPublishedId(doc._id)))\n  }, [data, items])\n\n  return {data: documents, isLoading}\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {isDocumentSchemaType, type ObjectSchemaType, type SanityDocument} from '@sanity/types'\nimport {Box, Flex, Text} from '@sanity/ui'\nimport {\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  type Row,\n  useReactTable,\n} from '@tanstack/react-table'\nimport {useCallback, useEffect, useState} from 'react'\nimport {SearchProvider, useSchema, useSearchState} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {type BaseStructureToolPaneProps} from '../../types'\nimport {ColumnsControl} from './ColumnsControl'\nimport {DocumentSheetListFilter} from './DocumentSheetListFilter'\nimport {DocumentSheetListHeader} from './DocumentSheetListHeader'\nimport {DocumentSheetListPaginator} from './DocumentSheetListPaginator'\nimport {DocumentSheetListProvider} from './DocumentSheetListProvider'\nimport {SheetListCell} from './SheetListCell'\nimport {useDocumentSheetColumns} from './useDocumentSheetColumns'\nimport {useDocumentSheetList} from './useDocumentSheetList'\n\ntype DocumentSheetListPaneProps = BaseStructureToolPaneProps<'documentList'>\n\nconst PaneContainer = styled(Flex)`\n  height: 100%;\n`\nconst TableContainer = styled.div`\n  overflow: auto; //our scrollable table container\n  position: relative; //needed for sticky header\n`\nconst Table = styled.table`\n  border-collapse: separate;\n  border-spacing: 0;\n  font-family: arial, sans-serif;\n  white-space: nowrap;\n  width: 100%;\n  border: 1px solid lightgray;\n\n  thead {\n    display: grid;\n    position: sticky;\n    top: 0;\n    z-index: 10;\n  }\n  tr {\n    padding: 0;\n  }\n  tr:last-child {\n    border-bottom: none;\n  }\n`\n\nfunction DocumentSheetListPaneInner({\n  documentSchemaType,\n}: DocumentSheetListPaneProps & {documentSchemaType: ObjectSchemaType}) {\n  const {dispatch, state} = useSearchState()\n  const {columns, initialColumnsVisibility} = useDocumentSheetColumns(documentSchemaType)\n  const {data} = useDocumentSheetList({\n    typeName: documentSchemaType.name,\n  })\n  const [selectedAnchor, setSelectedAnchor] = useState<number | null>(null)\n\n  const totalRows = state.result.hits.length\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    // Avoids resetting the page index when the data changes, e.g. a mutation is received\n    autoResetPageIndex: false,\n    initialState: {\n      columnPinning: {left: ['selected', 'Preview']},\n      pagination: {pageSize: 25},\n      columnVisibility: initialColumnsVisibility,\n    },\n    getRowId: (row) => row._id,\n    meta: {\n      selectedAnchor,\n      setSelectedAnchor,\n      patchDocument: (documentId, fieldId, value) => null,\n    },\n  })\n\n  const {rows} = table.getRowModel()\n\n  useEffect(() => {\n    dispatch({type: 'TERMS_TYPE_ADD', schemaType: documentSchemaType})\n    return () => {\n      dispatch({type: 'TERMS_TYPE_REMOVE', schemaType: documentSchemaType})\n    }\n  }, [documentSchemaType, dispatch])\n\n  const renderRow = useCallback((row: Row<SanityDocument>) => {\n    return (\n      <Box\n        as=\"tr\"\n        key={row.original._id + row.id}\n        paddingY={2}\n        style={{display: 'flex', width: '100%'}}\n      >\n        {row.getVisibleCells().map((cell) => (\n          <SheetListCell {...cell} key={row.original._id + cell.id} />\n        ))}\n      </Box>\n    )\n  }, [])\n\n  const rowsCount = `Total: ${totalRows} rows, showing ${rows.length} rows`\n  return (\n    <PaneContainer direction=\"column\" paddingX={3} data-testid=\"document-sheet-list-pane\">\n      <Flex direction=\"row\" align=\"center\" paddingY={3} paddingX={1} justify=\"space-between\">\n        <Flex direction=\"row\" align=\"center\">\n          <DocumentSheetListFilter />\n          <Text size={0} muted>\n            {rowsCount}\n          </Text>\n        </Flex>\n        <ColumnsControl table={table} />\n      </Flex>\n      <TableContainer>\n        <DocumentSheetListProvider table={table}>\n          <Table>\n            <thead>\n              {table.getHeaderGroups().map((headerGroup) => (\n                <Box as=\"tr\" key={headerGroup.id}>\n                  {headerGroup.headers.map((header) => (\n                    <DocumentSheetListHeader\n                      key={header.id}\n                      header={header}\n                      headerGroup={headerGroup}\n                    />\n                  ))}\n                </Box>\n              ))}\n            </thead>\n            <tbody>{table.getRowModel().rows.map(renderRow)}</tbody>\n          </Table>\n        </DocumentSheetListProvider>\n      </TableContainer>\n      <Flex justify={'flex-end'} padding={3} gap={4} paddingY={5}>\n        <DocumentSheetListPaginator table={table} />\n      </Flex>\n    </PaneContainer>\n  )\n}\n\nexport function DocumentSheetListPane(props: DocumentSheetListPaneProps) {\n  const schema = useSchema()\n  const typeName = props.pane.schemaTypeName\n\n  const schemaType = schema.get(typeName)\n  if (!schemaType || !isDocumentSchemaType(schemaType)) {\n    throw new Error(`Schema type \"${typeName}\" not found or not a document schema`)\n  }\n  return (\n    <SearchProvider>\n      <DocumentSheetListPaneInner {...props} documentSchemaType={schemaType} />\n    </SearchProvider>\n  )\n}\n","import {Card, Code} from '@sanity/ui'\nimport {isEqual} from 'lodash'\nimport {memo, useMemo, useState} from 'react'\nimport {\n  EMPTY_ARRAY,\n  type GeneralDocumentListLayoutKey,\n  SourceProvider,\n  useI18nText,\n  useSource,\n} from 'sanity'\nimport shallowEquals from 'shallow-equals'\n\nimport {Pane} from '../../components/pane'\nimport {_DEBUG} from '../../constants'\nimport {type PaneMenuItem} from '../../types'\nimport {useStructureToolSetting} from '../../useStructureToolSetting'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {DEFAULT_ORDERING, EMPTY_RECORD} from './constants'\nimport {DocumentListPane} from './DocumentListPane'\nimport {findStaticTypesInFilter} from './helpers'\nimport {PaneHeader} from './PaneHeader'\nimport {DocumentSheetListPane} from './sheetList/DocumentSheetListPane'\nimport {type SortOrder} from './types'\n\nconst addSelectedStateToMenuItems = (options: {\n  menuItems?: PaneMenuItem[]\n  sortOrderRaw?: SortOrder\n  layout?: GeneralDocumentListLayoutKey\n}) => {\n  const {menuItems, sortOrderRaw, layout} = options\n\n  return menuItems?.map((item) => {\n    if (item.params?.layout) {\n      return {\n        ...item,\n        selected: layout === item.params?.layout,\n      }\n    }\n\n    if (item?.params?.by) {\n      return {\n        ...item,\n        selected: isEqual(sortOrderRaw?.by, item?.params?.by || EMPTY_ARRAY),\n      }\n    }\n\n    return {...item, selected: false}\n  })\n}\n\nexport function useShallowUnique<ValueType>(value: ValueType): ValueType {\n  const [previous, setPrevious] = useState<ValueType>(value)\n  if (!shallowEquals(previous, value)) {\n    setPrevious(value)\n    return value\n  }\n  return previous\n}\n\n/**\n * @internal\n */\nexport const PaneContainer = memo(function PaneContainer(\n  props: BaseStructureToolPaneProps<'documentList'>,\n) {\n  const {index, isSelected, pane, paneKey} = props\n  const {name: parentSourceName} = useSource()\n\n  const {\n    defaultLayout = 'default',\n    initialValueTemplates = EMPTY_ARRAY,\n    menuItemGroups,\n    menuItems,\n    options,\n  } = pane\n  const {defaultOrdering = EMPTY_ARRAY, filter} = options\n  const params = useShallowUnique(options.params || EMPTY_RECORD)\n  const sourceName = pane.source\n  const typeName = useMemo(() => {\n    const staticTypes = findStaticTypesInFilter(filter, params)\n    if (staticTypes?.length === 1) return staticTypes[0]\n    return null\n  }, [filter, params])\n\n  const [layout, setLayout] = useStructureToolSetting<GeneralDocumentListLayoutKey>(\n    'layout',\n    typeName ?? pane.id, //pane.id for anything that is not documentTypeList\n    defaultLayout,\n  )\n\n  const {title} = useI18nText(pane)\n\n  // Ensure that we use the defaultOrdering value from structure builder if any as the default\n  const defaultSortOrder = useMemo(() => {\n    return defaultOrdering?.length > 0 ? {by: defaultOrdering} : DEFAULT_ORDERING\n  }, [defaultOrdering])\n\n  const [sortOrderRaw, setSortOrder] = useStructureToolSetting<SortOrder>(\n    'sort-order',\n    typeName ?? pane.id, //pane.id for anything that is not documentTypeList\n    defaultSortOrder,\n  )\n\n  const menuItemsWithSelectedState = useMemo(\n    () =>\n      addSelectedStateToMenuItems({\n        menuItems,\n        sortOrderRaw,\n        layout,\n      }),\n    [layout, menuItems, sortOrderRaw],\n  )\n\n  const isSheetListLayout = layout === 'sheetList'\n  const paneLayout = isSheetListLayout ? (\n    <DocumentSheetListPane {...props} key={props.pane.id} />\n  ) : (\n    <DocumentListPane {...props} sortOrder={sortOrderRaw} layout={layout} />\n  )\n\n  return (\n    <SourceProvider name={sourceName || parentSourceName}>\n      <Pane\n        data-ui=\"DocumentListPane\"\n        id={paneKey}\n        minWidth={320}\n        {...(isSheetListLayout ? {} : {currentMaxWidth: 350, maxWidth: 640})}\n        selected={isSelected}\n      >\n        {_DEBUG && (\n          <Card padding={4} tone=\"transparent\">\n            <Code>{pane.source || '(none)'}</Code>\n          </Card>\n        )}\n\n        <PaneHeader\n          index={index}\n          initialValueTemplates={initialValueTemplates}\n          menuItemGroups={menuItemGroups}\n          menuItems={menuItemsWithSelectedState}\n          setLayout={setLayout}\n          setSortOrder={setSortOrder}\n          title={title}\n        />\n        {paneLayout}\n      </Pane>\n    </SourceProvider>\n  )\n})\nPaneContainer.displayName = 'Memo(PaneContainer)'\n","import {type DocumentBadgeComponent} from 'sanity'\n\n/** @internal */\nexport const LiveEditBadge: DocumentBadgeComponent = (props) => {\n  const {liveEditSchemaType, version} = props\n\n  if (liveEditSchemaType && !version) {\n    return {\n      label: 'Live',\n      color: 'danger',\n    }\n  }\n\n  return null\n}\nLiveEditBadge.displayName = 'LiveEditBadge'\n","import {uuid} from '@sanity/uuid'\n\nimport {EMPTY_PARAMS, type LOADING_PANE} from './constants'\nimport {type PaneNode, type RouterPanes} from './types'\n\nconst state: {\n  activePanes: Array<PaneNode | typeof LOADING_PANE>\n} = {activePanes: []}\n\nexport function setActivePanes(panes: Array<PaneNode | typeof LOADING_PANE>): void {\n  state.activePanes = panes\n}\n\n/**\n * This function looks at the _active panes_ to resolve an intent. this type of\n * intent resolution is faster and does not cause the panes to reset\n *\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  routerState: {panes?: RouterPanes} | undefined,\n  payload: unknown,\n): {panes: RouterPanes} | {intent: string; params: Record<string, string>; payload: unknown} {\n  const panes = routerState?.panes || []\n  const activePanes = state.activePanes || []\n  const editDocumentId = params.id || uuid()\n\n  // Loop through open panes and see if any of them can handle the intent\n  for (let i = activePanes.length - 1; i >= 0; i--) {\n    const pane = activePanes[i]\n\n    if (typeof pane !== 'object') continue\n\n    // NOTE: if you update this logic, please also update the similar handler in\n    // `resolveIntent.ts`\n    if (\n      pane.canHandleIntent?.(intent, params, {\n        pane,\n        index: i,\n      }) ||\n      // see `resolveIntent.ts` for more info\n      (pane.type === 'documentList' &&\n        pane.schemaTypeName === params.type &&\n        pane.options.filter === '_type == $type')\n    ) {\n      const paneParams = getPaneParams(intent, params)\n\n      return {\n        panes: panes\n          .slice(0, i)\n          .concat([[{id: editDocumentId, params: paneParams, payload}]]) as RouterPanes,\n      }\n    }\n  }\n\n  return {intent: intent, params, payload}\n}\n\nfunction getPaneParams(\n  intent: string,\n  {template, version}: Record<string, string>,\n): {template?: string; version?: string} {\n  if (intent !== 'create') return EMPTY_PARAMS\n  if (template && version) return {template, version}\n  if (template) return {template}\n  if (version) return {version}\n  return EMPTY_PARAMS\n}\n","import {type ObjectDiff} from '@sanity/diff'\nimport {BoundaryElementProvider, Box, Card, Flex, Text} from '@sanity/ui'\nimport {useMemo, useState} from 'react'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  type DocumentChangeContextInstance,\n  LoadingBlock,\n  NoChanges,\n  type ObjectSchemaType,\n  ScrollContainer,\n  usePerspective,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\nimport {DocumentChangeContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {TimelineMenu} from '../../timeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nconst Grid = styled(Box)`\n  &:not([hidden]) {\n    display: grid;\n  }\n  grid-template-columns: 48px 1fr;\n  align-items: center;\n  gap: 0.25em;\n`\n\nexport function ChangesInspector({showChanges}: {showChanges: boolean}): React.JSX.Element {\n  const {documentId, schemaType, timelineError, timelineStore, value} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n\n  const rev = useTimelineSelector(timelineStore, (state) => state.revTime)\n  const diff = useTimelineSelector(timelineStore, (state) => state.diff)\n  const onOlderRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n  const selectionState = useTimelineSelector(timelineStore, (state) => state.selectionState)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n  const loading = selectionState === 'loading'\n  const isComparingCurrent = !onOlderRevision\n\n  // Note that we are using the studio core namespace here, as changes theoretically should\n  // be part of Sanity core (needs to be moved from structure at some point)\n  const {t: structureT} = useTranslation(structureLocaleNamespace)\n\n  const documentContext: DocumentChangeContextInstance = useMemo(\n    () => ({\n      documentId,\n      schemaType,\n      FieldWrapper: ChangeFieldWrapper,\n      rootDiff: diff,\n      isComparingCurrent,\n      value,\n      showFromValue: true,\n    }),\n    [documentId, diff, isComparingCurrent, schemaType, value],\n  )\n\n  if (selectedReleaseId) {\n    return (\n      <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n        <Card flex={1} padding={2} paddingTop={0}>\n          <TimelineError versionError />\n        </Card>\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <Box padding={3}>\n        <Grid paddingX={2} paddingBottom={2}>\n          <Text size={1} muted>\n            {structureT('changes.from.label')}\n          </Text>\n\n          <TimelineMenu mode=\"since\" chunk={sinceTime} placement=\"bottom-start\" />\n          <Text size={1} muted>\n            {structureT('changes.to.label')}\n          </Text>\n          <TimelineMenu chunk={rev} mode=\"rev\" placement=\"bottom-end\" />\n        </Grid>\n      </Box>\n\n      <Card flex={1} paddingX={2} paddingY={2}>\n        <BoundaryElementProvider element={scrollRef}>\n          <Scroller data-ui=\"Scroller\" ref={setScrollRef}>\n            <Box flex={1} paddingX={3} height=\"fill\">\n              {showChanges && (\n                <Content\n                  diff={diff}\n                  documentContext={documentContext}\n                  error={timelineError}\n                  loading={loading}\n                  schemaType={schemaType}\n                />\n              )}\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </Card>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  diff,\n  documentContext,\n  loading,\n  schemaType,\n}: {\n  error?: Error | null\n  diff: ObjectDiff<any> | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n  schemaType: ObjectSchemaType\n}) {\n  if (error) {\n    return <NoChanges />\n  }\n\n  if (loading) {\n    return <LoadingBlock showText />\n  }\n\n  if (!diff) {\n    return <NoChanges />\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <ChangeList diff={diff} schemaType={schemaType} />\n    </DocumentChangeContext.Provider>\n  )\n}\n","import {Card, Flex} from '@sanity/ui'\nimport {type MouseEvent, useCallback} from 'react'\nimport {\n  type DocumentGroupEvent,\n  Event,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  useTranslation,\n} from 'sanity'\n\nimport {Tooltip} from '../../../../../ui-components'\n\nexport interface TimelineItemProps {\n  event: DocumentGroupEvent\n  isSelected: boolean\n  onSelect: (chunk: DocumentGroupEvent) => void\n  optionsMenu?: React.ReactNode\n}\n\nconst getIsSelectable = (event: DocumentGroupEvent) => {\n  return (\n    !isDeleteDocumentVersionEvent(event) &&\n    !isDeleteDocumentGroupEvent(event) &&\n    !isUnpublishDocumentEvent(event) &&\n    !isScheduleDocumentVersionEvent(event) &&\n    !isUnscheduleDocumentVersionEvent(event)\n  )\n}\n\nexport function EventTimelineItem({event, isSelected, onSelect, optionsMenu}: TimelineItemProps) {\n  const {t} = useTranslation('studio')\n  const isSelectable = getIsSelectable(event)\n  const handleClick = useCallback(\n    (evt: MouseEvent<HTMLDivElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (isSelectable) {\n        onSelect(event)\n      }\n    },\n    [onSelect, event, isSelectable],\n  )\n  return (\n    <Tooltip content={isSelectable ? '' : t('changes.not-selectable')} disabled={isSelectable}>\n      <Flex gap={1}>\n        <Card\n          as={isSelectable ? 'button' : 'div'}\n          onClick={handleClick}\n          padding={2}\n          pressed={isSelected}\n          radius={2}\n          data-ui=\"timelineItem\"\n          data-testid=\"timeline-item-button\"\n          data-chunk-timestamp={event.timestamp}\n          style={{\n            cursor: isSelectable ? 'pointer' : 'default',\n          }}\n        >\n          <Event event={event} showChangesBy=\"tooltip\" />\n        </Card>\n        {optionsMenu}\n      </Flex>\n    </Tooltip>\n  )\n}\n","import {\n  Flex,\n  Menu,\n  // eslint-disable-next-line no-restricted-imports\n  MenuItem,\n  Text,\n  usePortal,\n} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {\n  ContextMenuButton,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  type PublishDocumentVersionEvent,\n  RELEASES_INTENT,\n  Translate,\n  useSetPerspective,\n  useTranslation,\n  VersionInlineBadge,\n} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {MenuButton} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {TIMELINE_MENU_PORTAL} from '../timelineMenu'\n\nexport function PublishedEventMenu({event}: {event: PublishDocumentVersionEvent}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const portalContext = usePortal()\n  const {params, setParams} = usePaneRouter()\n  const setPerspective = useSetPerspective()\n\n  const handleOpenReleaseDocument = useCallback(() => {\n    setParams({\n      ...params,\n      rev: event.versionRevisionId || '@lastPublished',\n      since: undefined,\n      historyEvent: event.id,\n      historyVersion: getVersionFromId(event.versionId),\n    })\n  }, [setParams, params, event])\n\n  const handleOpenDraftDocument = useCallback(() => {\n    setParams({\n      ...params,\n      rev: event.versionRevisionId,\n      preserveRev: 'true',\n      since: undefined,\n    })\n    setTimeout(() => {\n      // A bug is generated when we change the perspective and the params at the same time\n      // Resetting the params to the value it had before, because the paneRouter uses the previous value\n      setPerspective('drafts')\n    }, 100)\n  }, [setParams, params, event.versionRevisionId, setPerspective])\n\n  const VersionBadge = ({children}: {children: React.ReactNode}) => {\n    return (\n      <VersionInlineBadge $tone={event.release ? getReleaseTone(event.release) : undefined}>\n        {children}\n      </VersionInlineBadge>\n    )\n  }\n  return (\n    <MenuButton\n      id={`timeline-item-menu-button-${event.versionId}`}\n      button={\n        <ContextMenuButton\n          aria-label={t('timeline-item.menu-button.aria-label')}\n          tooltipProps={{content: t('timeline-item.menu-button.tooltip')}}\n        />\n      }\n      menu={\n        <Menu padding={1}>\n          {event.release ? (\n            <>\n              <IntentLink\n                intent={RELEASES_INTENT}\n                params={{id: getReleaseIdFromReleaseDocumentId(event.release._id)}}\n                style={{textDecoration: 'none'}}\n              >\n                <MenuItem padding={3}>\n                  <Flex align={'center'} justify=\"flex-start\">\n                    <Text size={1} style={{textDecoration: 'none'}}>\n                      <Translate\n                        components={{\n                          VersionBadge: ({children}) => <VersionBadge>{children}</VersionBadge>,\n                        }}\n                        i18nKey=\"events.open.release\"\n                        values={{\n                          releaseTitle:\n                            event.release.metadata.title ||\n                            t('release.placeholder-untitled-release'),\n                        }}\n                        t={t}\n                      />\n                    </Text>\n                  </Flex>\n                </MenuItem>\n              </IntentLink>\n              <MenuItem onClick={handleOpenReleaseDocument}>\n                <Flex align={'center'} justify=\"flex-start\">\n                  <Text size={1}>\n                    <Translate\n                      components={{\n                        VersionBadge: ({children}) => <VersionBadge>{children}</VersionBadge>,\n                      }}\n                      i18nKey=\"events.inspect.release\"\n                      values={{\n                        releaseTitle:\n                          event.release.metadata.title || t('release.placeholder-untitled-release'),\n                      }}\n                      t={t}\n                    />\n                  </Text>\n                </Flex>\n              </MenuItem>\n            </>\n          ) : (\n            <MenuItem onClick={handleOpenDraftDocument} disabled={!event.versionRevisionId}>\n              <Flex align={'center'}>\n                <Text size={1}>\n                  <Translate\n                    components={{\n                      VersionBadge: ({children}) => (\n                        <VersionInlineBadge $tone=\"caution\">{children}</VersionInlineBadge>\n                      ),\n                    }}\n                    i18nKey=\"events.open.draft\"\n                    t={t}\n                  />\n                </Text>\n              </Flex>\n            </MenuItem>\n          )}\n        </Menu>\n      }\n      popover={{\n        // when used inside the timeline menu we want to keep the element inside the popover, to avoid closing the popover when clicking expand.\n        portal: portalContext.elements?.[TIMELINE_MENU_PORTAL] ? TIMELINE_MENU_PORTAL : true,\n        placement: 'bottom',\n        fallbackPlacements: ['bottom-end', 'bottom-start'],\n      }}\n    />\n  )\n}\n","import {Box, Flex, Spinner, Stack, Text} from '@sanity/ui'\nimport {motion, type Variants} from 'framer-motion'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  CommandList,\n  type CommandListRenderItemCallback,\n  type DocumentGroupEvent,\n  getDocumentVariantType,\n  isCreateDocumentVersionEvent,\n  isEditDocumentVersionEvent,\n  isPublishDocumentVersionEvent,\n  LoadingBlock,\n  useTranslation,\n} from 'sanity'\n\nimport {ExpandableTimelineItemButton} from '../expandableTimelineItemButton'\nimport {ListWrapper, Root} from '../timeline.styled'\nimport {EventTimelineItem} from './EventTimelineItem'\nimport {PublishedEventMenu} from './PublishedEventMenu'\n\ninterface TimelineProps {\n  events: DocumentGroupEvent[]\n  hasMoreEvents: boolean | null\n  selectedEventId?: string\n  onLoadMore: () => void\n  onSelect: (event: DocumentGroupEvent) => void\n  fetchEventChildren: (event: DocumentGroupEvent) => Promise<void>\n  /**\n   * The list needs a predefined max height for the scroller to work.\n   */\n  listMaxHeight?: string\n}\n\nconst TimelineItemWrapper = motion.create(Box)\nconst CHILDREN_ITEMS_VARIANTS: Variants = {\n  initial: {\n    opacity: 0,\n  },\n  animate: {\n    opacity: 1,\n  },\n  exit: {\n    opacity: 0,\n  },\n}\n\nconst ITEM_HEIGHT = 57\n\nexport const TIMELINE_LIST_WRAPPER_ID = 'timeline-list-wrapper'\n\nexport const EventsTimeline = ({\n  events: allEvents,\n  hasMoreEvents,\n  selectedEventId,\n  onLoadMore,\n  onSelect,\n  listMaxHeight = 'calc(100vh - 280px)',\n  fetchEventChildren,\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n  const {t} = useTranslation('studio')\n  const [expandedParents, setExpandedParents] = useState<Set<string>>(() => {\n    if (selectedEventId) {\n      // Find that event and if it has a parent, expand the parent.\n      const selectedEvent = allEvents.find((event) => event.id === selectedEventId)\n      if (selectedEvent && 'parentId' in selectedEvent && selectedEvent.parentId) {\n        return new Set([selectedEvent.parentId])\n      }\n    }\n    return new Set()\n  })\n  const [expandingParents, setExpandingParents] = useState<Set<string>>(new Set())\n\n  const events = useMemo(() => {\n    return allEvents.filter((event) => {\n      if (isCreateDocumentVersionEvent(event) && event.parentId) {\n        // Check if it's the last event in the list, in that case, we want to show it\n        const isLastEvent = allEvents[allEvents.length - 1].id === event.id\n        if (isLastEvent) return true\n        return expandedParents.has(event.parentId)\n      }\n      if (isEditDocumentVersionEvent(event) && event.parentId) {\n        return expandedParents.has(event.parentId)\n      }\n      return true\n    })\n  }, [expandedParents, allEvents])\n\n  const handleExpandParent = useCallback(\n    (event: DocumentGroupEvent) => async () => {\n      const parentId = event.id\n\n      let isExpanding = false\n      setExpandedParents((prev) => {\n        const next = new Set(prev)\n\n        if (prev.has(parentId)) next.delete(parentId)\n        else {\n          isExpanding = true\n          next.add(parentId)\n        }\n\n        return next\n      })\n      if (isExpanding) {\n        setExpandingParents((prev) => {\n          const next = new Set(prev)\n          next.add(parentId)\n          return next\n        })\n        await fetchEventChildren(event)\n        setExpandingParents((prev) => {\n          const next = new Set(prev)\n          next.delete(parentId)\n          return next\n        })\n      }\n    },\n    [fetchEventChildren, setExpandingParents],\n  )\n\n  const handleSelectChunk = useCallback(\n    (event: DocumentGroupEvent) => {\n      onSelect(event)\n    },\n    [onSelect],\n  )\n\n  const renderOptionsMenu = useCallback(\n    (event: DocumentGroupEvent) => {\n      const documentVariantType = getDocumentVariantType(event.documentId)\n      if (isPublishDocumentVersionEvent(event) && documentVariantType === 'published') {\n        return <PublishedEventMenu event={event} />\n      }\n      if (\n        isPublishDocumentVersionEvent(event) &&\n        documentVariantType === 'draft' &&\n        event.creationEvent\n      ) {\n        return (\n          <ExpandableTimelineItemButton\n            isExpanded={expandedParents.has(event.id)}\n            onExpand={handleExpandParent(event)}\n          />\n        )\n      }\n      return null\n    },\n    [expandedParents, handleExpandParent],\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<DocumentGroupEvent[][number]>>(\n    (event, {activeIndex}) => {\n      /**\n       * The create version event will be present while expanding (loading the edits), so we are attaching to it the loading block at the top.\n       * - publishEvent (expanding?)\n       * --- loadingBlock  ~createEvent~\n       * */\n      const showExpandingLoader =\n        isCreateDocumentVersionEvent(event) &&\n        event.parentId &&\n        expandingParents.has(event.parentId)\n\n      const isLastEvent = activeIndex === events.length - 1\n      if (showExpandingLoader) {\n        return (\n          <TimelineItemWrapper\n            animate={{opacity: 1}}\n            initial={{opacity: 0}}\n            transition={{duration: 0.2, delay: 0.2}}\n          >\n            {/* We need this item to match the same height as the rest of the list items, which is 57px */}\n            <Flex align=\"center\" justify=\"center\" style={{height: ITEM_HEIGHT}}>\n              <Spinner />\n            </Flex>\n          </TimelineItemWrapper>\n        )\n      }\n      return (\n        <TimelineItemWrapper\n          paddingBottom={1}\n          paddingRight={1}\n          key={event.timestamp}\n          animate=\"animate\"\n          exit=\"exit\"\n          initial=\"initial\"\n          variants={'parentId' in event ? CHILDREN_ITEMS_VARIANTS : undefined}\n          paddingLeft={\n            (isEditDocumentVersionEvent(event) || isCreateDocumentVersionEvent(event)) &&\n            event.parentId &&\n            !isLastEvent\n              ? 4\n              : 1\n          }\n        >\n          <EventTimelineItem\n            event={event}\n            isSelected={event.id === selectedEventId}\n            onSelect={handleSelectChunk}\n            optionsMenu={renderOptionsMenu(event)}\n          />\n\n          {isLastEvent && hasMoreEvents && <LoadingBlock />}\n        </TimelineItemWrapper>\n      )\n    },\n    [\n      expandingParents,\n      selectedEventId,\n      handleSelectChunk,\n      renderOptionsMenu,\n      events.length,\n      hasMoreEvents,\n    ],\n  )\n\n  useEffect(() => setMounted(true), [])\n  const selectedIndex = events.findIndex((event) => event.id === selectedEventId)\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {events.length > 0 ? (\n        <ListWrapper direction=\"column\" $maxHeight={listMaxHeight} id={TIMELINE_LIST_WRAPPER_ID}>\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={t('timeline.list.aria-label')}\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={ITEM_HEIGHT}\n            items={events}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      ) : (\n        <Stack padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </Stack>\n      )}\n    </Root>\n  )\n}\n\nEventsTimeline.displayName = 'EventsTimeline'\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  Flex,\n  type Placement,\n  PortalProvider,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useToast,\n} from '@sanity/ui'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentGroupEvent,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  TIMELINE_ITEM_I18N_KEY_MAPPING,\n  useEvents,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Popover} from '../../../../../ui-components'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {TimelineError} from '../TimelineError'\nimport {EventsTimeline} from './EventsTimeline'\n\ninterface TimelineMenuProps {\n  event: DocumentGroupEvent | null\n  events: DocumentGroupEvent[]\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport const TIMELINE_MENU_PORTAL = 'timeline-menu'\n\nconst formatParams = {\n  timestamp: {dateStyle: 'medium', timeStyle: 'short'},\n}\n\nexport function EventsTimelineMenu({event, events, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popoverRef, setPopoverRef] = useState<HTMLElement | null>(null)\n  const toast = useToast()\n  const {\n    nextCursor,\n    loading,\n    error: eventsError,\n    findRangeForRevision,\n    findRangeForSince,\n    loadMoreEvents,\n    expandEvent,\n  } = useEvents()\n\n  const {t} = useTranslation('studio')\n\n  const handleOpen = useCallback(() => {\n    setOpen(true)\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [])\n\n  const handleGlobalKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      if (open && (e.key === 'Escape' || e.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(open && handleClose, () => [button, popoverRef])\n\n  const selectRev = useCallback(\n    (revEvent: DocumentGroupEvent) => {\n      try {\n        if (\n          isDeleteDocumentVersionEvent(revEvent) ||\n          isDeleteDocumentGroupEvent(revEvent) ||\n          isUnpublishDocumentEvent(revEvent) ||\n          isScheduleDocumentVersionEvent(revEvent) ||\n          isUnscheduleDocumentVersionEvent(revEvent)\n        ) {\n          console.error('Event is not selectable')\n          return\n        }\n        const [since, rev] = findRangeForRevision(revEvent?.id)\n        setTimelineRange(since, rev)\n        handleClose()\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [t, toast, setTimelineRange, findRangeForRevision, handleClose],\n  )\n\n  const selectSince = useCallback(\n    (sinceEvent: DocumentGroupEvent) => {\n      try {\n        const [since, rev] = findRangeForSince(sinceEvent.id)\n        setTimelineRange(since, rev)\n        handleClose()\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [findRangeForSince, setTimelineRange, toast, t, handleClose],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading && nextCursor) {\n      loadMoreEvents()\n    }\n  }, [loading, loadMoreEvents, nextCursor])\n\n  const content = useMemo(() => {\n    if (eventsError) return <TimelineError />\n\n    return (\n      <EventsTimeline\n        events={events}\n        fetchEventChildren={expandEvent}\n        hasMoreEvents={Boolean(nextCursor)}\n        selectedEventId={event?.id}\n        onLoadMore={handleLoadMore}\n        onSelect={mode === 'rev' ? selectRev : selectSince}\n      />\n    )\n  }, [\n    eventsError,\n    mode,\n    expandEvent,\n    events,\n    nextCursor,\n    event?.id,\n    handleLoadMore,\n    selectSince,\n    selectRev,\n  ])\n\n  const revLabel = event\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[event.type], {\n        context: 'timestamp',\n        timestamp: new Date(event.timestamp),\n        formatParams,\n      })\n    : t('timeline.latest-revision')\n\n  // eslint-disable-next-line no-nested-ternary\n  const sinceLabel = event\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[event.type], {\n        context: 'timestamp',\n        timestamp: new Date(event.timestamp),\n        formatParams,\n      })\n    : events.length > 0\n      ? t('timeline.since-version-missing')\n      : t('timeline.no-previous-events')\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n\n  return (\n    <PortalProvider __unstable_elements={{[TIMELINE_MENU_PORTAL]: popoverRef}}>\n      <Root\n        data-testid=\"timeline-menu\"\n        constrainSize\n        content={open && content}\n        data-ui=\"versionMenu\"\n        open={open}\n        placement={placement}\n        matchReferenceWidth\n        portal\n        ref={setPopoverRef}\n      >\n        <Flex width={'fill'}>\n          <Button\n            data-testid={open ? 'timeline-menu-close-button' : 'timeline-menu-open-button'}\n            disabled={loading || !events.length}\n            mode=\"ghost\"\n            onClick={open ? handleClose : handleOpen}\n            ref={setButton}\n            selected={open}\n            width=\"fill\"\n            tooltipProps={null}\n            justify={'space-between'}\n            style={{\n              maxWidth: '100%',\n            }}\n            iconRight={ChevronDownIcon}\n            text={loading ? t('timeline.loading-history') : buttonLabel}\n          />\n        </Flex>\n      </Root>\n    </PortalProvider>\n  )\n}\n","import {BoundaryElementProvider, Box, Card, Flex, Spinner, Text} from '@sanity/ui'\nimport {motion} from 'framer-motion'\nimport {type ReactElement, useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  ChangesError,\n  type DocumentChangeContextInstance,\n  LoadingBlock,\n  NoChanges,\n  type ObjectSchemaType,\n  ScrollContainer,\n  useEvents,\n  useTranslation,\n} from 'sanity'\nimport {DocumentChangeContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {EventsTimelineMenu} from '../../timeline/events/EventsTimelineMenu'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nconst Grid = styled(Box)`\n  &:not([hidden]) {\n    display: grid;\n  }\n  grid-template-columns: 48px 1fr;\n  align-items: center;\n  gap: 0.25em;\n`\n\nconst SpinnerContainer = styled(Flex)`\n  width: 100%;\n  position: absolute;\n  bottom: -4px;\n`\n\nconst DIFF_INITIAL_VALUE = {\n  diff: null,\n  loading: true,\n  error: null,\n}\nexport function EventsInspector({showChanges}: {showChanges: boolean}): ReactElement {\n  const {documentId, schemaType, timelineError, value, formState} = useDocumentPane()\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n\n  const {events, revision, sinceRevision, getChangesList} = useEvents()\n\n  const isComparingCurrent = !revision?.revisionId\n  const changesList$ = useMemo(() => getChangesList(), [getChangesList])\n  const {\n    diff,\n    loading: diffLoading,\n    error: diffError,\n  } = useObservable(changesList$, DIFF_INITIAL_VALUE)\n\n  const {t} = useTranslation('studio')\n\n  const documentContext: DocumentChangeContextInstance = useMemo(() => {\n    return {\n      documentId,\n      schemaType,\n      FieldWrapper: ChangeFieldWrapper,\n      rootDiff: diff,\n      isComparingCurrent: isComparingCurrent && !formState?.readOnly,\n      value,\n      showFromValue: true,\n    }\n  }, [diff, documentId, isComparingCurrent, formState?.readOnly, schemaType, value])\n\n  const [sinceEvent, toEvent] = useMemo(() => {\n    if (!events) return [null, null]\n    return [\n      events.find((e) => e.id === sinceRevision?.revisionId) || null,\n      events.find((e) => e.id === revision?.revisionId) || events[0],\n    ]\n  }, [events, revision?.revisionId, sinceRevision?.revisionId])\n\n  const sinceEvents = useMemo(() => {\n    // The sinceEvents need to account the toEvent showing only events that are older than the toEvent\n    if (!toEvent) return events.slice(1)\n    return events.slice(events.indexOf(toEvent) + 1).map((event) => {\n      // If the to event has a parent id, we need to remove the parent id from the since events or they won't be rendered, as they have no parent to expand.\n      if ('parentId' in toEvent && 'parentId' in event && event.parentId === toEvent.parentId) {\n        return {...event, parentId: undefined}\n      }\n      return event\n    })\n  }, [events, toEvent])\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <Box padding={3} style={{position: 'relative'}}>\n        <Grid paddingX={2} paddingBottom={2}>\n          <Text size={1} muted>\n            {t('changes.inspector.from-label')}\n          </Text>\n          <EventsTimelineMenu\n            event={sinceEvent || null}\n            events={sinceEvents}\n            mode=\"since\"\n            placement=\"bottom-start\"\n          />\n          <Text size={1} muted>\n            {t('changes.inspector.to-label')}\n          </Text>\n          <EventsTimelineMenu\n            event={toEvent || null}\n            events={events}\n            mode=\"rev\"\n            placement=\"bottom-end\"\n          />\n        </Grid>\n        {diffLoading && (\n          <motion.div\n            animate={{opacity: 1}}\n            initial={{opacity: 0}}\n            transition={{delay: 0.2, duration: 0.2}}\n          >\n            <SpinnerContainer justify=\"center\" align=\"center\" gap={2}>\n              <Text muted size={0}>\n                {t('changes.loading-changes')}\n              </Text>\n              <Spinner size={0} />\n            </SpinnerContainer>\n          </motion.div>\n        )}\n      </Box>\n\n      <Card flex={1} paddingX={2} paddingY={2}>\n        <BoundaryElementProvider element={scrollRef}>\n          <Scroller data-ui=\"Scroller\" ref={setScrollRef}>\n            <Box flex={1} paddingX={3} height=\"fill\">\n              {showChanges && (\n                <Content\n                  documentContext={documentContext}\n                  error={timelineError || diffError}\n                  loading={revision?.loading || sinceRevision?.loading || false}\n                  schemaType={schemaType}\n                />\n              )}\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </Card>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  documentContext,\n  loading,\n  schemaType,\n}: {\n  error?: Error | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n  schemaType: ObjectSchemaType\n}) {\n  if (error) {\n    return <ChangesError />\n  }\n\n  if (loading) {\n    return <LoadingBlock showText />\n  }\n\n  if (!documentContext.rootDiff) {\n    return (\n      <motion.div\n        animate={{opacity: 1}}\n        initial={{opacity: 0}}\n        transition={{delay: 0.2, duration: 0.2}}\n      >\n        <NoChanges />\n      </motion.div>\n    )\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <ChangeList diff={documentContext.rootDiff} schemaType={schemaType} />\n    </DocumentChangeContext.Provider>\n  )\n}\n","import {BoundaryElementProvider, Card, Flex, useToast} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {\n  type DocumentGroupEvent,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  LoadingBlock,\n  ScrollContainer,\n  useEvents,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {EventsTimeline} from '../../timeline/events/EventsTimeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function EventsSelector({showList}: {showList: boolean}) {\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n  const [listHeight, setListHeight] = useState(0)\n  const {setTimelineRange} = useDocumentPane()\n  const getScrollerRef = useCallback(\n    (el: HTMLDivElement | null) => {\n      if (!listHeight && el) {\n        /**\n         * Hacky solution, the list height needs to be defined, it cannot be obtained from the parent using a `max-height: 100%`\n         * Because the scroller won't work properly and it won't scroll to the selected element on mount.\n         * To fix this, this component will set the list height to the height of the parent element - 1px, to avoid a double scroll line.\n         */\n        setListHeight(el.clientHeight ? el.clientHeight - 1 : 0)\n        setScrollRef(el)\n      }\n    },\n    [listHeight],\n  )\n  const {\n    events,\n    nextCursor,\n    loading,\n    error,\n    revision,\n    loadMoreEvents,\n    findRangeForRevision,\n    expandEvent,\n  } = useEvents()\n\n  const {t} = useTranslation('studio')\n  const toast = useToast()\n\n  const selectRev = useCallback(\n    (event: DocumentGroupEvent) => {\n      try {\n        if (\n          isDeleteDocumentVersionEvent(event) ||\n          isDeleteDocumentGroupEvent(event) ||\n          isUnpublishDocumentEvent(event) ||\n          isScheduleDocumentVersionEvent(event) ||\n          isUnscheduleDocumentVersionEvent(event)\n        ) {\n          console.error('Event is not selectable')\n          return\n        }\n        const [since, rev] = findRangeForRevision(event.id)\n        setTimelineRange(since, rev)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [t, toast, setTimelineRange, findRangeForRevision],\n  )\n\n  const initialLoad = loading && !events.length\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n      <Card flex={1} padding={2} paddingTop={0}>\n        {error ? (\n          <TimelineError />\n        ) : (\n          <BoundaryElementProvider element={scrollRef}>\n            <Scroller data-ui=\"Scroller\" ref={getScrollerRef}>\n              {listHeight &&\n              // This forces the list to unmount and remount, which is needed to reset the scroll position\n              showList &&\n              !initialLoad ? (\n                <EventsTimeline\n                  events={events}\n                  fetchEventChildren={expandEvent}\n                  hasMoreEvents={Boolean(nextCursor)}\n                  // If we have a revision, we select it, otherwise we select the first event\n                  selectedEventId={revision?.revisionId || events[0]?.id}\n                  onLoadMore={loadMoreEvents}\n                  onSelect={selectRev}\n                  listMaxHeight={`${listHeight}px`}\n                />\n              ) : null}\n              {loading && <LoadingBlock />}\n            </Scroller>\n          </BoundaryElementProvider>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n","import {BoundaryElementProvider, Card, Flex, useToast} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {\n  type Chunk,\n  ScrollContainer,\n  usePerspective,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Timeline} from '../../timeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function HistorySelector({showList}: {showList: boolean}) {\n  const {timelineError, setTimelineRange, timelineStore} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n  const [listHeight, setListHeight] = useState(0)\n\n  const getScrollerRef = useCallback((el: HTMLDivElement | null) => {\n    if (!el?.clientHeight) return\n    /**\n     * Hacky solution, the list height needs to be defined, it cannot be obtained from the parent using a `max-height: 100%`\n     * Because the scroller won't work properly and it won't scroll to the selected element on mount.\n     * To fix this, this component will set the list height to the height of the parent element - 1px, to avoid a double scroll line.\n     */\n    setListHeight(el.clientHeight - 1)\n    setScrollRef(el)\n  }, [])\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n\n  const {t} = useTranslation('studio')\n  const toast = useToast()\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForRev(revChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    // If updated, be sure to update the TimeLineMenu component as well\n    if (!loading) {\n      timelineStore?.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n      <Card flex={1} padding={2} paddingTop={0}>\n        {timelineError || selectedReleaseId ? (\n          <TimelineError versionError={Boolean(selectedReleaseId)} />\n        ) : (\n          <BoundaryElementProvider element={scrollRef}>\n            <Scroller data-ui=\"Scroller\" ref={getScrollerRef}>\n              {listHeight &&\n              // This forces the list to unmount and remount, which is needed to reset the scroll position\n              showList ? (\n                <Timeline\n                  chunks={chunks}\n                  hasMoreChunks={hasMoreChunks}\n                  lastChunk={realRevChunk}\n                  onLoadMore={handleLoadMore}\n                  onSelect={selectRev}\n                  listMaxHeight={`${listHeight}px`}\n                />\n              ) : null}\n            </Scroller>\n          </BoundaryElementProvider>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n","import {CloseIcon} from '@sanity/icons'\nimport {Card, Flex, TabList, TabPanel} from '@sanity/ui'\nimport {type DocumentInspectorProps, useSource, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Tab} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {HISTORY_INSPECTOR_NAME} from '../../constants'\nimport {ChangesInspector} from './ChangesInspector'\nimport {EventsInspector} from './EventsInspector'\nimport {EventsSelector} from './EventsSelector'\nimport {HistorySelector} from './HistorySelector'\n\nconst FadeInFlex = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n  &[data-ready] {\n    opacity: 1;\n  }\n`\nconst TABS = ['history', 'review'] as const\nconst isValidTab = (tab: string | undefined): tab is (typeof TABS)[number] =>\n  // @ts-expect-error TS doesn't understand the type guard\n  tab && TABS.includes(tab)\n\nexport function ChangesTabs(props: DocumentInspectorProps) {\n  const {params, setParams} = usePaneRouter()\n  const source = useSource()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const isReady = params?.inspect === HISTORY_INSPECTOR_NAME\n\n  const paneRouterTab = isValidTab(params?.changesInspectorTab)\n    ? params.changesInspectorTab\n    : TABS[0]\n\n  const setPaneRouterTab = (tab: (typeof TABS)[number]) =>\n    setParams({\n      ...params,\n      changesInspectorTab: tab,\n      // Reset the since when changing the tab, as it's not relevant for the history tab\n      since: tab === 'history' ? undefined : params?.since,\n    })\n\n  return (\n    <FadeInFlex direction=\"column\" padding={0} height=\"fill\" data-ready={isReady ? '' : undefined}>\n      <Card paddingBottom={1}>\n        <Flex align=\"center\" padding={3} gap={2}>\n          <TabList space={1} flex={1}>\n            <Tab\n              aria-controls=\"history-panel\"\n              id=\"history-tab\"\n              label={t('changes.tab.history')}\n              onClick={() => setPaneRouterTab('history')}\n              selected={paneRouterTab === 'history'}\n            />\n            <Tab\n              aria-controls=\"review-changes-panel\"\n              id=\"changes-tab\"\n              label={t('changes.tab.review-changes')}\n              onClick={() => setPaneRouterTab('review')}\n              selected={paneRouterTab === 'review'}\n            />\n          </TabList>\n          <Button\n            aria-label={t('changes.action.close-label')}\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={props.onClose}\n            tooltipProps={{content: t('document-inspector.close-button.tooltip')}}\n          />\n        </Flex>\n      </Card>\n\n      <TabPanel\n        aria-labelledby=\"history-tab\"\n        height=\"fill\"\n        hidden={paneRouterTab !== 'history'}\n        id=\"history-panel\"\n      >\n        {source.beta?.eventsAPI?.documents ? (\n          <EventsSelector showList={paneRouterTab === 'history'} />\n        ) : (\n          <HistorySelector showList={paneRouterTab === 'history'} />\n        )}\n      </TabPanel>\n\n      <TabPanel\n        aria-labelledby=\"review-tab\"\n        hidden={paneRouterTab !== 'review'}\n        id=\"review-panel\"\n        height=\"fill\"\n      >\n        {source.beta?.eventsAPI?.documents ? (\n          <>\n            {paneRouterTab === 'review' ? (\n              <EventsInspector showChanges={paneRouterTab === 'review'} />\n            ) : null}\n          </>\n        ) : (\n          <ChangesInspector showChanges={paneRouterTab === 'review'} />\n        )}\n      </TabPanel>\n    </FadeInFlex>\n  )\n}\n","import {RestoreIcon} from '@sanity/icons'\nimport {type DocumentInspector, useTranslation} from 'sanity'\n\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {HISTORY_INSPECTOR_NAME} from '../../constants'\nimport {ChangesTabs} from './ChangesTabs'\n\nexport const changesInspector: DocumentInspector = {\n  name: HISTORY_INSPECTOR_NAME,\n  useMenuItem: () => {\n    const {features} = useStructureTool()\n    const {t} = useTranslation()\n\n    return {\n      hidden: !features.reviewChanges,\n      icon: RestoreIcon,\n      title: t('changes.title'),\n    }\n  },\n  component: ChangesTabs,\n  onClose: ({params}) => ({\n    params: {\n      ...params,\n      since: undefined,\n      rev: undefined,\n      changesInspectorTab: undefined,\n      historyVersion: undefined,\n    },\n  }),\n  onOpen: ({params}) => ({params: {...params, since: '@lastPublished'}}),\n}\n","/* eslint-disable no-loop-func */\n\nimport {type Path, type SanityDocument, type SchemaType} from '@sanity/types'\nimport {isArray, isRecord} from 'sanity'\n\nexport function getPathTitles(options: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}): Array<{name: string; title?: string}> {\n  const {path, schemaType, value} = options\n  const result: Array<{name: string; title?: string}> = []\n\n  let s = schemaType\n  let v: unknown = value\n\n  for (const segment of path) {\n    // field name\n    if (typeof segment === 'string') {\n      if (!isRecord(v) && v !== undefined) {\n        throw new Error(`Parent value is not an object, cannot get path segment: .${segment}`)\n      }\n\n      if (s.jsonType !== 'object') {\n        throw new Error(\n          `Parent type is not an object schema type, cannot get path segment: .${segment}`,\n        )\n      }\n\n      v = v?.[segment]\n\n      const field = s.fields.find((f) => f.name === segment)\n\n      if (!field) {\n        result.push({name: segment})\n        return result\n      }\n\n      s = field.type\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item index\n    if (typeof segment === 'number') {\n      if (!isArray(v) && v !== undefined) {\n        throw new Error(`Parent value is not an array, cannot get path segment: [${segment}]`)\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: [${segment}]`,\n        )\n      }\n\n      v = v?.[segment]\n\n      const itemType = s.of.find((ofType) => {\n        if (typeof v === 'string') {\n          return ofType.jsonType === 'string'\n        }\n\n        if (typeof v === 'number') {\n          return ofType.jsonType === 'number'\n        }\n\n        if (typeof v === 'boolean') {\n          return ofType.jsonType === 'boolean'\n        }\n\n        if (isRecord(v)) {\n          return ofType.name === v?._type\n        }\n\n        return false\n      })\n\n      if (!itemType) {\n        throw new Error(`Item type not found: [${segment}]`)\n      }\n\n      s = itemType\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item key\n    if (isRecord(segment) && segment._key) {\n      if (!isArray(v)) {\n        throw new Error(\n          `Parent value is not an array, cannot get path segment: [_key == ${segment}]`,\n        )\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: .${segment}`,\n        )\n      }\n\n      const values = v ?? []\n\n      v = values.find((i) => isRecord(i) && i._key === segment._key)\n\n      if (!isRecord(v)) {\n        throw new Error(`Array item not found: [_key == ${segment._key}]`)\n      }\n\n      const ofType = s.of.find((i) => isRecord(v) && i.name === v?._type)\n\n      if (!ofType) {\n        throw new Error(`Array item type not found: .${v?._type}`)\n      }\n\n      s = ofType\n\n      result.push(s)\n\n      continue\n    }\n\n    throw new Error(`Invalid path segment: ${JSON.stringify(segment)}`)\n  }\n\n  return result\n}\n","import {\n  ErrorOutlineIcon,\n  type IconComponent,\n  InfoOutlineIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {\n  type ObjectSchemaType,\n  type Path,\n  type SanityDocument,\n  type SchemaType,\n  type ValidationMarker,\n} from '@sanity/types'\nimport {Box, Card, type CardTone, Flex, Stack, Text} from '@sanity/ui'\nimport {type ErrorInfo, Fragment, useCallback, useMemo, useState} from 'react'\nimport {type DocumentInspectorProps, useTranslation} from 'sanity'\n\nimport {ErrorBoundary} from '../../../../../ui-components'\nimport {DocumentInspectorHeader} from '../../documentInspector'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {getPathTitles} from './getPathTitles'\n\nconst MARKER_ICON: Record<'error' | 'warning' | 'info', IconComponent> = {\n  error: ErrorOutlineIcon,\n  warning: WarningOutlineIcon,\n  info: InfoOutlineIcon,\n}\n\nconst MARKER_TONE: Record<'error' | 'warning' | 'info', CardTone> = {\n  error: 'critical',\n  warning: 'caution',\n  info: 'primary',\n}\n\nexport function ValidationInspector(props: DocumentInspectorProps) {\n  const {onClose} = props\n  const {onFocus, onPathOpen, schemaType, validation, value} = useDocumentPane()\n  const {t} = useTranslation('validation')\n\n  const handleOpen = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onFocus, onPathOpen],\n  )\n\n  return (\n    <Flex direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <DocumentInspectorHeader\n        as=\"header\"\n        closeButtonLabel={t('panel.close-button-aria-label')}\n        flex=\"none\"\n        onClose={onClose}\n        title={t('panel.title')}\n      />\n\n      <Card flex={1} overflow=\"auto\" padding={3}>\n        {validation.length === 0 && (\n          <Box padding={2}>\n            <Text muted size={1}>\n              {t('panel.no-errors-message')}\n            </Text>\n          </Box>\n        )}\n\n        {validation.length > 0 && (\n          <Stack space={2}>\n            {validation.map((marker, i) => (\n              <ValidationCard\n                // eslint-disable-next-line react/no-array-index-key\n                key={i}\n                marker={marker}\n                onOpen={handleOpen}\n                schemaType={schemaType}\n                value={value}\n              />\n            ))}\n          </Stack>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n\nfunction ValidationCard(props: {\n  marker: ValidationMarker\n  onOpen: (path: Path) => void\n  schemaType: ObjectSchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {marker, onOpen, schemaType, value} = props\n  const handleOpen = useCallback(() => onOpen(marker.path), [marker, onOpen])\n  const [errorInfo, setErrorInfo] = useState<{error: Error; info: ErrorInfo} | null>(null)\n  const Icon = MARKER_ICON[marker.level]\n\n  return (\n    <ErrorBoundary onCatch={setErrorInfo}>\n      {errorInfo && (\n        <Card padding={3} radius={2} tone=\"critical\">\n          <Text size={1}>{errorInfo.error.message}</Text>\n        </Card>\n      )}\n\n      {!errorInfo && (\n        <Card\n          __unstable_focusRing\n          as=\"button\"\n          onClick={handleOpen}\n          padding={3}\n          radius={2}\n          tone={MARKER_TONE[marker.level]}\n        >\n          <Flex align=\"flex-start\" gap={3}>\n            <Box flex=\"none\">\n              <Text size={1}>\n                <Icon />\n              </Text>\n            </Box>\n\n            <Stack flex={1} space={2}>\n              <DocumentNodePathBreadcrumbs\n                path={marker.path}\n                schemaType={schemaType}\n                value={value}\n              />\n\n              <Text muted size={1}>\n                {marker.message}\n              </Text>\n            </Stack>\n          </Flex>\n        </Card>\n      )}\n    </ErrorBoundary>\n  )\n}\n\nfunction DocumentNodePathBreadcrumbs(props: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {path, schemaType, value} = props\n\n  const pathTitles = useMemo(() => {\n    try {\n      return getPathTitles({path, schemaType, value})\n    } catch (e) {\n      console.error(e)\n    }\n    return null\n  }, [path, schemaType, value])\n\n  if (!pathTitles?.length) return null\n\n  return (\n    <Text size={1}>\n      {pathTitles.map((t, i) => (\n        <Fragment key={i}>\n          {i > 0 && <span style={{color: 'var(--card-muted-fg-color)', opacity: 0.5}}> / </span>}\n          <span style={{fontWeight: 500}}>{t.title || t.name}</span>\n        </Fragment>\n      ))}\n    </Text>\n  )\n}\n","import {CheckmarkCircleIcon, ErrorOutlineIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {useMemo} from 'react'\nimport {\n  type DocumentInspector,\n  type DocumentInspectorMenuItem,\n  type DocumentInspectorUseMenuItemProps,\n  type FormNodeValidation,\n  isValidationError,\n  isValidationWarning,\n  usePerspective,\n  useTranslation,\n  useValidationStatus,\n} from 'sanity'\n\nimport {VALIDATION_INSPECTOR_NAME} from '../../constants'\nimport {ValidationInspector} from './ValidationInspector'\n\nfunction useMenuItem(props: DocumentInspectorUseMenuItemProps): DocumentInspectorMenuItem {\n  const {documentId, documentType} = props\n  const {t} = useTranslation('validation')\n  const {selectedReleaseId} = usePerspective()\n  const {validation: validationMarkers} = useValidationStatus(\n    documentId,\n    documentType,\n    selectedReleaseId,\n  )\n\n  const validation: FormNodeValidation[] = useMemo(\n    () =>\n      validationMarkers.map((item) => ({\n        level: item.level,\n        message: item.message,\n        path: item.path,\n      })),\n    [validationMarkers],\n  )\n\n  const hasErrors = validation.some(isValidationError)\n  const hasWarnings = validation.some(isValidationWarning)\n\n  const icon = useMemo(() => {\n    if (hasErrors) return ErrorOutlineIcon\n    if (hasWarnings) return WarningOutlineIcon\n    return CheckmarkCircleIcon\n  }, [hasErrors, hasWarnings])\n\n  const tone = useMemo(() => {\n    if (hasErrors) return 'critical'\n    if (hasWarnings) return 'caution'\n    return 'positive'\n  }, [hasErrors, hasWarnings])\n\n  return {\n    hidden: validation.length === 0,\n    icon,\n    title: t('panel.title'),\n    tone,\n    showAsAction: true,\n  }\n}\n\nexport const validationInspector: DocumentInspector = {\n  name: VALIDATION_INSPECTOR_NAME,\n  component: ValidationInspector,\n  useMenuItem,\n}\n","import {omit} from 'lodash'\nimport {decodeJsonParams, encodeJsonParams, route} from 'sanity/router'\n\nimport {type RouterPaneGroup, type RouterPanes, type RouterPaneSibling} from './types'\n\nconst EMPTY_PARAMS = {}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToState(params: string): Record<string, unknown> {\n  try {\n    return JSON.parse(decodeURIComponent(params))\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn('Failed to parse JSON parameters')\n    return {}\n  }\n}\n\nexport function encodePanesSegment(panes: RouterPanes): string {\n  return (panes || [])\n    .map((group) => group.map(encodeChunks).join('|'))\n    .map(encodeURIComponent)\n    .join(';')\n}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToPath(params: Record<string, unknown>): string {\n  return JSON.stringify(params)\n}\n\n// http://localhost:3333/intent/create/template=book-by-author;type=book/eyJhdXRob3JJZCI6Imdycm0ifQ==\n\n/**\n * @internal\n */\nexport function toState(pathSegment: string): RouterPaneGroup[] {\n  return parsePanesSegment(decodeURIComponent(pathSegment))\n}\n\n/**\n * @internal\n */\nexport function toPath(panes: RouterPaneGroup[]): string {\n  return encodePanesSegment(panes)\n}\n\nexport const router = route.create('/', [\n  // \"Asynchronous intent resolving\" route\n  route.intents('/intent'),\n\n  // Legacy fallback route, will be redirected to new format\n  route.create('/edit/:type/:editDocumentId', [\n    route.create({\n      path: '/:params',\n      transform: {params: {toState: legacyEditParamsToState, toPath: legacyEditParamsToPath}},\n    }),\n  ]),\n\n  // The regular path - when the intent can be resolved to a specific pane\n  route.create({\n    path: '/:panes',\n    // Legacy URLs, used to handle redirects\n    children: [route.create('/:action', route.create('/:legacyEditDocumentId'))],\n    transform: {\n      panes: {toState, toPath},\n    },\n  }),\n])\n\n// old: authors;knut,{\"template\":\"diaryEntry\"}\n// new: authors;knut,view=diff,eyJyZXYxIjoiYWJjMTIzIiwicmV2MiI6ImRlZjQ1NiJ9|latest-posts\n\nconst panePattern = /^([.a-z0-9_-]+),?({.*?})?(?:(;|$))/i\nconst isParam = (str: string) => /^[a-z0-9]+=[^=]+/i.test(str)\nconst isPayloadLike = (str: string) => /^[A-Za-z0-9\\-_]+(?:={0,2})$/.test(str)\nconst exclusiveParams = ['view', 'since', 'rev', 'inspect', 'comment']\n\ntype Truthy<T> = T extends false\n  ? never\n  : T extends ''\n    ? never\n    : T extends 0\n      ? never\n      : T extends 0n\n        ? never\n        : T extends null | undefined\n          ? NonNullable<T>\n          : T\nconst isTruthy = Boolean as (t: unknown) => boolean as <T>(t: T) => t is Truthy<T>\n\nfunction parseChunks(chunks: string[], initial: RouterPaneSibling): RouterPaneSibling {\n  const sibling: RouterPaneSibling = {...initial, params: EMPTY_PARAMS, payload: undefined}\n  return chunks.reduce((pane, chunk) => {\n    if (isParam(chunk)) {\n      const key = chunk.slice(0, chunk.indexOf('='))\n      const value = chunk.slice(key.length + 1)\n      pane.params = {...pane.params, [decodeURIComponent(key)]: decodeURIComponent(value)}\n    } else if (isPayloadLike(chunk)) {\n      pane.payload = tryParseBase64Payload(chunk)\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn('Unknown pane segment: %s - skipping', chunk)\n    }\n\n    return pane\n  }, sibling)\n}\n\nfunction encodeChunks(pane: RouterPaneSibling, index: number, group: RouterPaneGroup): string {\n  const {payload, params = {}, id} = pane\n  const [firstSibling] = group\n  const paneIsFirstSibling = pane === firstSibling\n  const sameAsFirst = index !== 0 && id === firstSibling.id\n  const encodedPayload =\n    typeof payload === 'undefined' ? undefined : encodeJsonParams(payload as any)\n\n  const encodedParams = Object.entries(params)\n    .filter((entry): entry is [string, string] => {\n      const [key, value] = entry\n      if (!value) return false\n      if (paneIsFirstSibling) return true\n\n      // omit the value if it's the same as the value from the first sibling\n      const valueFromFirstSibling = firstSibling.params?.[key]\n      if (value === valueFromFirstSibling && !exclusiveParams.includes(key)) return false\n      return true\n    })\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n\n  return (\n    [sameAsFirst ? '' : id]\n      .concat([encodedParams.length > 0 && encodedParams, encodedPayload].filter(isTruthy).flat())\n      .join(',') || ','\n  )\n}\n\nexport function parsePanesSegment(str: string): RouterPanes {\n  if (str.indexOf(',{') !== -1) {\n    return parseOldPanesSegment(str)\n  }\n\n  return str\n    .split(';')\n    .map((group) => {\n      const [firstSibling, ...restOfSiblings] = group.split('|').map((segment) => {\n        const [id, ...chunks] = segment.split(',')\n        return parseChunks(chunks, {id})\n      })\n\n      return [\n        firstSibling,\n        ...restOfSiblings.map((sibling) => ({\n          ...firstSibling,\n          ...sibling,\n          id: sibling.id || firstSibling.id,\n          params: {...omit(firstSibling.params, exclusiveParams), ...sibling.params},\n          payload: sibling.payload || firstSibling.payload,\n        })),\n      ]\n    })\n    .filter((group) => group.length > 0)\n}\n\nfunction parseOldPanesSegment(str: string): RouterPanes {\n  const chunks: RouterPaneGroup = []\n\n  let buffer = str\n  while (buffer.length) {\n    const [match, id, payloadChunk] = buffer.match(panePattern) || []\n    if (!match) {\n      buffer = buffer.slice(1)\n      continue\n    }\n\n    const payload = payloadChunk && tryParsePayload(payloadChunk)\n    chunks.push({id, payload})\n\n    buffer = buffer.slice(match.length)\n  }\n\n  return [chunks]\n}\n\nfunction tryParsePayload(json: string) {\n  try {\n    return JSON.parse(json)\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n\nfunction tryParseBase64Payload(data: string): unknown {\n  try {\n    return data ? decodeJsonParams(data) : undefined\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n","import {MasterDetailIcon} from '@sanity/icons'\nimport {lazy} from 'react'\nimport {definePlugin} from 'sanity'\n\nimport {\n  DeleteAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  HistoryRestoreAction,\n  PublishAction,\n  UnpublishAction,\n} from './documentActions'\nimport {LiveEditBadge} from './documentBadges'\nimport {getIntentState} from './getIntentState'\nimport {structureUsEnglishLocaleBundle} from './i18n'\nimport {changesInspector} from './panes/document/inspectors/changes'\nimport {validationInspector} from './panes/document/inspectors/validation'\nimport {router} from './router'\nimport {type StructureToolOptions} from './types'\n\nconst documentActions = [\n  PublishAction,\n  UnpublishAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  DeleteAction,\n  HistoryRestoreAction,\n]\n\nconst documentBadges = [LiveEditBadge]\n\nconst inspectors = [validationInspector, changesInspector]\n\n/**\n * The structureTool is a studio plugin which adds the “structure tool” – a tool within\n * Sanity Studio in which content editors can drill down to specific documents to edit them.\n * You can configure your Studio's structure tool(s).\n *\n * @public\n * @param options - Options for the structure tool. See {@link StructureToolOptions}\n * @example Minimal example\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { structureTool } from 'sanity/structure'\n *\n * export default defineConfig((\n *  // ...\n *  plugins: [\n *    structureTool() // use defaults\n *  ]\n * })\n * ```\n *\n * @example To customise your structure tool\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { structureTool } from 'sanity/structure'\n * import { FaCar } from 'react-icons'\n\n * export default defineConfig((\n *\t // ...\n *   plugins: [\n *    structureTool({\n *      name: 'cars',\n *      title: 'Cars',\n *      icon: FaCar,\n *      structure: (S) => S.documentTypeList('car'),\n *      defaultDocumentNode: (S) =>\n *        S.document().views([\n *          S.view.form(),\n *          S.view.component(Preview).title('Preview')\n *        ])\n *    })\n *  ]\n * })\n * ```\n * */\nexport const structureTool = definePlugin<StructureToolOptions | void>((options) => {\n  const icon = options?.icon || MasterDetailIcon\n\n  return {\n    name: 'sanity/structure',\n    document: {\n      actions: (prevActions) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the document actions already exist in the Studio config\n        return Array.from(new Set([...prevActions, ...documentActions]))\n      },\n      badges: (prevBadges) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the document badges already exist in the Studio config\n        return Array.from(new Set([...prevBadges, ...documentBadges]))\n      },\n      inspectors: (prevInspectors) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the inspectors already exist in the Studio config\n        return Array.from(new Set([...prevInspectors, ...inspectors]))\n      },\n    },\n\n    tools: [\n      {\n        name: options?.name || 'structure',\n        title: options?.title || 'Structure',\n        icon,\n        component: lazy(() => import('./components/structureTool')),\n        canHandleIntent: (intent, params) => {\n          if (intent === 'create') return canHandleCreateIntent(params)\n          if (intent === 'edit') return canHandleEditIntent(params)\n          return false\n        },\n        getIntentState,\n        // Controlled by sanity/src/structure/components/structureTool/StructureTitle.tsx\n        controlsDocumentTitle: true,\n        options,\n        router,\n        __internalApplicationType: 'sanity/structure',\n      },\n    ],\n\n    i18n: {\n      bundles: [structureUsEnglishLocaleBundle],\n    },\n  }\n})\n\nfunction canHandleCreateIntent(params: Record<string, unknown>) {\n  // We can't handle create intents without a `type` parameter\n  if (!('type' in params)) {\n    return false\n  }\n\n  // We can handle any create intent as long as it has a `type` parameter,\n  // but we also know how to deal with templates, where other tools might not\n  return 'template' in params ? {template: true} : true\n}\n\nfunction canHandleEditIntent(params: Record<string, unknown>) {\n  // We can't handle edit intents without an `id` parameter\n  if (!('id' in params)) {\n    return false\n  }\n\n  // We can handle any edit intent with a document ID, but we're best at `structure` mode\n  // This ensures that other tools that can handle modes such as `presentation` or `batch`\n  // can take precedence over the structure tool\n  return 'mode' in params ? {mode: params.mode === 'structure'} : true\n}\n"],"names":["DocTitle","props","$","_c","document","documentValue","schema","useSchema","t0","_type","get","schemaType","t","useTranslation","structureLocaleNamespace","t1","value","error","useValuePreview","t2","t3","message","errorMessage","title","jsx","color","Fragment","ChevronWrapper","styled","Box","CrossDatasetReferencesDetails","details","CrossDatasetReferencesSummary","summary","Table","table","theme","rem","sanity","space","DocumentIdFlex","Flex","OtherReferenceCount","difference","totalCount","references","length","count","Text","Symbol","for","InfoOutlineIcon","t4","Tooltip","t5","jsxs","Inline","PaneItemPreview","icon","layout","presence","versionsInfo","useDocumentVersionInfo","_id","perspectiveStack","usePerspective","documentPreviewStore","getPreviewStateObservable","previewStateObservable","snapshot","isLoading","original","previewIsLoading","useObservable","draft","published","versions","TooltipDelayGroupProvider","DocumentPreviewPresence","DocumentStatusIndicator","status","DocumentStatus","tooltip","getPreviewValueWithFallback","fallback","t6","SanityDefaultPreview","BackLink","forwardRef","ref","routerPanesState","groupIndex","useContext","PaneRouterContext","slice","panes","state","StateLink","usePaneLayout","pane","PaneLayoutContext","Error","ChildLink","childId","childParameters","childPayload","rest","id","params","payload","ParameterizedLink","currentPanes","siblingIndex","nextParams","useUnique","nextPayload","currentGroup","currentSibling","nextSibling","nextGroup","nextPanes","nextState","t7","ReferenceChildLink","children","documentId","documentType","parentRefPath","template","pathToString","type","usePaneRouter","EMPTY_ARRAY","ReferencePreviewLink","onClick","getPublishedId","documentPresence","useDocumentPresence","useDocumentPreviewStore","name","linkProps","PreviewCard","ConfirmDeleteDialogBody","crossDatasetReferences","internalReferences","documentTitle","action","datasetNames","hasUnknownDatasetNames","onReferenceLinkClick","toast","useToast","item","UnknownIcon","renderPreviewItem","DocumentTitle","Translate","T0","T1","T2","t10","t11","t12","t8","t9","normalizedDatasetNames","datasetSubtitle","datasets","join","context","t13","WarningOutlineIcon","t14","t15","Card","t16","Stack","map","item_0","borderTop","undefined","DocumentsIcon","documentCount","ChevronDownIcon","minWidth","filter","_temp","t17","index","projectId","datasetName","Button","CopyIcon","content","navigator","clipboard","writeText","catch","push","reference","isClientError","e","POLL_INTERVAL","visiblePoll$","getVisiblePoll$","fromEvent","pipe","startWith","visibilityState","distinctUntilChanged","switchMap","visible","timer","EMPTY","shareReplay","refCount","bufferSize","getDocumentExistence","versionedClient","draftId","getDraftId","publishedId","requestOptions","uri","getDataUrl","json","query","excludeContent","tag","observable","request","omitted","nonExistant","doc","reason","some","fetchCrossDatasetReferences","checkDocumentId","of","currentDataset","config","dataset","url","catchError","statusCode","useInternalReferences","createHookFromObservableFactory","documentStore","listenQuery","fetch","listen","transitions","throttleTime","useCrossDatasetReferences","useReferringDocuments","useClient","DEFAULT_STUDIO_CLIENT_OPTIONS","useDocumentStore","isInternalReferencesLoading","isCrossDatasetReferencesLoading","Array","from","Set","Boolean","sort","projectIds","_temp2","_temp3","_temp4","crossDatasetReference_1","crossDatasetReference","crossDatasetReference_0","DialogBody","LoadingContainer","attrs","align","direction","justify","ConfirmDeleteDialog","onCancel","onConfirm","dialogId","useId","showConfirmButton","text","cancelButton","confirmButton","LoadingBlock","Dialog","ConfirmDeleteDialogContainer","setError","useState","handleRetry","tone","ErrorBoundary","Delay","ms","ready","setReady","timeoutId","setTimeout","clearTimeout","useEffect","PANE_DEBUG","PANE_COLLAPSED_WIDTH","PANE_DEFAULT_MIN_WIDTH","Root","Layer","PaneDivider","disabled","element","resize","dragging","setDragging","event","preventDefault","startX","pageX","handleMouseMove","deltaX","handleMouseUp","e_0","window","removeEventListener","addEventListener","handleMouseDown","Pane","forwardedRef","currentMaxWidthProp","currentMinWidthProp","maxWidthProp","minWidthProp","restProps","currentMinWidth","currentMaxWidth","flex","maxWidth","selected","flexProp","rootElement","setRootElement","collapse","collapsed","layoutCollapsed","expand","expandedElement","mount","p","find","indexOf","paneIndex","nextPane","isLast","expanded","nextCollapsed","useRef","current","useImperativeHandle","refValue","setRef","useLayoutEffect","handleCollapse","handleExpand","contextValue","bb0","bb1","hidden","LegacyLayerProvider","divider","Infinity","t18","style","t19","t20","t21","t22","t23","t24","BoundaryElementProvider","t25","t26","IsLastPaneProvider","t27","t28","displayName","usePane","PaneContext","PaneContent","as","overflow","padding","toLowerCaseNoSpaces","str","toLocaleLowerCase","replaceAll","MENU_GROUP_POPOVER_PROPS","constrainSize","placement","portal","PaneMenuButtonItem","isAfterGroup","node","getI18nText","useGetI18nText","MenuDivider","child","childIndex","key","child_0","childIndex_0","MenuGroup","PaneContextMenuItemResolver","intent","PaneContextMenuItem","tooltipContent","useI18nText","hotkey","split","iconRight","CheckmarkIcon","onAction","MenuItem","TooltipOfDisabled","PaneContextIntentMenuItem","intentLink","useIntentLink","handleClick","href","CONTEXT_MENU_POPOVER_PROPS","nodesHasTone","nodes","PaneContextMenuButton","actionsNodes","hasCritical","hasCaution","ContextMenuButton","nodeIndex","Menu","MenuButton","RootCard","PaneFooter","$border","css","Layout","TitleCard","fg","bg","card","enabled","TitleTextSkeleton","TextSkeleton","TitleText","PaneHeader","actions","backButton","border","contentAfter","loading","subActions","tabs","tabIndex","appendTitle","paneElement","paneRect","useElementRect","height","innerHeight","width","layoutStyle","handleTitleClick","handleLayoutClick","showTabsOrSubActions","LayerProvider","getDisabledReason","disabledReason","ariaLabel","isDisabled","PaneHeaderActionButton","warn","PaneHeaderMenuItemActionButton","hotkeys","StatusButton","PaneHeaderActionIntentButton","PaneHeaderMenuGroupActionButton","idx","_calcPaneResize","cache","left","right","sum","leftMinWidth","rightMinWidth","leftMaxWidth","Math","min","rightMaxWidth","minDeltaX","rightMinDeltaX","maxDeltaX","leftMaxDeltaX","_deltaX","max","leftW","rightW","leftFlex","rightFlex","_getDOMPath","el","path","parentElement","childNodes","unshift","EMPTY_PATH","_sortElements","elements","WeakMap","set","_sortByElementPath","a","b","_a","_b","len","i","aIndex","bIndex","createPaneLayoutController","observers","optionsMap","userCollapsedElementSet","rootWidth","resizeDataMap","Map","resizing","add","_notifyObservers","delete","options","splice","leftElement","leftIndex","leftOptions","rightElement","rightOptions","offsetWidth","leftResizeData","rightResizeData","nextRootElement","setRootWidth","nextRootWidth","subscribe","observer","_elements","dataMap","lastElement","collapsedWidth","remaingWidth","userCollapsed","has","sizeCollapsed","resizeData","data","PaneLayout","onCollapse","onExpand","controller","setState","paneLayout","isMenuNodeButton","renderAsButton","isNotMenuNodeButton","negate","resolveMenuNodes","fieldActions","menuItems","menuItemGroups","keyOffset","mapFieldActionToPaneMenuNode","groups","itemGroup","g","i18n","ungroupedItems","group","shortcut","actionHandler","showAsAction","childIdx","IntentButton","linkRef","IntentLink","searchParams","Link","InsufficientPermissionsMessageTooltip","reveal","currentUser","useCurrentUser","InsufficientPermissionsMessage","POPOVER_PROPS","getIntent","templates","version","typeName","templateId","baseParams","initialDocumentId","parameters","PaneHeaderCreateButton","templateItems","useTemplates","selectedReleaseId","selectedPerspective","isReleaseActive","useIsReleaseActive","tCore","templatePermissions","isTemplatePermissionsLoading","useTemplatePermissions","every","nothingGranted","reduce","permissionsById","AddIcon","isPublishedPerspective","disabledByPerspectiveTooltipProps","firstItem","granted","itemIndex","disabled_0","intent_0","acc","permission_0","permission","isNonNullable","hashObject","sortObject","v","isArray","Object","entries","keyA","keyB","localeCompare","JSON","stringify","parse","PaneHeaderActions","memo","initialValueTemplateItems","initialValueTemplateItemsFromStructure","actionHandlers","EMPTY_OBJECT","handleAction","useCallback","console","handler","menuNodes","useMemo","actionNodes","contextMenuNodes","initialValueTemplateItemFromMenuItems","menuItemIndex","intentParams","templateParams","description","combinedInitialValueTemplates","uniqBy","MissingSchemaType","Code","getIconWithFallback","defaultIcon","PaneItem","pressed","margin","marginBottom","marginTop","hasSchemaType","clicked","setClicked","isSanityDocument","DocumentIcon","opacity","ChevronRightIcon","FolderIcon","preview","metaKey","preloading","setPreload","timeoutRef","startTransition","handleMouseEnter","handleMouseLeave","PreloadDocumentPane","useEditState","RenderActionCollectionState","actionProps","onActionComplete","liveEditSchemaType","states","GetHookCollectionState","SUPPORTED_LINKED_TO_CANVAS_ACTIONS","ActionsGuardWrapper","isLinked","useCanvasCompanionDoc","s","includes","RenderBadgeCollectionState","badges","badgeProps","useCreatePathSyncChannel","Subject","DIFF_VIEW_SEARCH_PARAMETER","DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER","DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER","DIFF_SEARCH_PARAM_DELIMITER","useDiffViewRouter","navigate","routerState","useRouter","mode","previousDocument","nextDocument","next","fromPairs","_searchParams","toPairs","navigateDiffView","exitDiffView","diffViewModes","isDiffViewMode","maybeDiffViewMode","useDiffViewState","onParamsError","URLSearchParams","anyParamSet","param","parseParams","result","errors","isActive","previousDocumentType","previousDocumentId","nextDocumentType","nextDocumentId","documents","previous","useScrollMirror","existentElements","scrollMirror","ScrollMirror","destroy","VersionModeHeaderLayout","header","VersionModeHeaderLayoutSection","div","VersionModeHeader","documentVersions","useDocumentVersions","activeReleases","useActiveReleases","releasesIds","flatMap","getVersionFromId","releases","release","releaseId","getReleaseIdFromReleaseDocumentId","onSelectPreviousRelease","selectedDocumentId","onSelectNextRelease","TransferIcon","justifySelf","CloseIcon","VersionMenu","onSelectRelease","role","findRelease","tStructure","getMenuButtonProps","VersionMenuItem","onSelect","isSelected","getVersionId","ReleaseAvatar","getReleaseTone","metadata","releaseType","formatRelativeLocalePublishDate","isReleaseScheduledOrScheduling","LockIcon","isReleaseDocument","isPublishedId","isDraftId","DialogLayout","pickDocumentLayoutComponent","plugin","components","unstable_layout","usePathSyncChannel","syncChannel","source","state_0","deepEquals","Scroller","DiffViewPaneLayout","Container","UiContainer","DiffViewPane","scrollElement","compareDocument","containerElement","portalElement","setPortalElement","boundaryElement","setBoundaryElement","pick","defaultComponent","DocumentLayout","useMiddlewareComponents","isInteractive","onOpenReviewChanges","noop","onSetFocus","isReviewChangesOpen","DialogProvider","PortalProvider","ConnectorContext","ChangeIndicatorsTracker","VirtualizerScrollInstanceProvider","DiffViewDocument","compareValue","useCompareValue","patchChannel","perspectiveName","selectedPerspectiveName","comparisonValue","useDocumentForm","collapsedFieldSets","collapsedPaths","documentForm","formState","onBlur","onChange","onFocus","onProgrammaticFocus","onSetActiveFieldGroup","onSetCollapsedFieldSet","onSetCollapsedPath","pathSyncChannel","onPathOpen","subscription","unsubscribe","CommentsEnabledContext","FormBuilder","focusPath","changed","focused","validation","members","isVersionId","compareDocumentEditState","createPatchChannel","EditReferenceLinkComponent","_documentId","DiffView","previousPaneElement","setPreviousPaneElement","nextPaneElement","setNextPaneElement","referenceInputOptionsContext","ReferenceInputOptionsContext","disableNew","diffViewReferenceInputOptionsContext","DiffViewDocumentLayout","input","ErrorPane","paneKey","getWaitMessages","thresholds","messageKey","isDev","src","merge","threshold","mapTo","delay","DEFAULT_MESSAGE_KEY","Content","LoadingPane","messageProp","resolvedMessage","currentMessage","setCurrentMessage","sub","contentElement","setContentElement","mounted","setMounted","_raf2","DELAY","useDocumentPane","documentPane","DocumentPaneContext","CommentsWrapper","CommentsEnabledProvider","CommentsProviderWrapper","useCommentsEnabled","connectionState","inspector","openInspector","setParams","createPathWithParams","selectedCommentId","comment","paramsRef","commentId","inspect","COMMENTS_INSPECTOR_NAME","location","origin","getCommentLink","handleClearSelectedComment","handleOpenCommentsInspector","CommentsProvider","useFilteredReleases","displayed","archivedReleases","useArchivedReleases","isCreatingDocument","_createdAt","notCurrentReleases","currentReleases","inCreation","versionDocExists","historyVersion","archivedRelease","r","useDocumentIdStack","editState","filteredReleases","systemStack","releaseStack","concat","stack","findIndex","id_0","position","previousId","nextId","useStructureTool","structureTool","StructureToolContext","DOCUMENT_PANEL_MIN_WIDTH","DOCUMENT_PANEL_INITIAL_MIN_WIDTH","DOCUMENT_INSPECTOR_MIN_WIDTH","DOCUMENT_INSPECTOR_MAX_WIDTH","EMPTY_PARAMS","INSPECT_ACTION_PREFIX","DEFAULT_MENU_ITEM_GROUPS","HISTORY_INSPECTOR_NAME","VALIDATION_INSPECTOR_NAME","DocumentInspectorMenuItemsResolver","inspectors","onMenuItems","setMenuItems","newFieldActions","setMenuItem","prev","InspectorMenuItems","useMenuItem","defineInspectorMenuItemComponent","InspectorMenuItem","menuItem","useDocumentTitle","subscribed","IGNORE_OPS","DocumentOperationResults","pushToast","documentPaneValue","documentTitleInfo","titleError","useDocumentOperationEvent","prevEvent","paneRouter","op","documentTitleBase","cleanupId","closable","duration","Strong","closeCurrentAndAfter","isLiveEditEnabled","liveEdit","zIndex","lineHeight","DocumentInspectorHeader","closeButtonLabel","forwardedAs","onClose","DocumentInspectorPanel","closeInspector","features","handleClose","Component","component","resizablePanes","Resizable","STRUCTURE_TOOL_NAMESPACE","useStructureToolSetting","namespace","defaultValue","keyValueStore","useKeyValueStore","keyValueStoreKey","getKey","value_0","newValue","setKey","VIEW_MODE_PARSED","VIEW_MODE_RAW","VIEW_MODES","lru","LRU","maxSize","isExpanded","keyPath","cached","isRecord","toggleExpanded","selectElement","sel","getSelection","range","createRange","removeAllRanges","selectNodeContents","addRange","select","currentTarget","maybeSelectAll","keyCode","ctrlKey","isDocumentLike","isString","JSONInspectorWrapper","fonts","code","family","sizes","fontSize","syntax","property","constant","string","boolean","number","Search","target","handleChange","TextInput","SearchIcon","InspectDialog","onInspectClose","dialogIdPrefix","viewModeId","onViewModeChange","viewMode","setParsedViewMode","setRawViewMode","bottom","Tab","TabList","outline","JsonInspector","ignoreCase","TabPanel","Banner","Icon","paddingY","DeletedDocumentBanners","isDeleted","isDeleting","isDraftPerspective","DeletedDocumentBanner","lastNonDeletedRevId","restore","useDocumentOperation","navigateIntent","execute","handleRestore","ReadOnlyIcon","ArchivedReleaseBanner","DocumentRemoveIcon","DeprecatedDocumentTypeBanner","isDeprecatedSchemaType","deprecated","ErrorOutlineIcon","AskToEditDialogOpened","defineEvent","AskToEditRequestSent","MAX_NOTE_LENGTH","RequestPermissionDialog","onRequestSubmitted","telemtry","useTelemetry","useProjectId","apiVersion","client","zOffset","useZIndex","isSubmitting","setIsSubmitting","note","setNote","msgError","setMsgError","hasTooManyRequests","setHasTooManyRequests","hasBeenDenied","setHasBeenDenied","adminRole","roles","requestedRole","method","body","requestUrl","then","log","err","response","errMessage","finally","onSubmit","fullscreen","role_0","appliesToUsers","LOADING_STATE","EMPTY_STATE","DECLINED_STATE","PENDING_STATE","EXPIRED_STATE","useRoleRequestsStatus","checkRoleRequests","checkRoleRequests$","requests","projectRequests","resourceId","declinedRequest","isAfter","addWeeks","Date","createdAt","isBefore","InsufficientPermissionBanner","requiredPermission","roleRequestStatus","requestStatusLoading","requestStatusError","requestSent","setRequestSent","requestPending","currentUserRoles","isOnlyViewer","showRequestPermissionDialog","setShowRequestPermissionDialog","listFormat","useListFormat","telemetry","roleTitles","formatToParts","Roles","part","ReferenceChangedBanner","replaceCurrent","routerReferenceId","parentSibling","parentId","hasHistoryOpen","rev","pathFromString","referenceInfoObservable","parentRefPathSegment","keyedSegmentIndex","unstable_observePathsDocumentPair","debounceTime","availability","pathGet","_ref","referenceInfo","handleReloadReference","available","SyncIcon","ArchivedReleaseDocumentBanner","handleGoBack","historyEvent","since","VersionBadge","getVersionInlineBadge","Image","img","CANVAS_IMAGE_URL","CANVAS_APP_NAME","CanvasPopoverContent","useClickOutsideEvent","ComposeSparklesIcon","Heading","LaunchIcon","CanvasLinkedBannerContent","open","setOpen","documentVariantType","getDocumentVariantType","variantText","togglePopover","Popover","CanvasLinkedBanner","companionDoc","navigateToCanvas","useNavigateToCanvasDoc","canvasDocumentId","CreateLinkedBanner","documentLinkedBannerContent","CreateLinkedBannerContent","useSanityCreateConfig","getSanityCreateLinkMetadata","createLinkMetadata","LONG_ENOUGH_BUT_NOT_TOO_LONG","useConditionalToast","TOAST_DELAY","DocumentNotInReleaseBanner","currentRelease","isScheduledRelease","LATEST","createVersion","useVersionOperations","versionCreateState","setVersionCreateState","handleAddToRelease","lastUpdate","now","useCurrentTime","getTime","updateIntervalMs","currentTime","setCurrentTime","intervalId","setInterval","clearInterval","ResolvedLiveEdit","DraftLiveEditBanner","isPublishing","setPublishing","isDiscarding","setDiscarding","publish","discardChanges","liveEditResolveType","handlePublish","handleDiscard","OpenReleaseToEditBanner","isPinnedDraftOrPublished","onlyHasVersions","useOnlyHasVersions","OpenReleaseToEditBannerInner","setPerspective","useSetPerspective","currentVersion","documentVersionsTitleList","handleGoToEdit","VersionInlineBadge","ScheduledReleaseBanner","date","UnpublishedDocumentBanner","willBeUnpublished","isGoingToUnpublish","UnpublishIcon","TitleContainer","heading","FormHeader","isSingleton","__experimental_formPreviewTitle","ev","FormView","margins","openPath","isLocked","transactionSyncLock","pair","documentEvents","tap","prepareMutationEvent","prepareRebaseEvent","hasRev","_rev","patches","handleInitialValue","useEffectEvent","formRef","setFormRef","focusedFirstDescendant","setFocusedFirstDescendant","focusFirstDescendant","isReadOnly","readOnly","Spinner","PresenceOverlay","mutations","mut","patch","fromMutationPatches","remotePatches","remoteMutations","localPatches","localMutations","DocumentHeaderTabs","activeViewId","views","tabPanelId","view","DocumentHeaderTab","label","viewId","setView","DocumentHeaderTitle","FavoriteToggle","documentExists","isFavorited","isReady","favorite","unfavorite","useManageFavorite","StarFilledIcon","StarIcon","DocumentPanelSubHeader","activeWorkspace","useActiveWorkspace","publishedDocId","showTabs","showBackButton","ArrowLeftIcon","CapabilityGate","favoriteToggle","DocumentBox","ScrollContainer","$disabled","DocumentPanel","footerHeight","headerHeight","isInspectOpen","setDocumentPanelPortalElement","footer","permissions","isPermissionsLoading","isSanityCreateLinked","showCreateBanner","parentPortal","usePortal","_portalElement","documentScrollElement","setDocumentScrollElement","formContainerElement","activeView","splitPanes","formViewHidden","ActiveViewComponent","historical","activeViewNode","isLiveEdit","scrollTo","inspectDialog","showInspector","isSystemBundle","isPinnedDraftOrPublish","banners","showFormView","_DEBUG","freeze","LOADING_PANE","DOCUMENT_PANEL_PORTAL_ELEMENT","POPOVER_FALLBACK_PLACEMENTS","DIALOG_WIDTH_TO_UI_WIDTH","small","medium","large","full","ConfirmDialog","dialog","referenceElement","ConfirmDialogContent","cancelButtonIcon","cancelButtonText","confirmButtonIcon","confirmButtonText","isTopLayer","useLayer","useGlobalKeyDown","Grid","ModalDialog","showCloseButton","PopoverDialog","PopoverDialogContent","DocumentActionPortalProvider","ActionStateDialog","modalId","unknownModal","ActionDialogWrapper","actionStates","actionIndex","setActionIndex","currentAction","ActionMenuButton","idPrefix","setReferenceElement","preventOverflow","popoverProps","actionState","renderActionDialog","ActionMenuListItem","onHandle","String","replace","tooltipProps","toUpperCase","DISABLED_REASON_TITLE_KEY","NOTHING_TO_DELETE","NOT_READY","DeleteAction","onComplete","setIsDeleting","paneSetIsDeleting","deleteOp","isConfirmDialogOpen","setConfirmDialogOpen","handleCancel","handleConfirm","handle","useDocumentPairPermissions","TrashIcon","DISABLED_REASON_KEY","NO_CHANGES","NOT_PUBLISHED","DiscardChangesAction","isPublished","ResetIcon","NOTHING_TO_DUPLICATE","DuplicateAction","duplicate","isDuplicating","setDuplicating","dupeId","uuid","duplicateSuccess","firstValueFrom","operationEvents","HistoryRestoreAction","revision","isRevisionInitial","isRevisionLatest","RevertIcon","DocumentPublished","LIVE_EDIT_ENABLED","ALREADY_PUBLISHED","publishedAt","AlreadyPublished","useTemporalPhrase","timeSincePublished","useRelativeTime","PublishAction","publishState","setPublishState","validationStatus","useValidationStatus","syncState","useSyncState","changesOpen","isValidationErrorMarker","hasValidationErrors","publishScheduled","setPublishScheduled","isSyncing","isValidating","_updatedAt","hasDraft","doPublish","validationComplete","didPublish","publishedImmediately","previouslyPublished","PublishIcon","UnpublishAction","unpublish","isDraft","DocumentStatusBarActionsInner","showMenu","__internal_tasks","useSource","firstActionState","menuActionStates","buttonElement","setButtonElement","Hotkeys","showFirstActionButton","sideMenuItems","footerAction","DocumentStatusBarActions","allActions","isInitialValueLoading","initialValueResolved","renderDocumentStatusBarActions","HistoryStatusBarActions","revisionId","isRestoreAction","historyActions","toLowerCase","TooltipContent","intendedPublishAt","DATE_TIME_FORMAT","dateStyle","timeStyle","DocumentPerspectiveList","dateTimeFormat","useDateTimeFormat","handlePerspectiveChange","perspective","isPublishedChipDisabled","getReleaseChipState","isReleaseHistoryMatch","isPublishSelected","isDraftSelected","displayedId","isDraftDisabled","VersionChip","format","menuReleaseId","releasesLoading","fromRelease","isVersion","releaseState","HorizontalScroller","getTheme_v2","rgba","DocumentPanelHeader","_props","onMenuAction","onPaneClose","onPaneSplit","unstable_languageFilter","hasGroupSiblings","useFieldActions","menuButtonNodes","showSplitPaneButton","splitViews","showSplitPaneCloseButton","showPaneGroupCloseButton","renderPaneActions","renderedActions","LanguageFilterComponent","SplitVerticalIcon","DocumentPanelHeaderActionDialogDeferred","useDeferredValue","DocumentPanelHeaderActionDialog","SpacerButton","size","pointerEvents","visibility","BADGE_TONES","primary","success","warning","danger","DocumentBadgesInner","DocumentBadgesDeferred","DocumentBadges","renderDocumentBadges","badge","Badge","whiteSpace","TIMELINE_ICON_COMPONENTS","create","discardDraft","initial","editDraft","EditIcon","editLive","getTimelineEventIconComponent","hideScrollbarOnExpand","listWrapper","getElementById","TIMELINE_LIST_WRAPPER_ID","firstChildren","scrollHeight","clientHeight","currentStyle","getComputedStyle","overflowY","FlipIcon","ChevronLeftIcon","ExpandableTimelineItemButton","stopPropagation","handleExpandClick","StackWrapper","ListWrapper","$maxHeight","$visible","TIMELINE_ITEM_I18N_KEY_MAPPING","UserAvatarStack","maxLength","userIds","withTooltip","userId","UserAvatar","AvatarStack","IconBox","$color","avatar","TIMELINE_ITEM_EVENT_TONE","withinSelection","RELATIVE_TIME_OPTIONS","minimal","NameSkeleton","Skeleton","font","UserLine","user","useUser","AvatarSkeleton","collaborators","TimelineItem","chunk","optionsMenu","endTimestamp","timestamp","IconComponent","authors","authorUserIds","collaboratorsUsersIds","isSelectable","dateFormat","updatedTimeAgo","parsedDate","formattedTimestamp","evt","isNonPublishChunk","isPublishChunk","getPreviousPublishAction","chunks","previousPublish","addChunksMetadata","forEach","Timeline","hasMoreChunks","lastChunk","selectedChunk","onLoadMore","listMaxHeight","selectedChunkId","chunksWithMetadata","expandedParents","setExpandedParents","filteredChunks","handleExpandParent","selectedIndex","handleSelectChunk","timelineChunk","c","renderItem","activeIndex","CommandList","TimelineError","versionError","TextWithTone","TIMELINE_MENU_PORTAL","TimelineMenu","setTimelineRange","timelineError","timelineStore","button","setButton","popoverRef","setPopoverRef","useTimelineSelector","realRevChunk","sinceTime","handleOpen","handleGlobalKeyDown","focus","selectRev","revChunk","sinceId","revId","findRangeForRev","selectSince","sinceChunk","findRangeForSince","handleLoadMore","loadMore","formatParams","revLabel","sinceLabel","buttonLabel","StyledMotionPath","motion","Circle","Arrows","Checkmark","rotateAnimation","keyframes","RotateGroup","root","syncing","scale","transition","saved","changes","circle","strokeDasharray","strokeDashoffset","arrows","checkmark","pathLength","AnimatedStatusIcon","STATUS_DICTIONARY","i18nKey","DocumentStatusPulse","currentStatus","MotionButton","MotionBox","ButtonSkeleton","DocumentStatusButton","author","translationKey","onHistoryOpen","onHistoryClose","relativeTime","FallbackStatus","createDocumentVersion","editDocumentVersion","EventsStatus","events","useEvents","TimelineStatus","TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY","SYNCING_TIMEOUT","SAVED_TIMEOUT","DocumentStatusLine","setStatus","eventsEnabled","beta","eventsAPI","lastUpdated","timerId","timerId_0","AnimatePresence","StatusText","RevisionStatusLine","RestoreIcon","useResizeObserver","onResize","resizeObserver","observe","unobserve","CONTAINER_BREAKPOINT","AnimatedCard","DocumentStatusBar","actionsBoxRef","onDocumentChange","CreateLinkedActions","documentLinkedActions","showingRevision","setCollapsed","contentRect","handleResize","shouldRender","flexShrink","marginLeft","KeyboardShortcutResponder","actionsBoxElement","onActionStart","onKeyDown","rootRef","As","activeAction","matchingStates","isHotkey","matchingState","handleKeyDown","DocumentActionShortcuts","setActiveIndex","renderDocumentActionShortcuts","getInspectorItems","currentInspector","hasValue","inspectorMenuItems","getInspectItem","JsonIcon","getCompareVersionsItem","documentIdStack","getProductionPreviewItem","previewUrl","EarthAmericasIcon","getMenuItems","inspectorItems","items","LinkIcon","DocumentLayoutError","DIALOG_PROVIDER_POSITION","DocumentLayoutFooter","documentPanelPortalElement","setFooterElement","setActionsBoxElement","zOffsets","portalElements","StyledChangeConnectorRoot","ChangeConnectorRoot","inspectOpen","paneParams","footerElement","headerElement","setHeaderElement","useGlobalCopyPasteElementHandler","setInspectorMenuItems","rootFieldActionNodes","setRootFieldActionNodes","footerRect","headerRect","handleKeyUp","onConnectorSetFocus","GetFormValueProvider","FieldActionsResolver","FieldActionsProvider","paneDialog","changesInspectorTab","useDocumentLayoutComponent","DocumentURLCopied","getInitialValueTemplateOpts","opts","panePayload","structureNodeTemplate","templateName","urlTemplate","typeTemplates","useDocumentPaneInitialValue","paneOptions","templateParameters","initialValueRaw","useInitialValue","useDocumentPaneInspector","inspectorsResolver","inspectorName","setInspectorName","inspectParamRef","historyInspector","closeInspectorName","nextInspectorName","nextInspector","currentParams","onOpen","handleHistoryClose","handleHistoryOpen","reviewChanges","toggleLegacyInspect","toggle","omit","handleLegacyInspectClose","handleInspectorAction","usePreviewUrl","resolveProductionUrl","BehaviorSubject","subject","asObservable","DocumentPaneProvider","onFocusPath","forcedVersion","historyStore","store","timelineReady","revisionDocument","onOlderRevision","sinceDocument","isPristine","setDocumentMeta","useCopyPaste","documentActions","documentBadges","unstable_fieldActions","fieldActionsResolver","languageFilterResolver","setPaneParams","viewsProp","documentIdRaw","diffViewRouter","initialValue","getIsDeleted","getComparisonValue","getIsReadOnly","getDisplayed","formReady","formStateRef","initialFocusPath","getFormDocumentValue","getDocumentVersionType","actionsPerspective","documentActionsProps","versionType","versionName","languageFilter","newSince","newRev","handlePaneClose","closeCurrent","handlePaneSplit","duplicateCurrent","handleMenuAction","toString","startsWith","restParams","pathFromUrl","resolveKeyedPath","DocumentEventsPane","usePaneOptions","showingPublishedOnDraft","eventsStore","useEventsStore","sinceRevision","historyStoreProps","PerspectiveProvider","EventsProvider","isDeleteDocumentGroupEvent","isDeleteDocumentVersionEvent","DocumentPaneWithLegacyTimelineStore","setTimelineError","onError","useTimelineStore","revTime","sinceAttributes","timelineDisplayed","_temp5","_temp6","_temp7","state_1","state_2","state_3","state_4","state_5","DocumentPaneProviderWrapper","useResetHistoryParams","isMounted","_perspective","preserveRev","updateHistoryParams","DocumentPane","parentSourceName","CopyPasteProvider","SourceProvider","DocumentPaneInner","resolveNewDocumentOptions","isLoaded","isDocumentLoaded","useDocumentType","mergeDocumentType","providerProps","handleEditReference","childParams","routerPanesStateLength","activePath","ReferenceInputOptionsProvider","PARTIAL_PAGE_LIMIT","FULL_LIST_LIMIT","DEFAULT_ORDERING","by","field","EMPTY_RECORD","RootBox","$opacity","CommandListBox","SKELETON_ITEMS","keys","LoadingView","num","DocumentListPaneContent","childItemId","filterIsSimpleTypeConstraint","hasMaxItems","hasSearchQuery","isLazyLoading","loadingVariant","onEndReached","onRetry","paneTitle","searchInputElement","showIcons","setShouldRender","handleEndReached","isLastItem","showSpinner","showMaxItemsMessage","limit","noDocumentsContent","ErrorActions","mainContent","removePublishedWithDrafts","collate","entry","hasPublished","applyOrderingFunctions","order","orderBy","mapWith","fieldType","tryResolveSchemaTypeForPath","fieldExtendsType","jsonType","baseType","pathSegments","PathUtils","fromString","segment","getFieldTypeByName","isKeySegment","isIndexSegment","memberType","otherType","isReferenceSchemaType","refType","otherRefType","to","fieldName","fields","ofType","findTypes","base","types","isSplat","findStaticTypesInFilter","swr","createSWR","listenSearchQuery","searchQuery","staticTypeNames","maxFieldDepth","searchStrategy","sortBy","extendedProjection","events$","defer","includeAllVersions","includeResult","mergeMap","throwError","share","welcome$","mutationAndReconnect$","partition","swrKey","take","asyncScheduler","leading","trailing","exhaustMapWithTrailing","typeNames","getSearchableTypes","getExtendedProjection","search","createSearch","strategy","maxDepth","doFetch","__unstable_extendedProjection","comments","skipSortByScore","hits","hit","fromCache","INITIAL_QUERY_STATE","isLoadingFullList","useDocumentList","searchFilter","paramsProp","sortOrder","useWorkspace","useSearchMaxFieldDepth","typeNameFromFilter","onRetry$","observableCallback","onFetchFullList$","onLoadFullList","queryResults$","listenSearchQueryArgs","partialList$","fullList$","withLatestFrom","takeUntil","caught$","safeError","scan","nonErrorThrownWarning","thrown","rotate","fadeIn","AnimatedSpinnerIcon","SpinnerIcon","SubtleSpinnerIcon","DelayedSubtleSpinnerIcon","DocumentListPane","sortOrderRaw","displayOptions","useShallowUnique","staticTypes","setSearchQuery","searchInputValue","setSearchInputValue","setSearchInputElement","sortWithOrderingFn","documentListIsLoading","trim","handleQueryChange","useObservableEvent","event$","debounce","handleClearSearch","handleSearchKeyDown","enableSearchSpinner","setEnableSearchSpinner","textInputIcon","initialValueTemplates","setLayout","setSortOrder","StructurePaneHeader","DocumentSheetListSelect","row","selectedAnchor","setSelectedAnchor","meta","handleOnClick","shiftKey","shiftClickIndex","lowerIndex","upperIndex","additionalSelectedRows","getRowModel","flatRows","currentSelectedRows","getSelectedRowModel","rows","setRowSelection","nextSelectedRows","rowId","isRowCurrentlySelected","getIsSelected","toggleSelected","Checkbox","paddingLeft","getCanSelect","useDocumentSheetListContext","DocumentSheetListContext","DocumentSheetListProvider","selectedAnchorCellDetails","setSelectedAnchorCellDetails","selectedRangeCellIndexes","setSelectedRangeCellIndexes","clearAndSetFocusSelection","nextAnchorDetails","activeElement","HTMLElement","blur","resetFocusSelection","changeSelectionColumn","visibleColumns","getVisibleLeafColumns","columnIndexAfterMove","col","colId","rowIndex","changeSelectionRange","previousSelection","anchorIndex","getNextIndex","startingIndex","firstSelectedIndex","lastIndexSelected","nextIndex","setSelectedAnchorCell","handleEscapePress","nextAnchorCellDetails","handleUpDownKey","isShiftKey","offset","newSelectedCellRowIndex","handleAnchorKeydown","handleAnchorClick","contains","focusAnchorCell","anchorCellDetails","getStateByCellId","submitFocusedCell","DataCell","td","PinnedDataCell","SheetListCellInner","getValue","column","cellId","renderValue","setRenderValue","isDirty","setIsDirty","inputRef","cellState","handleOnFocus","patchDocument","handleProgrammaticFocus","HTMLInputElement","handleOnMouseDown","detail","handleOnEnterDown","handleOnChange","handleOnBlur","handlePaste","clipboardData","getData","handleCopy","getBorderStyle","inputProps","Select","boxShadow","SheetListCell","cell","isPinned","getIsPinned","Cell","borderWidth","getIsLastColumn","getStart","borderRight","getSize","flexRender","columnDef","getContext","VISIBLE_COLUMN_LIMIT","PreviewCell","displayValue","columnHelper","createColumnHelper","SUPPORTED_FIELDS","getColsFromSchemaType","parentalField","tableColumns","nextCol","accessor","enableHiding","info","isObjectSchemaType","columns","isAccessorKeyColumnDef","isGroupColumnDef","flatColumns","cols","useDocumentSheetColumns","documentSchemaType","display","getIsSomeRowsSelected","getToggleAllPageRowsSelectedHandler","initialColumnsVisibility","accCols","countAllowedVisible","visibilityKey","ColumnsControl","isVisibleLimitReached","getCanHide","setInitialColumns","resetColumnVisibility","handleColumnOnChange","toggleVisibility","getColumnVisibilityDisabled","isColumnVisible","getIsVisible","isSingleColumnVisible","maxHeight","getAllLeafColumns","SearchContainer","DocumentSheetListFilter","useSearchState","filtersVisible","SearchHeader","Filters","Header","th","PinnedHeader","HoverMenu","DocumentSheetListHeader","headerGroup","headerTitle","depth","parent","HeaderTag","canShowHeaderMenu","boxSizing","EllipsisHorizontalIcon","DocumentSheetListPaginator","setPageIndex","getCanPreviousPage","DoubleChevronLeftIcon","previousPage","getState","pagination","pageIndex","getPageCount","nextPage","getCanNextPage","DoubleChevronRightIcon","pageSize","setPageSize","Number","createDocumentsSet","documentsReducer","nextDocumentResult","_","restDocuments","updatedDocument","LISTEN_OPTIONS","useDocumentSheetListStore","QUERY","dispatch","useReducer","setIsLoading","res","initialFetch","handleListenerEvent","err_0","listener$","uniques","values","dataAsArray","useDocumentSheetList","h","PaneContainer","TableContainer","DocumentSheetListPaneInner","totalRows","useReactTable","getCoreRowModel","getFilteredRowModel","getPaginationRowModel","autoResetPageIndex","initialState","columnPinning","columnVisibility","getRowId","fieldId","renderRow","getVisibleCells","createElement","rowsCount","getHeaderGroups","headers","DocumentSheetListPane","schemaTypeName","isDocumentSchemaType","SearchProvider","addSelectedStateToMenuItems","isEqual","setPrevious","shallowEquals","defaultLayout","defaultOrdering","sourceName","defaultSortOrder","menuItemsWithSelectedState","isSheetListLayout","LiveEditBadge","activePanes","setActivePanes","getIntentState","editDocumentId","canHandleIntent","getPaneParams","ChangesInspector","showChanges","scrollRef","setScrollRef","diff","selectionState","isComparingCurrent","structureT","FieldWrapper","ChangeFieldWrapper","rootDiff","showFromValue","documentContext","NoChanges","ChangeList","DocumentChangeContext","getIsSelectable","isUnpublishDocumentEvent","isScheduleDocumentVersionEvent","isUnscheduleDocumentVersionEvent","EventTimelineItem","cursor","Event","PublishedEventMenu","portalContext","versionId","versionRevisionId","handleOpenReleaseDocument","handleOpenDraftDocument","RELEASES_INTENT","textDecoration","children_0","releaseTitle","children_1","fallbackPlacements","children_2","TimelineItemWrapper","CHILDREN_ITEMS_VARIANTS","animate","exit","ITEM_HEIGHT","EventsTimeline","allEvents","hasMoreEvents","selectedEventId","fetchEventChildren","selectedEvent","expandingParents","setExpandingParents","isCreateDocumentVersionEvent","isEditDocumentVersionEvent","isExpanding","renderOptionsMenu","isPublishDocumentVersionEvent","creationEvent","showExpandingLoader","isLastEvent","EventsTimelineMenu","nextCursor","eventsError","findRangeForRevision","loadMoreEvents","expandEvent","revEvent","sinceEvent","SpinnerContainer","DIFF_INITIAL_VALUE","EventsInspector","getChangesList","changesList$","diffLoading","diffError","toEvent","sinceEvents","ChangesError","EventsSelector","showList","listHeight","setListHeight","getScrollerRef","initialLoad","HistorySelector","FadeInFlex","TABS","isValidTab","tab","ChangesTabs","paneRouterTab","setPaneRouterTab","changesInspector","getPathTitles","f","itemType","_key","MARKER_ICON","MARKER_TONE","ValidationInspector","marker","ValidationCard","errorInfo","setErrorInfo","level","DocumentNodePathBreadcrumbs","pathTitles","fontWeight","validationMarkers","hasErrors","isValidationError","hasWarnings","isValidationWarning","CheckmarkCircleIcon","validationInspector","legacyEditParamsToState","decodeURIComponent","encodePanesSegment","encodeChunks","encodeURIComponent","legacyEditParamsToPath","toState","pathSegment","parsePanesSegment","toPath","router","route","intents","transform","panePattern","isParam","test","isPayloadLike","exclusiveParams","isTruthy","parseChunks","sibling","tryParseBase64Payload","firstSibling","paneIsFirstSibling","sameAsFirst","encodedPayload","encodeJsonParams","encodedParams","valueFromFirstSibling","flat","parseOldPanesSegment","restOfSiblings","buffer","match","payloadChunk","tryParsePayload","decodeJsonParams","definePlugin","MasterDetailIcon","prevActions","prevBadges","prevInspectors","tools","lazy","canHandleCreateIntent","canHandleEditIntent","controlsDocumentTitle","__internalApplicationType","bundles","structureUsEnglishLocaleBundle"],"mappings":"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"}